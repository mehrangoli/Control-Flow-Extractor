Temporary breakpoint 1 at 0x4082bf: file main.cpp, line 65.
Temporary breakpoint 2 at 0x40bbaf: file icache.h, line 60.
Temporary breakpoint 3 at 0x41c4b3: file icache.cpp, line 50.
Temporary breakpoint 4 at 0x421d65: file exec.cpp, line 44.
Temporary breakpoint 5 at 0x4234d0: file pic.cpp, line 42.
Temporary breakpoint 6 at 0x41d44b: file decode.cpp, line 45.
Temporary breakpoint 7 at 0x40b4cf: file bios.h, line 57.
Temporary breakpoint 8 at 0x41bded: file bios.cpp, line 47.
Temporary breakpoint 9 at 0x41c1a0: file paging.cpp, line 43.
Temporary breakpoint 10 at 0x422347: file mmxu.cpp, line 48.
Temporary breakpoint 11 at 0x40d527: file dcache.h, line 58.
Temporary breakpoint 12 at 0x423035: file dcache.cpp, line 45.
Temporary breakpoint 13 at 0x422b1f: file floating.cpp, line 43.
Temporary breakpoint 14 at 0x40bf75: file fetch.h, line 67.
Temporary breakpoint 15 at 0x41c807: file fetch.cpp, line 44.
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib64/libthread_db.so.1".

Temporary breakpoint 1, sc_main () at main.cpp:65
warning: Source file is more recent than executable.
65	  sc_report_handler::set_actions("/IEEE_Std_1666/deprecated", SC_DO_NOTHING);
Dump of assembler code for function sc_main(int, char**):
   0x00000000004082a6 <+0>:	push   %rbp
   0x00000000004082a7 <+1>:	mov    %rsp,%rbp
   0x00000000004082aa <+4>:	push   %rbx
   0x00000000004082ab <+5>:	sub    $0xae48,%rsp
   0x00000000004082b2 <+12>:	mov    %edi,-0xae44(%rbp)
   0x00000000004082b8 <+18>:	mov    %rsi,-0xae50(%rbp)
=> 0x00000000004082bf <+25>:	mov    $0x1,%esi
   0x00000000004082c4 <+30>:	mov    $0x4239b7,%edi
   0x00000000004082c9 <+35>:	callq  0x407af0 <_ZN7sc_core17sc_report_handler11set_actionsEPKcj@plt>
   0x00000000004082ce <+40>:	lea    -0x2d0(%rbp),%rax
   0x00000000004082d5 <+47>:	mov    $0x4239d1,%esi
   0x00000000004082da <+52>:	mov    %rax,%rdi
   0x00000000004082dd <+55>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004082e2 <+60>:	lea    -0x3a0(%rbp),%rax
   0x00000000004082e9 <+67>:	mov    $0x4239de,%esi
   0x00000000004082ee <+72>:	mov    %rax,%rdi
   0x00000000004082f1 <+75>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004082f6 <+80>:	lea    -0x470(%rbp),%rax
   0x00000000004082fd <+87>:	mov    $0x4239e5,%esi
   0x0000000000408302 <+92>:	mov    %rax,%rdi
   0x0000000000408305 <+95>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x000000000040830a <+100>:	lea    -0x520(%rbp),%rax
   0x0000000000408311 <+107>:	mov    $0x4239ec,%esi
   0x0000000000408316 <+112>:	mov    %rax,%rdi
   0x0000000000408319 <+115>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x000000000040831e <+120>:	lea    -0x5d0(%rbp),%rax
   0x0000000000408325 <+127>:	mov    $0x4239f4,%esi
   0x000000000040832a <+132>:	mov    %rax,%rdi
   0x000000000040832d <+135>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408332 <+140>:	lea    -0x680(%rbp),%rax
   0x0000000000408339 <+147>:	mov    $0x4239ff,%esi
   0x000000000040833e <+152>:	mov    %rax,%rdi
   0x0000000000408341 <+155>:	callq  0x40ea84 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)1>::sc_signal(char const*)>
   0x0000000000408346 <+160>:	lea    -0x750(%rbp),%rax
   0x000000000040834d <+167>:	mov    $0x423a0b,%esi
   0x0000000000408352 <+172>:	mov    %rax,%rdi
   0x0000000000408355 <+175>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x000000000040835a <+180>:	movl   $0x2,-0x14(%rbp)
   0x0000000000408361 <+187>:	lea    -0x800(%rbp),%rax
   0x0000000000408368 <+194>:	mov    $0x423a16,%esi
   0x000000000040836d <+199>:	mov    %rax,%rdi
   0x0000000000408370 <+202>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408375 <+207>:	lea    -0x8d0(%rbp),%rax
   0x000000000040837c <+214>:	mov    $0x423a21,%esi
   0x0000000000408381 <+219>:	mov    %rax,%rdi
   0x0000000000408384 <+222>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408389 <+227>:	lea    -0x9a0(%rbp),%rax
   0x0000000000408390 <+234>:	mov    $0x423a30,%esi
   0x0000000000408395 <+239>:	mov    %rax,%rdi
   0x0000000000408398 <+242>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x000000000040839d <+247>:	lea    -0xa50(%rbp),%rax
   0x00000000004083a4 <+254>:	mov    $0x423a3d,%esi
   0x00000000004083a9 <+259>:	mov    %rax,%rdi
   0x00000000004083ac <+262>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004083b1 <+267>:	lea    -0xb20(%rbp),%rax
   0x00000000004083b8 <+274>:	mov    $0x423a49,%esi
   0x00000000004083bd <+279>:	mov    %rax,%rdi
   0x00000000004083c0 <+282>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004083c5 <+287>:	lea    -0xbf0(%rbp),%rax
   0x00000000004083cc <+294>:	mov    $0x423a56,%esi
   0x00000000004083d1 <+299>:	mov    %rax,%rdi
   0x00000000004083d4 <+302>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004083d9 <+307>:	lea    -0xca0(%rbp),%rax
   0x00000000004083e0 <+314>:	mov    $0x423a63,%esi
   0x00000000004083e5 <+319>:	mov    %rax,%rdi
   0x00000000004083e8 <+322>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004083ed <+327>:	lea    -0xd50(%rbp),%rax
   0x00000000004083f4 <+334>:	mov    $0x423a74,%esi
   0x00000000004083f9 <+339>:	mov    %rax,%rdi
   0x00000000004083fc <+342>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408401 <+347>:	lea    -0xe20(%rbp),%rax
   0x0000000000408408 <+354>:	mov    $0x423a8a,%esi
   0x000000000040840d <+359>:	mov    %rax,%rdi
   0x0000000000408410 <+362>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408415 <+367>:	lea    -0xef0(%rbp),%rax
   0x000000000040841c <+374>:	mov    $0x423a92,%esi
   0x0000000000408421 <+379>:	mov    %rax,%rdi
   0x0000000000408424 <+382>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408429 <+387>:	lea    -0xfb0(%rbp),%rax
   0x0000000000408430 <+394>:	mov    $0x423a9f,%esi
   0x0000000000408435 <+399>:	mov    %rax,%rdi
   0x0000000000408438 <+402>:	callq  0x40ed00 <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)1>::sc_signal(char const*)>
   0x000000000040843d <+407>:	lea    -0x1080(%rbp),%rax
   0x0000000000408444 <+414>:	mov    $0x423aab,%esi
   0x0000000000408449 <+419>:	mov    %rax,%rdi
   0x000000000040844c <+422>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408451 <+427>:	lea    -0x1130(%rbp),%rax
   0x0000000000408458 <+434>:	mov    $0x423ab6,%esi
   0x000000000040845d <+439>:	mov    %rax,%rdi
   0x0000000000408460 <+442>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408465 <+447>:	lea    -0x1200(%rbp),%rax
   0x000000000040846c <+454>:	mov    $0x423ac2,%esi
   0x0000000000408471 <+459>:	mov    %rax,%rdi
   0x0000000000408474 <+462>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408479 <+467>:	lea    -0x12b0(%rbp),%rax
   0x0000000000408480 <+474>:	mov    $0x423ad4,%esi
   0x0000000000408485 <+479>:	mov    %rax,%rdi
   0x0000000000408488 <+482>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x000000000040848d <+487>:	lea    -0x1380(%rbp),%rax
   0x0000000000408494 <+494>:	mov    $0x423ae4,%esi
   0x0000000000408499 <+499>:	mov    %rax,%rdi
   0x000000000040849c <+502>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004084a1 <+507>:	lea    -0x1450(%rbp),%rax
   0x00000000004084a8 <+514>:	mov    $0x423af1,%esi
   0x00000000004084ad <+519>:	mov    %rax,%rdi
   0x00000000004084b0 <+522>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004084b5 <+527>:	lea    -0x1520(%rbp),%rax
   0x00000000004084bc <+534>:	mov    $0x423b02,%esi
   0x00000000004084c1 <+539>:	mov    %rax,%rdi
   0x00000000004084c4 <+542>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004084c9 <+547>:	lea    -0x15d0(%rbp),%rax
   0x00000000004084d0 <+554>:	mov    $0x423b08,%esi
   0x00000000004084d5 <+559>:	mov    %rax,%rdi
   0x00000000004084d8 <+562>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004084dd <+567>:	lea    -0x16a0(%rbp),%rax
   0x00000000004084e4 <+574>:	mov    $0x423b1c,%esi
   0x00000000004084e9 <+579>:	mov    %rax,%rdi
   0x00000000004084ec <+582>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004084f1 <+587>:	lea    -0x1770(%rbp),%rax
   0x00000000004084f8 <+594>:	mov    $0x423b2e,%esi
   0x00000000004084fd <+599>:	mov    %rax,%rdi
   0x0000000000408500 <+602>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408505 <+607>:	lea    -0x1820(%rbp),%rax
   0x000000000040850c <+614>:	mov    $0x423b3a,%esi
   0x0000000000408511 <+619>:	mov    %rax,%rdi
   0x0000000000408514 <+622>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408519 <+627>:	lea    -0x18f0(%rbp),%rax
   0x0000000000408520 <+634>:	mov    $0x423b4b,%esi
   0x0000000000408525 <+639>:	mov    %rax,%rdi
   0x0000000000408528 <+642>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x000000000040852d <+647>:	lea    -0x19a0(%rbp),%rax
   0x0000000000408534 <+654>:	mov    $0x423b5b,%esi
   0x0000000000408539 <+659>:	mov    %rax,%rdi
   0x000000000040853c <+662>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408541 <+667>:	lea    -0x1a70(%rbp),%rax
   0x0000000000408548 <+674>:	mov    $0x423b68,%esi
   0x000000000040854d <+679>:	mov    %rax,%rdi
   0x0000000000408550 <+682>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408555 <+687>:	lea    -0x1b20(%rbp),%rax
   0x000000000040855c <+694>:	mov    $0x423b70,%esi
   0x0000000000408561 <+699>:	mov    %rax,%rdi
   0x0000000000408564 <+702>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408569 <+707>:	lea    -0x1bd0(%rbp),%rax
   0x0000000000408570 <+714>:	mov    $0x423b87,%esi
   0x0000000000408575 <+719>:	mov    %rax,%rdi
   0x0000000000408578 <+722>:	callq  0x40f00a <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x000000000040857d <+727>:	lea    -0x1ca0(%rbp),%rax
   0x0000000000408584 <+734>:	mov    $0x423b94,%esi
   0x0000000000408589 <+739>:	mov    %rax,%rdi
   0x000000000040858c <+742>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408591 <+747>:	lea    -0x1d50(%rbp),%rax
   0x0000000000408598 <+754>:	mov    $0x423ba2,%esi
   0x000000000040859d <+759>:	mov    %rax,%rdi
   0x00000000004085a0 <+762>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004085a5 <+767>:	lea    -0x1e20(%rbp),%rax
   0x00000000004085ac <+774>:	mov    $0x423bb1,%esi
   0x00000000004085b1 <+779>:	mov    %rax,%rdi
   0x00000000004085b4 <+782>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004085b9 <+787>:	lea    -0x1ed0(%rbp),%rax
   0x00000000004085c0 <+794>:	mov    $0x423bbc,%esi
   0x00000000004085c5 <+799>:	mov    %rax,%rdi
   0x00000000004085c8 <+802>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004085cd <+807>:	lea    -0x1f80(%rbp),%rax
   0x00000000004085d4 <+814>:	mov    $0x423bc8,%esi
   0x00000000004085d9 <+819>:	mov    %rax,%rdi
   0x00000000004085dc <+822>:	callq  0x40f00a <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004085e1 <+827>:	lea    -0x2050(%rbp),%rax
   0x00000000004085e8 <+834>:	mov    $0x423bcf,%esi
   0x00000000004085ed <+839>:	mov    %rax,%rdi
   0x00000000004085f0 <+842>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004085f5 <+847>:	lea    -0x2100(%rbp),%rax
   0x00000000004085fc <+854>:	mov    $0x423bd9,%esi
   0x0000000000408601 <+859>:	mov    %rax,%rdi
   0x0000000000408604 <+862>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408609 <+867>:	lea    -0x21d0(%rbp),%rax
   0x0000000000408610 <+874>:	mov    $0x423be1,%esi
   0x0000000000408615 <+879>:	mov    %rax,%rdi
   0x0000000000408618 <+882>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x000000000040861d <+887>:	lea    -0x2280(%rbp),%rax
   0x0000000000408624 <+894>:	mov    $0x423beb,%esi
   0x0000000000408629 <+899>:	mov    %rax,%rdi
   0x000000000040862c <+902>:	callq  0x40f00a <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408631 <+907>:	lea    -0x2330(%rbp),%rax
   0x0000000000408638 <+914>:	mov    $0x423bf1,%esi
   0x000000000040863d <+919>:	mov    %rax,%rdi
   0x0000000000408640 <+922>:	callq  0x40f00a <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408645 <+927>:	lea    -0x2400(%rbp),%rax
   0x000000000040864c <+934>:	mov    $0x423bf7,%esi
   0x0000000000408651 <+939>:	mov    %rax,%rdi
   0x0000000000408654 <+942>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408659 <+947>:	lea    -0x24d0(%rbp),%rax
   0x0000000000408660 <+954>:	mov    $0x423c01,%esi
   0x0000000000408665 <+959>:	mov    %rax,%rdi
   0x0000000000408668 <+962>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x000000000040866d <+967>:	lea    -0x25a0(%rbp),%rax
   0x0000000000408674 <+974>:	mov    $0x423c0b,%esi
   0x0000000000408679 <+979>:	mov    %rax,%rdi
   0x000000000040867c <+982>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408681 <+987>:	lea    -0x2670(%rbp),%rax
   0x0000000000408688 <+994>:	mov    $0x423c18,%esi
   0x000000000040868d <+999>:	mov    %rax,%rdi
   0x0000000000408690 <+1002>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408695 <+1007>:	lea    -0x2740(%rbp),%rax
   0x000000000040869c <+1014>:	mov    $0x423c24,%esi
   0x00000000004086a1 <+1019>:	mov    %rax,%rdi
   0x00000000004086a4 <+1022>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004086a9 <+1027>:	lea    -0x2810(%rbp),%rax
   0x00000000004086b0 <+1034>:	mov    $0x423c2e,%esi
   0x00000000004086b5 <+1039>:	mov    %rax,%rdi
   0x00000000004086b8 <+1042>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004086bd <+1047>:	lea    -0x28c0(%rbp),%rax
   0x00000000004086c4 <+1054>:	mov    $0x423c38,%esi
   0x00000000004086c9 <+1059>:	mov    %rax,%rdi
   0x00000000004086cc <+1062>:	callq  0x40f00a <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004086d1 <+1067>:	lea    -0x2970(%rbp),%rax
   0x00000000004086d8 <+1074>:	mov    $0x423c41,%esi
   0x00000000004086dd <+1079>:	mov    %rax,%rdi
   0x00000000004086e0 <+1082>:	callq  0x40f00a <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004086e5 <+1087>:	lea    -0x2a20(%rbp),%rax
   0x00000000004086ec <+1094>:	mov    $0x423c4d,%esi
   0x00000000004086f1 <+1099>:	mov    %rax,%rdi
   0x00000000004086f4 <+1102>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004086f9 <+1107>:	lea    -0x2af0(%rbp),%rax
   0x0000000000408700 <+1114>:	mov    $0x423c5a,%esi
   0x0000000000408705 <+1119>:	mov    %rax,%rdi
   0x0000000000408708 <+1122>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x000000000040870d <+1127>:	lea    -0x2bc0(%rbp),%rax
   0x0000000000408714 <+1134>:	mov    $0x423c62,%esi
   0x0000000000408719 <+1139>:	mov    %rax,%rdi
   0x000000000040871c <+1142>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408721 <+1147>:	lea    -0x2c70(%rbp),%rax
   0x0000000000408728 <+1154>:	mov    $0x423c6a,%esi
   0x000000000040872d <+1159>:	mov    %rax,%rdi
   0x0000000000408730 <+1162>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408735 <+1167>:	lea    -0x2d20(%rbp),%rax
   0x000000000040873c <+1174>:	mov    $0x423c74,%esi
   0x0000000000408741 <+1179>:	mov    %rax,%rdi
   0x0000000000408744 <+1182>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408749 <+1187>:	lea    -0x2dd0(%rbp),%rax
   0x0000000000408750 <+1194>:	mov    $0x423c7e,%esi
   0x0000000000408755 <+1199>:	mov    %rax,%rdi
   0x0000000000408758 <+1202>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x000000000040875d <+1207>:	lea    -0x2e80(%rbp),%rax
   0x0000000000408764 <+1214>:	mov    $0x423c8b,%esi
   0x0000000000408769 <+1219>:	mov    %rax,%rdi
   0x000000000040876c <+1222>:	callq  0x40f00a <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408771 <+1227>:	lea    -0x2f50(%rbp),%rax
   0x0000000000408778 <+1234>:	mov    $0x423c98,%esi
   0x000000000040877d <+1239>:	mov    %rax,%rdi
   0x0000000000408780 <+1242>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408785 <+1247>:	lea    -0x3000(%rbp),%rax
   0x000000000040878c <+1254>:	mov    $0x423ca7,%esi
   0x0000000000408791 <+1259>:	mov    %rax,%rdi
   0x0000000000408794 <+1262>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408799 <+1267>:	lea    -0x30d0(%rbp),%rax
   0x00000000004087a0 <+1274>:	mov    $0x423cb5,%esi
   0x00000000004087a5 <+1279>:	mov    %rax,%rdi
   0x00000000004087a8 <+1282>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004087ad <+1287>:	lea    -0x31a0(%rbp),%rax
   0x00000000004087b4 <+1294>:	mov    $0x423cbe,%esi
   0x00000000004087b9 <+1299>:	mov    %rax,%rdi
   0x00000000004087bc <+1302>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004087c1 <+1307>:	lea    -0x3250(%rbp),%rax
   0x00000000004087c8 <+1314>:	mov    $0x423cc5,%esi
   0x00000000004087cd <+1319>:	mov    %rax,%rdi
   0x00000000004087d0 <+1322>:	callq  0x40f00a <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004087d5 <+1327>:	lea    -0x3320(%rbp),%rax
   0x00000000004087dc <+1334>:	mov    $0x423cca,%esi
   0x00000000004087e1 <+1339>:	mov    %rax,%rdi
   0x00000000004087e4 <+1342>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004087e9 <+1347>:	lea    -0x33f0(%rbp),%rax
   0x00000000004087f0 <+1354>:	mov    $0x423cd4,%esi
   0x00000000004087f5 <+1359>:	mov    %rax,%rdi
   0x00000000004087f8 <+1362>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004087fd <+1367>:	lea    -0x34c0(%rbp),%rax
   0x0000000000408804 <+1374>:	mov    $0x423cd6,%esi
   0x0000000000408809 <+1379>:	mov    %rax,%rdi
   0x000000000040880c <+1382>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408811 <+1387>:	lea    -0x3590(%rbp),%rax
   0x0000000000408818 <+1394>:	mov    $0x423cd8,%esi
   0x000000000040881d <+1399>:	mov    %rax,%rdi
   0x0000000000408820 <+1402>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408825 <+1407>:	lea    -0x3640(%rbp),%rax
   0x000000000040882c <+1414>:	mov    $0x423cda,%esi
   0x0000000000408831 <+1419>:	mov    %rax,%rdi
   0x0000000000408834 <+1422>:	callq  0x40f00a <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408839 <+1427>:	lea    -0x3710(%rbp),%rax
   0x0000000000408840 <+1434>:	mov    $0x423cdf,%esi
   0x0000000000408845 <+1439>:	mov    %rax,%rdi
   0x0000000000408848 <+1442>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x000000000040884d <+1447>:	lea    -0x37c0(%rbp),%rax
   0x0000000000408854 <+1454>:	mov    $0x423cec,%esi
   0x0000000000408859 <+1459>:	mov    %rax,%rdi
   0x000000000040885c <+1462>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408861 <+1467>:	lea    -0x3870(%rbp),%rax
   0x0000000000408868 <+1474>:	mov    $0x423cf4,%esi
   0x000000000040886d <+1479>:	mov    %rax,%rdi
   0x0000000000408870 <+1482>:	callq  0x40f286 <sc_core::sc_signal<int, (sc_core::sc_writer_policy)1>::sc_signal(char const*)>
   0x0000000000408875 <+1487>:	lea    -0x3930(%rbp),%rax
   0x000000000040887c <+1494>:	mov    $0x423cfa,%esi
   0x0000000000408881 <+1499>:	mov    %rax,%rdi
   0x0000000000408884 <+1502>:	callq  0x40ed00 <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)1>::sc_signal(char const*)>
   0x0000000000408889 <+1507>:	lea    -0x39e0(%rbp),%rax
   0x0000000000408890 <+1514>:	mov    $0x423d05,%esi
   0x0000000000408895 <+1519>:	mov    %rax,%rdi
   0x0000000000408898 <+1522>:	callq  0x40ea84 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)1>::sc_signal(char const*)>
   0x000000000040889d <+1527>:	lea    -0x3ab0(%rbp),%rax
   0x00000000004088a4 <+1534>:	mov    $0x423d0e,%esi
   0x00000000004088a9 <+1539>:	mov    %rax,%rdi
   0x00000000004088ac <+1542>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004088b1 <+1547>:	lea    -0x3b80(%rbp),%rax
   0x00000000004088b8 <+1554>:	mov    $0x423d14,%esi
   0x00000000004088bd <+1559>:	mov    %rax,%rdi
   0x00000000004088c0 <+1562>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004088c5 <+1567>:	lea    -0x3c50(%rbp),%rax
   0x00000000004088cc <+1574>:	mov    $0x423d1a,%esi
   0x00000000004088d1 <+1579>:	mov    %rax,%rdi
   0x00000000004088d4 <+1582>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004088d9 <+1587>:	lea    -0x3d20(%rbp),%rax
   0x00000000004088e0 <+1594>:	mov    $0x423d20,%esi
   0x00000000004088e5 <+1599>:	mov    %rax,%rdi
   0x00000000004088e8 <+1602>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004088ed <+1607>:	lea    -0x3df0(%rbp),%rax
   0x00000000004088f4 <+1614>:	mov    $0x423d26,%esi
   0x00000000004088f9 <+1619>:	mov    %rax,%rdi
   0x00000000004088fc <+1622>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408901 <+1627>:	lea    -0x3ec0(%rbp),%rax
   0x0000000000408908 <+1634>:	mov    $0x423d2c,%esi
   0x000000000040890d <+1639>:	mov    %rax,%rdi
   0x0000000000408910 <+1642>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408915 <+1647>:	lea    -0x3f70(%rbp),%rax
   0x000000000040891c <+1654>:	mov    $0x423d33,%esi
   0x0000000000408921 <+1659>:	mov    %rax,%rdi
   0x0000000000408924 <+1662>:	callq  0x40e808 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408929 <+1667>:	lea    -0x4040(%rbp),%rax
   0x0000000000408930 <+1674>:	mov    $0x423d3a,%esi
   0x0000000000408935 <+1679>:	mov    %rax,%rdi
   0x0000000000408938 <+1682>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x000000000040893d <+1687>:	lea    -0x4110(%rbp),%rax
   0x0000000000408944 <+1694>:	mov    $0x423d41,%esi
   0x0000000000408949 <+1699>:	mov    %rax,%rdi
   0x000000000040894c <+1702>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408951 <+1707>:	lea    -0x41c0(%rbp),%rax
   0x0000000000408958 <+1714>:	mov    $0x423d4c,%esi
   0x000000000040895d <+1719>:	mov    %rax,%rdi
   0x0000000000408960 <+1722>:	callq  0x40f00a <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408965 <+1727>:	lea    -0x4270(%rbp),%rax
   0x000000000040896c <+1734>:	mov    $0x423d54,%esi
   0x0000000000408971 <+1739>:	mov    %rax,%rdi
   0x0000000000408974 <+1742>:	callq  0x40f00a <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x0000000000408979 <+1747>:	lea    -0x4340(%rbp),%rax
   0x0000000000408980 <+1754>:	mov    $0x423d5d,%esi
   0x0000000000408985 <+1759>:	mov    %rax,%rdi
   0x0000000000408988 <+1762>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x000000000040898d <+1767>:	lea    -0x4410(%rbp),%rax
   0x0000000000408994 <+1774>:	mov    $0x423d6c,%esi
   0x0000000000408999 <+1779>:	mov    %rax,%rdi
   0x000000000040899c <+1782>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004089a1 <+1787>:	lea    -0x44e0(%rbp),%rax
   0x00000000004089a8 <+1794>:	mov    $0x423d7c,%esi
   0x00000000004089ad <+1799>:	mov    %rax,%rdi
   0x00000000004089b0 <+1802>:	callq  0x40e4fe <sc_core::sc_signal<bool, (sc_core::sc_writer_policy)0>::sc_signal(char const*)>
   0x00000000004089b5 <+1807>:	movsd  0x1ccdb(%rip),%xmm0        # 0x425698
   0x00000000004089bd <+1815>:	lea    -0x46f0(%rbp),%rax
   0x00000000004089c4 <+1822>:	mov    $0x1,%r8d
   0x00000000004089ca <+1828>:	mov    $0x2,%ecx
   0x00000000004089cf <+1833>:	pxor   %xmm2,%xmm2
   0x00000000004089d3 <+1837>:	movapd %xmm0,%xmm1
   0x00000000004089d7 <+1841>:	mov    $0x2,%edx
   0x00000000004089dc <+1846>:	movsd  0x1ccbc(%rip),%xmm0        # 0x4256a0
   0x00000000004089e4 <+1854>:	mov    $0x423d8f,%esi
   0x00000000004089e9 <+1859>:	mov    %rax,%rdi
   0x00000000004089ec <+1862>:	callq  0x407940 <_ZN7sc_core8sc_clockC1EPKcdNS_12sc_time_unitEddS3_b@plt>
   0x00000000004089f1 <+1867>:	mov    $0x423d98,%edi
   0x00000000004089f6 <+1872>:	callq  0x407f50 <puts@plt>
   0x00000000004089fb <+1877>:	mov    $0x423de8,%edi
   0x0000000000408a00 <+1882>:	callq  0x407f50 <puts@plt>
   0x0000000000408a05 <+1887>:	mov    $0x423d98,%edi
   0x0000000000408a0a <+1892>:	callq  0x407f50 <puts@plt>
   0x0000000000408a0f <+1897>:	mov    $0x423e18,%edi
   0x0000000000408a14 <+1902>:	callq  0x407f50 <puts@plt>
   0x0000000000408a19 <+1907>:	mov    $0x423e39,%edi
   0x0000000000408a1e <+1912>:	callq  0x407f50 <puts@plt>
   0x0000000000408a23 <+1917>:	mov    $0x423e54,%edi
   0x0000000000408a28 <+1922>:	callq  0x407f50 <puts@plt>
   0x0000000000408a2d <+1927>:	mov    $0x423e78,%edi
   0x0000000000408a32 <+1932>:	callq  0x407f50 <puts@plt>
   0x0000000000408a37 <+1937>:	mov    $0x423eb8,%edi
   0x0000000000408a3c <+1942>:	callq  0x407f50 <puts@plt>
   0x0000000000408a41 <+1947>:	mov    $0x423efb,%edi
   0x0000000000408a46 <+1952>:	callq  0x407f50 <puts@plt>
   0x0000000000408a4b <+1957>:	mov    $0x423f10,%edi
   0x0000000000408a50 <+1962>:	callq  0x407f50 <puts@plt>
   0x0000000000408a55 <+1967>:	mov    $0x423efb,%edi
   0x0000000000408a5a <+1972>:	callq  0x407f50 <puts@plt>
   0x0000000000408a5f <+1977>:	mov    $0x423d98,%edi
   0x0000000000408a64 <+1982>:	callq  0x407f50 <puts@plt>
   0x0000000000408a69 <+1987>:	mov    $0x423f58,%esi
   0x0000000000408a6e <+1992>:	mov    $0x636740,%edi
   0x0000000000408a73 <+1997>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000408a78 <+2002>:	mov    $0x4,%esi
   0x0000000000408a7d <+2007>:	mov    %rax,%rdi
   0x0000000000408a80 <+2010>:	callq  0x4078b0 <_ZNSolsEm@plt>
   0x0000000000408a85 <+2015>:	mov    $0x423f77,%esi
   0x0000000000408a8a <+2020>:	mov    %rax,%rdi
   0x0000000000408a8d <+2023>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000408a92 <+2028>:	mov    $0x423f80,%esi
   0x0000000000408a97 <+2033>:	mov    $0x636740,%edi
   0x0000000000408a9c <+2038>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000408aa1 <+2043>:	mov    $0x4,%esi
   0x0000000000408aa6 <+2048>:	mov    %rax,%rdi
   0x0000000000408aa9 <+2051>:	callq  0x4078b0 <_ZNSolsEm@plt>
   0x0000000000408aae <+2056>:	mov    $0x423f77,%esi
   0x0000000000408ab3 <+2061>:	mov    %rax,%rdi
   0x0000000000408ab6 <+2064>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000408abb <+2069>:	mov    $0x423fa0,%esi
   0x0000000000408ac0 <+2074>:	mov    $0x636740,%edi
   0x0000000000408ac5 <+2079>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000408aca <+2084>:	mov    $0x8,%esi
   0x0000000000408acf <+2089>:	mov    %rax,%rdi
   0x0000000000408ad2 <+2092>:	callq  0x4078b0 <_ZNSolsEm@plt>
   0x0000000000408ad7 <+2097>:	mov    $0x423f77,%esi
   0x0000000000408adc <+2102>:	mov    %rax,%rdi
   0x0000000000408adf <+2105>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000408ae4 <+2110>:	mov    $0x423fbe,%edi
   0x0000000000408ae9 <+2115>:	callq  0x407f50 <puts@plt>
   0x0000000000408aee <+2120>:	mov    $0x423fbe,%edi
   0x0000000000408af3 <+2125>:	callq  0x407f50 <puts@plt>
   0x0000000000408af8 <+2130>:	mov    $0x423fc8,%edi
   0x0000000000408afd <+2135>:	callq  0x407f50 <puts@plt>
   0x0000000000408b02 <+2140>:	mov    $0x423ff8,%edi
   0x0000000000408b07 <+2145>:	callq  0x407f50 <puts@plt>
   0x0000000000408b0c <+2150>:	mov    $0x424030,%edi
   0x0000000000408b11 <+2155>:	callq  0x407f50 <puts@plt>
   0x0000000000408b16 <+2160>:	mov    $0x424068,%edi
   0x0000000000408b1b <+2165>:	callq  0x407f50 <puts@plt>
   0x0000000000408b20 <+2170>:	mov    $0x4240a0,%edi
   0x0000000000408b25 <+2175>:	callq  0x407f50 <puts@plt>
   0x0000000000408b2a <+2180>:	mov    $0x4240d8,%edi
   0x0000000000408b2f <+2185>:	callq  0x407f50 <puts@plt>
   0x0000000000408b34 <+2190>:	mov    $0x424110,%edi
   0x0000000000408b39 <+2195>:	callq  0x407f50 <puts@plt>
   0x0000000000408b3e <+2200>:	mov    $0x424148,%edi
   0x0000000000408b43 <+2205>:	callq  0x407f50 <puts@plt>
   0x0000000000408b48 <+2210>:	mov    $0x424180,%edi
   0x0000000000408b4d <+2215>:	callq  0x407f50 <puts@plt>
   0x0000000000408b52 <+2220>:	mov    $0x4241b8,%edi
   0x0000000000408b57 <+2225>:	callq  0x407f50 <puts@plt>
   0x0000000000408b5c <+2230>:	mov    $0x4241f0,%edi
   0x0000000000408b61 <+2235>:	callq  0x407f50 <puts@plt>
   0x0000000000408b66 <+2240>:	mov    $0x424228,%edi
   0x0000000000408b6b <+2245>:	callq  0x407f50 <puts@plt>
   0x0000000000408b70 <+2250>:	mov    $0x424260,%edi
   0x0000000000408b75 <+2255>:	callq  0x407f50 <puts@plt>
   0x0000000000408b7a <+2260>:	mov    $0x424298,%edi
   0x0000000000408b7f <+2265>:	callq  0x407f50 <puts@plt>
   0x0000000000408b84 <+2270>:	mov    $0x4242d0,%edi
   0x0000000000408b89 <+2275>:	callq  0x407f50 <puts@plt>
   0x0000000000408b8e <+2280>:	mov    $0x424310,%edi
   0x0000000000408b93 <+2285>:	callq  0x407f50 <puts@plt>
   0x0000000000408b98 <+2290>:	mov    $0x424350,%edi
   0x0000000000408b9d <+2295>:	callq  0x407f50 <puts@plt>
   0x0000000000408ba2 <+2300>:	mov    $0x424390,%edi
   0x0000000000408ba7 <+2305>:	callq  0x407f50 <puts@plt>
   0x0000000000408bac <+2310>:	mov    $0x4243d8,%edi
   0x0000000000408bb1 <+2315>:	callq  0x407f50 <puts@plt>
   0x0000000000408bb6 <+2320>:	mov    $0x424420,%edi
   0x0000000000408bbb <+2325>:	callq  0x407f50 <puts@plt>
   0x0000000000408bc0 <+2330>:	mov    $0x424470,%edi
   0x0000000000408bc5 <+2335>:	callq  0x407f50 <puts@plt>
   0x0000000000408bca <+2340>:	mov    $0x4244c0,%edi
   0x0000000000408bcf <+2345>:	callq  0x407f50 <puts@plt>
   0x0000000000408bd4 <+2350>:	mov    $0x424508,%edi
   0x0000000000408bd9 <+2355>:	callq  0x407f50 <puts@plt>
   0x0000000000408bde <+2360>:	mov    $0x424550,%edi
   0x0000000000408be3 <+2365>:	callq  0x407f50 <puts@plt>
   0x0000000000408be8 <+2370>:	mov    $0x424598,%edi
   0x0000000000408bed <+2375>:	callq  0x407f50 <puts@plt>
   0x0000000000408bf2 <+2380>:	mov    $0x4245e0,%edi
   0x0000000000408bf7 <+2385>:	callq  0x407f50 <puts@plt>
   0x0000000000408bfc <+2390>:	mov    $0x424620,%edi
   0x0000000000408c01 <+2395>:	callq  0x407f50 <puts@plt>
   0x0000000000408c06 <+2400>:	mov    $0x424658,%edi
   0x0000000000408c0b <+2405>:	callq  0x407f50 <puts@plt>
   0x0000000000408c10 <+2410>:	mov    $0x424688,%edi
   0x0000000000408c15 <+2415>:	callq  0x407f50 <puts@plt>
   0x0000000000408c1a <+2420>:	mov    $0x4246b8,%edi
   0x0000000000408c1f <+2425>:	callq  0x407f50 <puts@plt>
   0x0000000000408c24 <+2430>:	mov    $0x423fbe,%edi
   0x0000000000408c29 <+2435>:	callq  0x407f50 <puts@plt>
   0x0000000000408c2e <+2440>:	mov    $0x423fbe,%edi
   0x0000000000408c33 <+2445>:	callq  0x407f50 <puts@plt>
   0x0000000000408c38 <+2450>:	mov    $0x4246e0,%edi
   0x0000000000408c3d <+2455>:	callq  0x407f50 <puts@plt>
   0x0000000000408c42 <+2460>:	lea    -0x200(%rbp),%rax
   0x0000000000408c49 <+2467>:	mov    $0x42472c,%esi
   0x0000000000408c4e <+2472>:	mov    %rax,%rdi
   0x0000000000408c51 <+2475>:	callq  0x407920 <_ZN7sc_core14sc_module_nameC1EPKc@plt>
   0x0000000000408c56 <+2480>:	lea    -0x200(%rbp),%rdx
   0x0000000000408c5d <+2487>:	lea    -0x56a0(%rbp),%rax
   0x0000000000408c64 <+2494>:	mov    %rdx,%rsi
   0x0000000000408c67 <+2497>:	mov    %rax,%rdi
   0x0000000000408c6a <+2500>:	callq  0x40bf86 <fetch::fetch(sc_core::sc_module_name)>
   0x0000000000408c6f <+2505>:	lea    -0x200(%rbp),%rax
   0x0000000000408c76 <+2512>:	mov    %rax,%rdi
   0x0000000000408c79 <+2515>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x0000000000408c7e <+2520>:	lea    -0x56a0(%rbp),%rax
   0x0000000000408c85 <+2527>:	mov    $0x2,%esi
   0x0000000000408c8a <+2532>:	mov    %rax,%rdi
   0x0000000000408c8d <+2535>:	callq  0x40bf6a <fetch::init_param(int)>
   0x0000000000408c92 <+2540>:	lea    -0x680(%rbp),%rdx
   0x0000000000408c99 <+2547>:	lea    -0x56a0(%rbp),%rax
   0x0000000000408ca0 <+2554>:	mov    %rdx,%rsi
   0x0000000000408ca3 <+2557>:	mov    %rax,%rdi
   0x0000000000408ca6 <+2560>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408cab <+2565>:	mov    %rax,%rdx
   0x0000000000408cae <+2568>:	lea    -0xd50(%rbp),%rax
   0x0000000000408cb5 <+2575>:	mov    %rax,%rsi
   0x0000000000408cb8 <+2578>:	mov    %rdx,%rdi
   0x0000000000408cbb <+2581>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408cc0 <+2586>:	mov    %rax,%rdx
   0x0000000000408cc3 <+2589>:	lea    -0xe20(%rbp),%rax
   0x0000000000408cca <+2596>:	mov    %rax,%rsi
   0x0000000000408ccd <+2599>:	mov    %rdx,%rdi
   0x0000000000408cd0 <+2602>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408cd5 <+2607>:	mov    %rax,%rdx
   0x0000000000408cd8 <+2610>:	lea    -0xef0(%rbp),%rax
   0x0000000000408cdf <+2617>:	mov    %rax,%rsi
   0x0000000000408ce2 <+2620>:	mov    %rdx,%rdi
   0x0000000000408ce5 <+2623>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408cea <+2628>:	mov    %rax,%rdx
   0x0000000000408ced <+2631>:	lea    -0xfb0(%rbp),%rax
   0x0000000000408cf4 <+2638>:	mov    %rax,%rsi
   0x0000000000408cf7 <+2641>:	mov    %rdx,%rdi
   0x0000000000408cfa <+2644>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408cff <+2649>:	mov    %rax,%rdx
   0x0000000000408d02 <+2652>:	lea    -0x3ec0(%rbp),%rax
   0x0000000000408d09 <+2659>:	mov    %rax,%rsi
   0x0000000000408d0c <+2662>:	mov    %rdx,%rdi
   0x0000000000408d0f <+2665>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408d14 <+2670>:	mov    %rax,%rdx
   0x0000000000408d17 <+2673>:	lea    -0x3f70(%rbp),%rax
   0x0000000000408d1e <+2680>:	mov    %rax,%rsi
   0x0000000000408d21 <+2683>:	mov    %rdx,%rdi
   0x0000000000408d24 <+2686>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408d29 <+2691>:	mov    %rax,%rdx
   0x0000000000408d2c <+2694>:	lea    -0x750(%rbp),%rax
   0x0000000000408d33 <+2701>:	mov    %rax,%rsi
   0x0000000000408d36 <+2704>:	mov    %rdx,%rdi
   0x0000000000408d39 <+2707>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408d3e <+2712>:	mov    %rax,%rdx
   0x0000000000408d41 <+2715>:	lea    -0x2d0(%rbp),%rax
   0x0000000000408d48 <+2722>:	mov    %rax,%rsi
   0x0000000000408d4b <+2725>:	mov    %rdx,%rdi
   0x0000000000408d4e <+2728>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408d53 <+2733>:	mov    %rax,%rdx
   0x0000000000408d56 <+2736>:	lea    -0x1080(%rbp),%rax
   0x0000000000408d5d <+2743>:	mov    %rax,%rsi
   0x0000000000408d60 <+2746>:	mov    %rdx,%rdi
   0x0000000000408d63 <+2749>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408d68 <+2754>:	mov    %rax,%rdx
   0x0000000000408d6b <+2757>:	lea    -0x15d0(%rbp),%rax
   0x0000000000408d72 <+2764>:	mov    %rax,%rsi
   0x0000000000408d75 <+2767>:	mov    %rdx,%rdi
   0x0000000000408d78 <+2770>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408d7d <+2775>:	mov    %rax,%rdx
   0x0000000000408d80 <+2778>:	lea    -0x16a0(%rbp),%rax
   0x0000000000408d87 <+2785>:	mov    %rax,%rsi
   0x0000000000408d8a <+2788>:	mov    %rdx,%rdi
   0x0000000000408d8d <+2791>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408d92 <+2796>:	mov    %rax,%rdx
   0x0000000000408d95 <+2799>:	lea    -0x3a0(%rbp),%rax
   0x0000000000408d9c <+2806>:	mov    %rax,%rsi
   0x0000000000408d9f <+2809>:	mov    %rdx,%rdi
   0x0000000000408da2 <+2812>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408da7 <+2817>:	mov    %rax,%rdx
   0x0000000000408daa <+2820>:	lea    -0x470(%rbp),%rax
   0x0000000000408db1 <+2827>:	mov    %rax,%rsi
   0x0000000000408db4 <+2830>:	mov    %rdx,%rdi
   0x0000000000408db7 <+2833>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408dbc <+2838>:	mov    %rax,%rdx
   0x0000000000408dbf <+2841>:	lea    -0x520(%rbp),%rax
   0x0000000000408dc6 <+2848>:	mov    %rax,%rsi
   0x0000000000408dc9 <+2851>:	mov    %rdx,%rdi
   0x0000000000408dcc <+2854>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408dd1 <+2859>:	mov    %rax,%rdx
   0x0000000000408dd4 <+2862>:	lea    -0x5d0(%rbp),%rax
   0x0000000000408ddb <+2869>:	mov    %rax,%rsi
   0x0000000000408dde <+2872>:	mov    %rdx,%rdi
   0x0000000000408de1 <+2875>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408de6 <+2880>:	mov    %rax,%rdx
   0x0000000000408de9 <+2883>:	lea    -0x1130(%rbp),%rax
   0x0000000000408df0 <+2890>:	mov    %rax,%rsi
   0x0000000000408df3 <+2893>:	mov    %rdx,%rdi
   0x0000000000408df6 <+2896>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408dfb <+2901>:	mov    %rax,%rdx
   0x0000000000408dfe <+2904>:	lea    -0x1200(%rbp),%rax
   0x0000000000408e05 <+2911>:	mov    %rax,%rsi
   0x0000000000408e08 <+2914>:	mov    %rdx,%rdi
   0x0000000000408e0b <+2917>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408e10 <+2922>:	mov    %rax,%rdx
   0x0000000000408e13 <+2925>:	lea    -0x12b0(%rbp),%rax
   0x0000000000408e1a <+2932>:	mov    %rax,%rsi
   0x0000000000408e1d <+2935>:	mov    %rdx,%rdi
   0x0000000000408e20 <+2938>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408e25 <+2943>:	mov    %rax,%rdx
   0x0000000000408e28 <+2946>:	lea    -0x4110(%rbp),%rax
   0x0000000000408e2f <+2953>:	mov    %rax,%rsi
   0x0000000000408e32 <+2956>:	mov    %rdx,%rdi
   0x0000000000408e35 <+2959>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408e3a <+2964>:	mov    %rax,%rdx
   0x0000000000408e3d <+2967>:	lea    -0x1380(%rbp),%rax
   0x0000000000408e44 <+2974>:	mov    %rax,%rsi
   0x0000000000408e47 <+2977>:	mov    %rdx,%rdi
   0x0000000000408e4a <+2980>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408e4f <+2985>:	mov    %rax,%rdx
   0x0000000000408e52 <+2988>:	lea    -0x1450(%rbp),%rax
   0x0000000000408e59 <+2995>:	mov    %rax,%rsi
   0x0000000000408e5c <+2998>:	mov    %rdx,%rdi
   0x0000000000408e5f <+3001>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408e64 <+3006>:	mov    %rax,%rdx
   0x0000000000408e67 <+3009>:	lea    -0x1520(%rbp),%rax
   0x0000000000408e6e <+3016>:	mov    %rax,%rsi
   0x0000000000408e71 <+3019>:	mov    %rdx,%rdi
   0x0000000000408e74 <+3022>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408e79 <+3027>:	mov    %rax,%rdx
   0x0000000000408e7c <+3030>:	lea    -0x46f0(%rbp),%rax
   0x0000000000408e83 <+3037>:	mov    %rax,%rsi
   0x0000000000408e86 <+3040>:	mov    %rdx,%rdi
   0x0000000000408e89 <+3043>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408e8e <+3048>:	lea    -0x1d0(%rbp),%rax
   0x0000000000408e95 <+3055>:	mov    $0x424738,%esi
   0x0000000000408e9a <+3060>:	mov    %rax,%rdi
   0x0000000000408e9d <+3063>:	callq  0x407920 <_ZN7sc_core14sc_module_nameC1EPKc@plt>
   0x0000000000408ea2 <+3068>:	lea    -0x1d0(%rbp),%rdx
   0x0000000000408ea9 <+3075>:	lea    -0x7090(%rbp),%rax
   0x0000000000408eb0 <+3082>:	mov    %rdx,%rsi
   0x0000000000408eb3 <+3085>:	mov    %rax,%rdi
   0x0000000000408eb6 <+3088>:	callq  0x40c45a <decode::decode(sc_core::sc_module_name)>
   0x0000000000408ebb <+3093>:	lea    -0x1d0(%rbp),%rax
   0x0000000000408ec2 <+3100>:	mov    %rax,%rdi
   0x0000000000408ec5 <+3103>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x0000000000408eca <+3108>:	lea    -0x1520(%rbp),%rdx
   0x0000000000408ed1 <+3115>:	lea    -0x7090(%rbp),%rax
   0x0000000000408ed8 <+3122>:	mov    %rdx,%rsi
   0x0000000000408edb <+3125>:	mov    %rax,%rdi
   0x0000000000408ede <+3128>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408ee3 <+3133>:	mov    %rax,%rdx
   0x0000000000408ee6 <+3136>:	lea    -0x1130(%rbp),%rax
   0x0000000000408eed <+3143>:	mov    %rax,%rsi
   0x0000000000408ef0 <+3146>:	mov    %rdx,%rdi
   0x0000000000408ef3 <+3149>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408ef8 <+3154>:	mov    %rax,%rdx
   0x0000000000408efb <+3157>:	lea    -0x1820(%rbp),%rax
   0x0000000000408f02 <+3164>:	mov    %rax,%rsi
   0x0000000000408f05 <+3167>:	mov    %rdx,%rdi
   0x0000000000408f08 <+3170>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408f0d <+3175>:	mov    %rax,%rdx
   0x0000000000408f10 <+3178>:	lea    -0x1200(%rbp),%rax
   0x0000000000408f17 <+3185>:	mov    %rax,%rsi
   0x0000000000408f1a <+3188>:	mov    %rdx,%rdi
   0x0000000000408f1d <+3191>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408f22 <+3196>:	mov    %rax,%rdx
   0x0000000000408f25 <+3199>:	lea    -0x18f0(%rbp),%rax
   0x0000000000408f2c <+3206>:	mov    %rax,%rsi
   0x0000000000408f2f <+3209>:	mov    %rdx,%rdi
   0x0000000000408f32 <+3212>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408f37 <+3217>:	mov    %rax,%rdx
   0x0000000000408f3a <+3220>:	lea    -0x3710(%rbp),%rax
   0x0000000000408f41 <+3227>:	mov    %rax,%rsi
   0x0000000000408f44 <+3230>:	mov    %rdx,%rdi
   0x0000000000408f47 <+3233>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408f4c <+3238>:	mov    %rax,%rdx
   0x0000000000408f4f <+3241>:	lea    -0x37c0(%rbp),%rax
   0x0000000000408f56 <+3248>:	mov    %rax,%rsi
   0x0000000000408f59 <+3251>:	mov    %rdx,%rdi
   0x0000000000408f5c <+3254>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408f61 <+3259>:	mov    %rax,%rdx
   0x0000000000408f64 <+3262>:	lea    -0x3640(%rbp),%rax
   0x0000000000408f6b <+3269>:	mov    %rax,%rsi
   0x0000000000408f6e <+3272>:	mov    %rdx,%rdi
   0x0000000000408f71 <+3275>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408f76 <+3280>:	mov    %rax,%rdx
   0x0000000000408f79 <+3283>:	lea    -0x1bd0(%rbp),%rax
   0x0000000000408f80 <+3290>:	mov    %rax,%rsi
   0x0000000000408f83 <+3293>:	mov    %rdx,%rdi
   0x0000000000408f86 <+3296>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408f8b <+3301>:	mov    %rax,%rdx
   0x0000000000408f8e <+3304>:	lea    -0x1ca0(%rbp),%rax
   0x0000000000408f95 <+3311>:	mov    %rax,%rsi
   0x0000000000408f98 <+3314>:	mov    %rdx,%rdi
   0x0000000000408f9b <+3317>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408fa0 <+3322>:	mov    %rax,%rdx
   0x0000000000408fa3 <+3325>:	lea    -0x37c0(%rbp),%rax
   0x0000000000408faa <+3332>:	mov    %rax,%rsi
   0x0000000000408fad <+3335>:	mov    %rdx,%rdi
   0x0000000000408fb0 <+3338>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408fb5 <+3343>:	mov    %rax,%rdx
   0x0000000000408fb8 <+3346>:	lea    -0x3870(%rbp),%rax
   0x0000000000408fbf <+3353>:	mov    %rax,%rsi
   0x0000000000408fc2 <+3356>:	mov    %rdx,%rdi
   0x0000000000408fc5 <+3359>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408fca <+3364>:	mov    %rax,%rdx
   0x0000000000408fcd <+3367>:	lea    -0x3930(%rbp),%rax
   0x0000000000408fd4 <+3374>:	mov    %rax,%rsi
   0x0000000000408fd7 <+3377>:	mov    %rdx,%rdi
   0x0000000000408fda <+3380>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408fdf <+3385>:	mov    %rax,%rdx
   0x0000000000408fe2 <+3388>:	lea    -0x39e0(%rbp),%rax
   0x0000000000408fe9 <+3395>:	mov    %rax,%rsi
   0x0000000000408fec <+3398>:	mov    %rdx,%rdi
   0x0000000000408fef <+3401>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000408ff4 <+3406>:	mov    %rax,%rdx
   0x0000000000408ff7 <+3409>:	lea    -0x1380(%rbp),%rax
   0x0000000000408ffe <+3416>:	mov    %rax,%rsi
   0x0000000000409001 <+3419>:	mov    %rdx,%rdi
   0x0000000000409004 <+3422>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409009 <+3427>:	mov    %rax,%rdx
   0x000000000040900c <+3430>:	lea    -0x4340(%rbp),%rax
   0x0000000000409013 <+3437>:	mov    %rax,%rsi
   0x0000000000409016 <+3440>:	mov    %rdx,%rdi
   0x0000000000409019 <+3443>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040901e <+3448>:	mov    %rax,%rdx
   0x0000000000409021 <+3451>:	lea    -0x12b0(%rbp),%rax
   0x0000000000409028 <+3458>:	mov    %rax,%rsi
   0x000000000040902b <+3461>:	mov    %rdx,%rdi
   0x000000000040902e <+3464>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409033 <+3469>:	mov    %rax,%rdx
   0x0000000000409036 <+3472>:	lea    -0x1a70(%rbp),%rax
   0x000000000040903d <+3479>:	mov    %rax,%rsi
   0x0000000000409040 <+3482>:	mov    %rdx,%rdi
   0x0000000000409043 <+3485>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409048 <+3490>:	mov    %rax,%rdx
   0x000000000040904b <+3493>:	lea    -0x1b20(%rbp),%rax
   0x0000000000409052 <+3500>:	mov    %rax,%rsi
   0x0000000000409055 <+3503>:	mov    %rdx,%rdi
   0x0000000000409058 <+3506>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040905d <+3511>:	mov    %rax,%rdx
   0x0000000000409060 <+3514>:	lea    -0xe20(%rbp),%rax
   0x0000000000409067 <+3521>:	mov    %rax,%rsi
   0x000000000040906a <+3524>:	mov    %rdx,%rdi
   0x000000000040906d <+3527>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409072 <+3532>:	mov    %rax,%rdx
   0x0000000000409075 <+3535>:	lea    -0xef0(%rbp),%rax
   0x000000000040907c <+3542>:	mov    %rax,%rsi
   0x000000000040907f <+3545>:	mov    %rdx,%rdi
   0x0000000000409082 <+3548>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409087 <+3553>:	mov    %rax,%rdx
   0x000000000040908a <+3556>:	lea    -0xd50(%rbp),%rax
   0x0000000000409091 <+3563>:	mov    %rax,%rsi
   0x0000000000409094 <+3566>:	mov    %rdx,%rdi
   0x0000000000409097 <+3569>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040909c <+3574>:	mov    %rax,%rdx
   0x000000000040909f <+3577>:	lea    -0x1e20(%rbp),%rax
   0x00000000004090a6 <+3584>:	mov    %rax,%rsi
   0x00000000004090a9 <+3587>:	mov    %rdx,%rdi
   0x00000000004090ac <+3590>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004090b1 <+3595>:	mov    %rax,%rdx
   0x00000000004090b4 <+3598>:	lea    -0x1ed0(%rbp),%rax
   0x00000000004090bb <+3605>:	mov    %rax,%rsi
   0x00000000004090be <+3608>:	mov    %rdx,%rdi
   0x00000000004090c1 <+3611>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004090c6 <+3616>:	mov    %rax,%rdx
   0x00000000004090c9 <+3619>:	lea    -0x1f80(%rbp),%rax
   0x00000000004090d0 <+3626>:	mov    %rax,%rsi
   0x00000000004090d3 <+3629>:	mov    %rdx,%rdi
   0x00000000004090d6 <+3632>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004090db <+3637>:	mov    %rax,%rdx
   0x00000000004090de <+3640>:	lea    -0x2050(%rbp),%rax
   0x00000000004090e5 <+3647>:	mov    %rax,%rsi
   0x00000000004090e8 <+3650>:	mov    %rdx,%rdi
   0x00000000004090eb <+3653>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004090f0 <+3658>:	mov    %rax,%rdx
   0x00000000004090f3 <+3661>:	lea    -0x2100(%rbp),%rax
   0x00000000004090fa <+3668>:	mov    %rax,%rsi
   0x00000000004090fd <+3671>:	mov    %rdx,%rdi
   0x0000000000409100 <+3674>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409105 <+3679>:	mov    %rax,%rdx
   0x0000000000409108 <+3682>:	lea    -0x21d0(%rbp),%rax
   0x000000000040910f <+3689>:	mov    %rax,%rsi
   0x0000000000409112 <+3692>:	mov    %rdx,%rdi
   0x0000000000409115 <+3695>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040911a <+3700>:	mov    %rax,%rdx
   0x000000000040911d <+3703>:	lea    -0x2280(%rbp),%rax
   0x0000000000409124 <+3710>:	mov    %rax,%rsi
   0x0000000000409127 <+3713>:	mov    %rdx,%rdi
   0x000000000040912a <+3716>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040912f <+3721>:	mov    %rax,%rdx
   0x0000000000409132 <+3724>:	lea    -0x2330(%rbp),%rax
   0x0000000000409139 <+3731>:	mov    %rax,%rsi
   0x000000000040913c <+3734>:	mov    %rdx,%rdi
   0x000000000040913f <+3737>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409144 <+3742>:	mov    %rax,%rdx
   0x0000000000409147 <+3745>:	lea    -0x2400(%rbp),%rax
   0x000000000040914e <+3752>:	mov    %rax,%rsi
   0x0000000000409151 <+3755>:	mov    %rdx,%rdi
   0x0000000000409154 <+3758>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409159 <+3763>:	mov    %rax,%rdx
   0x000000000040915c <+3766>:	lea    -0x24d0(%rbp),%rax
   0x0000000000409163 <+3773>:	mov    %rax,%rsi
   0x0000000000409166 <+3776>:	mov    %rdx,%rdi
   0x0000000000409169 <+3779>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040916e <+3784>:	mov    %rax,%rdx
   0x0000000000409171 <+3787>:	lea    -0xfb0(%rbp),%rax
   0x0000000000409178 <+3794>:	mov    %rax,%rsi
   0x000000000040917b <+3797>:	mov    %rdx,%rdi
   0x000000000040917e <+3800>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409183 <+3805>:	mov    %rax,%rdx
   0x0000000000409186 <+3808>:	lea    -0x25a0(%rbp),%rax
   0x000000000040918d <+3815>:	mov    %rax,%rsi
   0x0000000000409190 <+3818>:	mov    %rdx,%rdi
   0x0000000000409193 <+3821>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409198 <+3826>:	mov    %rax,%rdx
   0x000000000040919b <+3829>:	lea    -0x2670(%rbp),%rax
   0x00000000004091a2 <+3836>:	mov    %rax,%rsi
   0x00000000004091a5 <+3839>:	mov    %rdx,%rdi
   0x00000000004091a8 <+3842>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004091ad <+3847>:	mov    %rax,%rdx
   0x00000000004091b0 <+3850>:	lea    -0x2740(%rbp),%rax
   0x00000000004091b7 <+3857>:	mov    %rax,%rsi
   0x00000000004091ba <+3860>:	mov    %rdx,%rdi
   0x00000000004091bd <+3863>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004091c2 <+3868>:	mov    %rax,%rdx
   0x00000000004091c5 <+3871>:	lea    -0x2810(%rbp),%rax
   0x00000000004091cc <+3878>:	mov    %rax,%rsi
   0x00000000004091cf <+3881>:	mov    %rdx,%rdi
   0x00000000004091d2 <+3884>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004091d7 <+3889>:	mov    %rax,%rdx
   0x00000000004091da <+3892>:	lea    -0x28c0(%rbp),%rax
   0x00000000004091e1 <+3899>:	mov    %rax,%rsi
   0x00000000004091e4 <+3902>:	mov    %rdx,%rdi
   0x00000000004091e7 <+3905>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004091ec <+3910>:	mov    %rax,%rdx
   0x00000000004091ef <+3913>:	lea    -0x46f0(%rbp),%rax
   0x00000000004091f6 <+3920>:	mov    %rax,%rsi
   0x00000000004091f9 <+3923>:	mov    %rdx,%rdi
   0x00000000004091fc <+3926>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409201 <+3931>:	lea    -0x1a0(%rbp),%rax
   0x0000000000409208 <+3938>:	mov    $0x424745,%esi
   0x000000000040920d <+3943>:	mov    %rax,%rdi
   0x0000000000409210 <+3946>:	callq  0x407920 <_ZN7sc_core14sc_module_nameC1EPKc@plt>
   0x0000000000409215 <+3951>:	lea    -0x1a0(%rbp),%rdx
   0x000000000040921c <+3958>:	lea    -0x7c60(%rbp),%rax
   0x0000000000409223 <+3965>:	mov    %rdx,%rsi
   0x0000000000409226 <+3968>:	mov    %rax,%rdi
   0x0000000000409229 <+3971>:	callq  0x40cc66 <exec::exec(sc_core::sc_module_name)>
   0x000000000040922e <+3976>:	lea    -0x1a0(%rbp),%rax
   0x0000000000409235 <+3983>:	mov    %rax,%rdi
   0x0000000000409238 <+3986>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x000000000040923d <+3991>:	lea    -0x1520(%rbp),%rdx
   0x0000000000409244 <+3998>:	lea    -0x7c60(%rbp),%rax
   0x000000000040924b <+4005>:	mov    %rdx,%rsi
   0x000000000040924e <+4008>:	mov    %rax,%rdi
   0x0000000000409251 <+4011>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409256 <+4016>:	mov    %rax,%rdx
   0x0000000000409259 <+4019>:	lea    -0x25a0(%rbp),%rax
   0x0000000000409260 <+4026>:	mov    %rax,%rsi
   0x0000000000409263 <+4029>:	mov    %rdx,%rdi
   0x0000000000409266 <+4032>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040926b <+4037>:	mov    %rax,%rdx
   0x000000000040926e <+4040>:	lea    -0x1f80(%rbp),%rax
   0x0000000000409275 <+4047>:	mov    %rax,%rsi
   0x0000000000409278 <+4050>:	mov    %rdx,%rdi
   0x000000000040927b <+4053>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409280 <+4058>:	mov    %rax,%rdx
   0x0000000000409283 <+4061>:	lea    -0x31a0(%rbp),%rax
   0x000000000040928a <+4068>:	mov    %rax,%rsi
   0x000000000040928d <+4071>:	mov    %rdx,%rdi
   0x0000000000409290 <+4074>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409295 <+4079>:	mov    %rax,%rdx
   0x0000000000409298 <+4082>:	lea    -0x3250(%rbp),%rax
   0x000000000040929f <+4089>:	mov    %rax,%rsi
   0x00000000004092a2 <+4092>:	mov    %rdx,%rdi
   0x00000000004092a5 <+4095>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004092aa <+4100>:	mov    %rax,%rdx
   0x00000000004092ad <+4103>:	lea    -0x3320(%rbp),%rax
   0x00000000004092b4 <+4110>:	mov    %rax,%rsi
   0x00000000004092b7 <+4113>:	mov    %rdx,%rdi
   0x00000000004092ba <+4116>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004092bf <+4121>:	mov    %rax,%rdx
   0x00000000004092c2 <+4124>:	lea    -0x2280(%rbp),%rax
   0x00000000004092c9 <+4131>:	mov    %rax,%rsi
   0x00000000004092cc <+4134>:	mov    %rdx,%rdi
   0x00000000004092cf <+4137>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004092d4 <+4142>:	mov    %rax,%rdx
   0x00000000004092d7 <+4145>:	lea    -0x2330(%rbp),%rax
   0x00000000004092de <+4152>:	mov    %rax,%rsi
   0x00000000004092e1 <+4155>:	mov    %rdx,%rdi
   0x00000000004092e4 <+4158>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004092e9 <+4163>:	mov    %rax,%rdx
   0x00000000004092ec <+4166>:	lea    -0x2400(%rbp),%rax
   0x00000000004092f3 <+4173>:	mov    %rax,%rsi
   0x00000000004092f6 <+4176>:	mov    %rdx,%rdi
   0x00000000004092f9 <+4179>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004092fe <+4184>:	mov    %rax,%rdx
   0x0000000000409301 <+4187>:	lea    -0x24d0(%rbp),%rax
   0x0000000000409308 <+4194>:	mov    %rax,%rsi
   0x000000000040930b <+4197>:	mov    %rdx,%rdi
   0x000000000040930e <+4200>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409313 <+4205>:	mov    %rax,%rdx
   0x0000000000409316 <+4208>:	lea    -0x2100(%rbp),%rax
   0x000000000040931d <+4215>:	mov    %rax,%rsi
   0x0000000000409320 <+4218>:	mov    %rdx,%rdi
   0x0000000000409323 <+4221>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409328 <+4226>:	mov    %rax,%rdx
   0x000000000040932b <+4229>:	lea    -0x33f0(%rbp),%rax
   0x0000000000409332 <+4236>:	mov    %rax,%rsi
   0x0000000000409335 <+4239>:	mov    %rdx,%rdi
   0x0000000000409338 <+4242>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040933d <+4247>:	mov    %rax,%rdx
   0x0000000000409340 <+4250>:	lea    -0x34c0(%rbp),%rax
   0x0000000000409347 <+4257>:	mov    %rax,%rsi
   0x000000000040934a <+4260>:	mov    %rdx,%rdi
   0x000000000040934d <+4263>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409352 <+4268>:	mov    %rax,%rdx
   0x0000000000409355 <+4271>:	lea    -0x3590(%rbp),%rax
   0x000000000040935c <+4278>:	mov    %rax,%rsi
   0x000000000040935f <+4281>:	mov    %rdx,%rdi
   0x0000000000409362 <+4284>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409367 <+4289>:	mov    %rax,%rdx
   0x000000000040936a <+4292>:	lea    -0x3640(%rbp),%rax
   0x0000000000409371 <+4299>:	mov    %rax,%rsi
   0x0000000000409374 <+4302>:	mov    %rdx,%rdi
   0x0000000000409377 <+4305>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040937c <+4310>:	mov    %rax,%rdx
   0x000000000040937f <+4313>:	lea    -0x3710(%rbp),%rax
   0x0000000000409386 <+4320>:	mov    %rax,%rsi
   0x0000000000409389 <+4323>:	mov    %rdx,%rdi
   0x000000000040938c <+4326>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409391 <+4331>:	mov    %rax,%rdx
   0x0000000000409394 <+4334>:	lea    -0x37c0(%rbp),%rax
   0x000000000040939b <+4341>:	mov    %rax,%rsi
   0x000000000040939e <+4344>:	mov    %rdx,%rdi
   0x00000000004093a1 <+4347>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004093a6 <+4352>:	mov    %rax,%rdx
   0x00000000004093a9 <+4355>:	lea    -0x46f0(%rbp),%rax
   0x00000000004093b0 <+4362>:	mov    %rax,%rsi
   0x00000000004093b3 <+4365>:	mov    %rdx,%rdi
   0x00000000004093b6 <+4368>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004093bb <+4373>:	lea    -0x170(%rbp),%rax
   0x00000000004093c2 <+4380>:	mov    $0x424750,%esi
   0x00000000004093c7 <+4385>:	mov    %rax,%rdi
   0x00000000004093ca <+4388>:	callq  0x407920 <_ZN7sc_core14sc_module_nameC1EPKc@plt>
   0x00000000004093cf <+4393>:	lea    -0x170(%rbp),%rdx
   0x00000000004093d6 <+4400>:	lea    -0x8290(%rbp),%rax
   0x00000000004093dd <+4407>:	mov    %rdx,%rsi
   0x00000000004093e0 <+4410>:	mov    %rax,%rdi
   0x00000000004093e3 <+4413>:	callq  0x40d2b0 <floating::floating(sc_core::sc_module_name)>
   0x00000000004093e8 <+4418>:	lea    -0x170(%rbp),%rax
   0x00000000004093ef <+4425>:	mov    %rax,%rdi
   0x00000000004093f2 <+4428>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x00000000004093f7 <+4433>:	lea    -0x2670(%rbp),%rdx
   0x00000000004093fe <+4440>:	lea    -0x8290(%rbp),%rax
   0x0000000000409405 <+4447>:	mov    %rdx,%rsi
   0x0000000000409408 <+4450>:	mov    %rax,%rdi
   0x000000000040940b <+4453>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409410 <+4458>:	mov    %rax,%rdx
   0x0000000000409413 <+4461>:	lea    -0x1f80(%rbp),%rax
   0x000000000040941a <+4468>:	mov    %rax,%rsi
   0x000000000040941d <+4471>:	mov    %rdx,%rdi
   0x0000000000409420 <+4474>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409425 <+4479>:	mov    %rax,%rdx
   0x0000000000409428 <+4482>:	lea    -0x2280(%rbp),%rax
   0x000000000040942f <+4489>:	mov    %rax,%rsi
   0x0000000000409432 <+4492>:	mov    %rdx,%rdi
   0x0000000000409435 <+4495>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040943a <+4500>:	mov    %rax,%rdx
   0x000000000040943d <+4503>:	lea    -0x2330(%rbp),%rax
   0x0000000000409444 <+4510>:	mov    %rax,%rsi
   0x0000000000409447 <+4513>:	mov    %rdx,%rdi
   0x000000000040944a <+4516>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040944f <+4521>:	mov    %rax,%rdx
   0x0000000000409452 <+4524>:	lea    -0x2100(%rbp),%rax
   0x0000000000409459 <+4531>:	mov    %rax,%rsi
   0x000000000040945c <+4534>:	mov    %rdx,%rdi
   0x000000000040945f <+4537>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409464 <+4542>:	mov    %rax,%rdx
   0x0000000000409467 <+4545>:	lea    -0x3870(%rbp),%rax
   0x000000000040946e <+4552>:	mov    %rax,%rsi
   0x0000000000409471 <+4555>:	mov    %rdx,%rdi
   0x0000000000409474 <+4558>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409479 <+4563>:	mov    %rax,%rdx
   0x000000000040947c <+4566>:	lea    -0x3930(%rbp),%rax
   0x0000000000409483 <+4573>:	mov    %rax,%rsi
   0x0000000000409486 <+4576>:	mov    %rdx,%rdi
   0x0000000000409489 <+4579>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040948e <+4584>:	mov    %rax,%rdx
   0x0000000000409491 <+4587>:	lea    -0x39e0(%rbp),%rax
   0x0000000000409498 <+4594>:	mov    %rax,%rsi
   0x000000000040949b <+4597>:	mov    %rdx,%rdi
   0x000000000040949e <+4600>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004094a3 <+4605>:	mov    %rax,%rdx
   0x00000000004094a6 <+4608>:	lea    -0x46f0(%rbp),%rax
   0x00000000004094ad <+4615>:	mov    %rax,%rsi
   0x00000000004094b0 <+4618>:	mov    %rdx,%rdi
   0x00000000004094b3 <+4621>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004094b8 <+4626>:	lea    -0x140(%rbp),%rax
   0x00000000004094bf <+4633>:	mov    $0x42475c,%esi
   0x00000000004094c4 <+4638>:	mov    %rax,%rdi
   0x00000000004094c7 <+4641>:	callq  0x407920 <_ZN7sc_core14sc_module_nameC1EPKc@plt>
   0x00000000004094cc <+4646>:	lea    -0x140(%rbp),%rdx
   0x00000000004094d3 <+4653>:	lea    -0x88c0(%rbp),%rax
   0x00000000004094da <+4660>:	mov    %rdx,%rsi
   0x00000000004094dd <+4663>:	mov    %rax,%rdi
   0x00000000004094e0 <+4666>:	callq  0x40d044 <mmxu::mmxu(sc_core::sc_module_name)>
   0x00000000004094e5 <+4671>:	lea    -0x140(%rbp),%rax
   0x00000000004094ec <+4678>:	mov    %rax,%rdi
   0x00000000004094ef <+4681>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x00000000004094f4 <+4686>:	lea    -0x2740(%rbp),%rdx
   0x00000000004094fb <+4693>:	lea    -0x88c0(%rbp),%rax
   0x0000000000409502 <+4700>:	mov    %rdx,%rsi
   0x0000000000409505 <+4703>:	mov    %rax,%rdi
   0x0000000000409508 <+4706>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040950d <+4711>:	mov    %rax,%rdx
   0x0000000000409510 <+4714>:	lea    -0x1f80(%rbp),%rax
   0x0000000000409517 <+4721>:	mov    %rax,%rsi
   0x000000000040951a <+4724>:	mov    %rdx,%rdi
   0x000000000040951d <+4727>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409522 <+4732>:	mov    %rax,%rdx
   0x0000000000409525 <+4735>:	lea    -0x2280(%rbp),%rax
   0x000000000040952c <+4742>:	mov    %rax,%rsi
   0x000000000040952f <+4745>:	mov    %rdx,%rdi
   0x0000000000409532 <+4748>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409537 <+4753>:	mov    %rax,%rdx
   0x000000000040953a <+4756>:	lea    -0x2330(%rbp),%rax
   0x0000000000409541 <+4763>:	mov    %rax,%rsi
   0x0000000000409544 <+4766>:	mov    %rdx,%rdi
   0x0000000000409547 <+4769>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040954c <+4774>:	mov    %rax,%rdx
   0x000000000040954f <+4777>:	lea    -0x2100(%rbp),%rax
   0x0000000000409556 <+4784>:	mov    %rax,%rsi
   0x0000000000409559 <+4787>:	mov    %rdx,%rdi
   0x000000000040955c <+4790>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409561 <+4795>:	mov    %rax,%rdx
   0x0000000000409564 <+4798>:	lea    -0x3870(%rbp),%rax
   0x000000000040956b <+4805>:	mov    %rax,%rsi
   0x000000000040956e <+4808>:	mov    %rdx,%rdi
   0x0000000000409571 <+4811>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409576 <+4816>:	mov    %rax,%rdx
   0x0000000000409579 <+4819>:	lea    -0x3930(%rbp),%rax
   0x0000000000409580 <+4826>:	mov    %rax,%rsi
   0x0000000000409583 <+4829>:	mov    %rdx,%rdi
   0x0000000000409586 <+4832>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040958b <+4837>:	mov    %rax,%rdx
   0x000000000040958e <+4840>:	lea    -0x39e0(%rbp),%rax
   0x0000000000409595 <+4847>:	mov    %rax,%rsi
   0x0000000000409598 <+4850>:	mov    %rdx,%rdi
   0x000000000040959b <+4853>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004095a0 <+4858>:	mov    %rax,%rdx
   0x00000000004095a3 <+4861>:	lea    -0x46f0(%rbp),%rax
   0x00000000004095aa <+4868>:	mov    %rax,%rsi
   0x00000000004095ad <+4871>:	mov    %rdx,%rdi
   0x00000000004095b0 <+4874>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004095b5 <+4879>:	lea    -0x110(%rbp),%rax
   0x00000000004095bc <+4886>:	mov    $0x424766,%esi
   0x00000000004095c1 <+4891>:	mov    %rax,%rdi
   0x00000000004095c4 <+4894>:	callq  0x407920 <_ZN7sc_core14sc_module_nameC1EPKc@plt>
   0x00000000004095c9 <+4899>:	lea    -0x110(%rbp),%rdx
   0x00000000004095d0 <+4906>:	lea    -0x8e90(%rbp),%rax
   0x00000000004095d7 <+4913>:	mov    %rdx,%rsi
   0x00000000004095da <+4916>:	mov    %rax,%rdi
   0x00000000004095dd <+4919>:	callq  0x40b4e0 <bios::bios(sc_core::sc_module_name)>
   0x00000000004095e2 <+4924>:	lea    -0x110(%rbp),%rax
   0x00000000004095e9 <+4931>:	mov    %rax,%rdi
   0x00000000004095ec <+4934>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x00000000004095f1 <+4939>:	lea    -0x8e90(%rbp),%rax
   0x00000000004095f8 <+4946>:	mov    $0x2,%esi
   0x00000000004095fd <+4951>:	mov    %rax,%rdi
   0x0000000000409600 <+4954>:	callq  0x40b4c4 <bios::init_param(int)>
   0x0000000000409605 <+4959>:	lea    -0x5d0(%rbp),%rax
   0x000000000040960c <+4966>:	lea    -0x8e90(%rbp),%rdx
   0x0000000000409613 <+4973>:	add    $0xd0,%rdx
   0x000000000040961a <+4980>:	mov    %rax,%rsi
   0x000000000040961d <+4983>:	mov    %rdx,%rdi
   0x0000000000409620 <+4986>:	callq  0x40f502 <sc_core::sc_in<unsigned int>::operator()(sc_core::sc_signal_in_if<unsigned int> const&)>
   0x0000000000409625 <+4991>:	lea    -0x3a0(%rbp),%rax
   0x000000000040962c <+4998>:	lea    -0x8e90(%rbp),%rdx
   0x0000000000409633 <+5005>:	add    $0x160,%rdx
   0x000000000040963a <+5012>:	mov    %rax,%rsi
   0x000000000040963d <+5015>:	mov    %rdx,%rdi
   0x0000000000409640 <+5018>:	callq  0x40b396 <sc_core::sc_in<bool>::operator()(sc_core::sc_signal_in_if<bool> const&)>
   0x0000000000409645 <+5023>:	lea    -0x470(%rbp),%rax
   0x000000000040964c <+5030>:	lea    -0x8e90(%rbp),%rdx
   0x0000000000409653 <+5037>:	add    $0x200,%rdx
   0x000000000040965a <+5044>:	mov    %rax,%rsi
   0x000000000040965d <+5047>:	mov    %rdx,%rdi
   0x0000000000409660 <+5050>:	callq  0x40b396 <sc_core::sc_in<bool>::operator()(sc_core::sc_signal_in_if<bool> const&)>
   0x0000000000409665 <+5055>:	lea    -0x520(%rbp),%rax
   0x000000000040966c <+5062>:	lea    -0x8e90(%rbp),%rdx
   0x0000000000409673 <+5069>:	add    $0x2a0,%rdx
   0x000000000040967a <+5076>:	mov    %rax,%rsi
   0x000000000040967d <+5079>:	mov    %rdx,%rdi
   0x0000000000409680 <+5082>:	callq  0x40f502 <sc_core::sc_in<unsigned int>::operator()(sc_core::sc_signal_in_if<unsigned int> const&)>
   0x0000000000409685 <+5087>:	lea    -0x680(%rbp),%rax
   0x000000000040968c <+5094>:	lea    -0x8e90(%rbp),%rdx
   0x0000000000409693 <+5101>:	add    $0x330,%rdx
   0x000000000040969a <+5108>:	mov    %rax,%rsi
   0x000000000040969d <+5111>:	mov    %rdx,%rdi
   0x00000000004096a0 <+5114>:	callq  0x40f536 <sc_core::sc_port_b<sc_core::sc_signal_inout_if<unsigned int> >::operator()(sc_core::sc_signal_inout_if<unsigned int>&)>
   0x00000000004096a5 <+5119>:	lea    -0x750(%rbp),%rax
   0x00000000004096ac <+5126>:	lea    -0x8e90(%rbp),%rdx
   0x00000000004096b3 <+5133>:	add    $0x3c8,%rdx
   0x00000000004096ba <+5140>:	mov    %rax,%rsi
   0x00000000004096bd <+5143>:	mov    %rdx,%rdi
   0x00000000004096c0 <+5146>:	callq  0x40f56a <sc_core::sc_port_b<sc_core::sc_signal_inout_if<bool> >::operator()(sc_core::sc_signal_inout_if<bool>&)>
   0x00000000004096c5 <+5151>:	lea    -0xfb0(%rbp),%rax
   0x00000000004096cc <+5158>:	lea    -0x8e90(%rbp),%rdx
   0x00000000004096d3 <+5165>:	add    $0x470,%rdx
   0x00000000004096da <+5172>:	mov    %rax,%rsi
   0x00000000004096dd <+5175>:	mov    %rdx,%rdi
   0x00000000004096e0 <+5178>:	callq  0x40f56a <sc_core::sc_port_b<sc_core::sc_signal_inout_if<bool> >::operator()(sc_core::sc_signal_inout_if<bool>&)>
   0x00000000004096e5 <+5183>:	lea    -0x46f0(%rbp),%rax
   0x00000000004096ec <+5190>:	lea    -0x8e90(%rbp),%rdx
   0x00000000004096f3 <+5197>:	add    $0x518,%rdx
   0x00000000004096fa <+5204>:	mov    %rax,%rsi
   0x00000000004096fd <+5207>:	mov    %rdx,%rdi
   0x0000000000409700 <+5210>:	callq  0x40b396 <sc_core::sc_in<bool>::operator()(sc_core::sc_signal_in_if<bool> const&)>
   0x0000000000409705 <+5215>:	lea    -0xe0(%rbp),%rax
   0x000000000040970c <+5222>:	mov    $0x424771,%esi
   0x0000000000409711 <+5227>:	mov    %rax,%rdi
   0x0000000000409714 <+5230>:	callq  0x407920 <_ZN7sc_core14sc_module_nameC1EPKc@plt>
   0x0000000000409719 <+5235>:	lea    -0xe0(%rbp),%rdx
   0x0000000000409720 <+5242>:	lea    -0x98a0(%rbp),%rax
   0x0000000000409727 <+5249>:	mov    %rdx,%rsi
   0x000000000040972a <+5252>:	mov    %rax,%rdi
   0x000000000040972d <+5255>:	callq  0x40b834 <paging::paging(sc_core::sc_module_name)>
   0x0000000000409732 <+5260>:	lea    -0xe0(%rbp),%rax
   0x0000000000409739 <+5267>:	mov    %rax,%rdi
   0x000000000040973c <+5270>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x0000000000409741 <+5275>:	lea    -0x5d0(%rbp),%rdx
   0x0000000000409748 <+5282>:	lea    -0x98a0(%rbp),%rax
   0x000000000040974f <+5289>:	mov    %rdx,%rsi
   0x0000000000409752 <+5292>:	mov    %rax,%rdi
   0x0000000000409755 <+5295>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040975a <+5300>:	mov    %rax,%rdx
   0x000000000040975d <+5303>:	lea    -0x3a0(%rbp),%rax
   0x0000000000409764 <+5310>:	mov    %rax,%rsi
   0x0000000000409767 <+5313>:	mov    %rdx,%rdi
   0x000000000040976a <+5316>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040976f <+5321>:	mov    %rax,%rdx
   0x0000000000409772 <+5324>:	lea    -0x470(%rbp),%rax
   0x0000000000409779 <+5331>:	mov    %rax,%rsi
   0x000000000040977c <+5334>:	mov    %rdx,%rdi
   0x000000000040977f <+5337>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409784 <+5342>:	mov    %rax,%rdx
   0x0000000000409787 <+5345>:	lea    -0x520(%rbp),%rax
   0x000000000040978e <+5352>:	mov    %rax,%rsi
   0x0000000000409791 <+5355>:	mov    %rdx,%rdi
   0x0000000000409794 <+5358>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409799 <+5363>:	mov    %rax,%rdx
   0x000000000040979c <+5366>:	lea    -0x800(%rbp),%rax
   0x00000000004097a3 <+5373>:	mov    %rax,%rsi
   0x00000000004097a6 <+5376>:	mov    %rdx,%rdi
   0x00000000004097a9 <+5379>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004097ae <+5384>:	mov    %rax,%rdx
   0x00000000004097b1 <+5387>:	lea    -0x8d0(%rbp),%rax
   0x00000000004097b8 <+5394>:	mov    %rax,%rsi
   0x00000000004097bb <+5397>:	mov    %rdx,%rdi
   0x00000000004097be <+5400>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004097c3 <+5405>:	mov    %rax,%rdx
   0x00000000004097c6 <+5408>:	lea    -0x9a0(%rbp),%rax
   0x00000000004097cd <+5415>:	mov    %rax,%rsi
   0x00000000004097d0 <+5418>:	mov    %rdx,%rdi
   0x00000000004097d3 <+5421>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004097d8 <+5426>:	mov    %rax,%rdx
   0x00000000004097db <+5429>:	lea    -0xa50(%rbp),%rax
   0x00000000004097e2 <+5436>:	mov    %rax,%rsi
   0x00000000004097e5 <+5439>:	mov    %rdx,%rdi
   0x00000000004097e8 <+5442>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004097ed <+5447>:	mov    %rax,%rdx
   0x00000000004097f0 <+5450>:	lea    -0xb20(%rbp),%rax
   0x00000000004097f7 <+5457>:	mov    %rax,%rsi
   0x00000000004097fa <+5460>:	mov    %rdx,%rdi
   0x00000000004097fd <+5463>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409802 <+5468>:	mov    %rax,%rdx
   0x0000000000409805 <+5471>:	lea    -0xbf0(%rbp),%rax
   0x000000000040980c <+5478>:	mov    %rax,%rsi
   0x000000000040980f <+5481>:	mov    %rdx,%rdi
   0x0000000000409812 <+5484>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409817 <+5489>:	mov    %rax,%rdx
   0x000000000040981a <+5492>:	lea    -0xca0(%rbp),%rax
   0x0000000000409821 <+5499>:	mov    %rax,%rsi
   0x0000000000409824 <+5502>:	mov    %rdx,%rdi
   0x0000000000409827 <+5505>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040982c <+5510>:	mov    %rax,%rdx
   0x000000000040982f <+5513>:	lea    -0x680(%rbp),%rax
   0x0000000000409836 <+5520>:	mov    %rax,%rsi
   0x0000000000409839 <+5523>:	mov    %rdx,%rdi
   0x000000000040983c <+5526>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409841 <+5531>:	mov    %rax,%rdx
   0x0000000000409844 <+5534>:	lea    -0x2d0(%rbp),%rax
   0x000000000040984b <+5541>:	mov    %rax,%rsi
   0x000000000040984e <+5544>:	mov    %rdx,%rdi
   0x0000000000409851 <+5547>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409856 <+5552>:	mov    %rax,%rdx
   0x0000000000409859 <+5555>:	lea    -0xfb0(%rbp),%rax
   0x0000000000409860 <+5562>:	mov    %rax,%rsi
   0x0000000000409863 <+5565>:	mov    %rdx,%rdi
   0x0000000000409866 <+5568>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040986b <+5573>:	mov    %rax,%rdx
   0x000000000040986e <+5576>:	lea    -0x46f0(%rbp),%rax
   0x0000000000409875 <+5583>:	mov    %rax,%rsi
   0x0000000000409878 <+5586>:	mov    %rdx,%rdi
   0x000000000040987b <+5589>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409880 <+5594>:	lea    -0xb0(%rbp),%rax
   0x0000000000409887 <+5601>:	mov    $0x42477e,%esi
   0x000000000040988c <+5606>:	mov    %rax,%rdi
   0x000000000040988f <+5609>:	callq  0x407920 <_ZN7sc_core14sc_module_nameC1EPKc@plt>
   0x0000000000409894 <+5614>:	lea    -0xb0(%rbp),%rdx
   0x000000000040989b <+5621>:	lea    -0x9fa0(%rbp),%rax
   0x00000000004098a2 <+5628>:	mov    %rdx,%rsi
   0x00000000004098a5 <+5631>:	mov    %rax,%rdi
   0x00000000004098a8 <+5634>:	callq  0x40bbc0 <icache::icache(sc_core::sc_module_name)>
   0x00000000004098ad <+5639>:	lea    -0xb0(%rbp),%rax
   0x00000000004098b4 <+5646>:	mov    %rax,%rdi
   0x00000000004098b7 <+5649>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x00000000004098bc <+5654>:	lea    -0x9fa0(%rbp),%rax
   0x00000000004098c3 <+5661>:	mov    $0x2,%esi
   0x00000000004098c8 <+5666>:	mov    %rax,%rdi
   0x00000000004098cb <+5669>:	callq  0x40bba4 <icache::init_param(int)>
   0x00000000004098d0 <+5674>:	lea    -0xa50(%rbp),%rdx
   0x00000000004098d7 <+5681>:	lea    -0x9fa0(%rbp),%rax
   0x00000000004098de <+5688>:	mov    %rdx,%rsi
   0x00000000004098e1 <+5691>:	mov    %rax,%rdi
   0x00000000004098e4 <+5694>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004098e9 <+5699>:	mov    %rax,%rdx
   0x00000000004098ec <+5702>:	lea    -0xb20(%rbp),%rax
   0x00000000004098f3 <+5709>:	mov    %rax,%rsi
   0x00000000004098f6 <+5712>:	mov    %rdx,%rdi
   0x00000000004098f9 <+5715>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004098fe <+5720>:	mov    %rax,%rdx
   0x0000000000409901 <+5723>:	lea    -0xbf0(%rbp),%rax
   0x0000000000409908 <+5730>:	mov    %rax,%rsi
   0x000000000040990b <+5733>:	mov    %rdx,%rdi
   0x000000000040990e <+5736>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409913 <+5741>:	mov    %rax,%rdx
   0x0000000000409916 <+5744>:	lea    -0xca0(%rbp),%rax
   0x000000000040991d <+5751>:	mov    %rax,%rsi
   0x0000000000409920 <+5754>:	mov    %rdx,%rdi
   0x0000000000409923 <+5757>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409928 <+5762>:	mov    %rax,%rdx
   0x000000000040992b <+5765>:	lea    -0x2810(%rbp),%rax
   0x0000000000409932 <+5772>:	mov    %rax,%rsi
   0x0000000000409935 <+5775>:	mov    %rdx,%rdi
   0x0000000000409938 <+5778>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040993d <+5783>:	mov    %rax,%rdx
   0x0000000000409940 <+5786>:	lea    -0x28c0(%rbp),%rax
   0x0000000000409947 <+5793>:	mov    %rax,%rsi
   0x000000000040994a <+5796>:	mov    %rdx,%rdi
   0x000000000040994d <+5799>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409952 <+5804>:	mov    %rax,%rdx
   0x0000000000409955 <+5807>:	lea    -0x800(%rbp),%rax
   0x000000000040995c <+5814>:	mov    %rax,%rsi
   0x000000000040995f <+5817>:	mov    %rdx,%rdi
   0x0000000000409962 <+5820>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409967 <+5825>:	mov    %rax,%rdx
   0x000000000040996a <+5828>:	lea    -0x8d0(%rbp),%rax
   0x0000000000409971 <+5835>:	mov    %rax,%rsi
   0x0000000000409974 <+5838>:	mov    %rdx,%rdi
   0x0000000000409977 <+5841>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x000000000040997c <+5846>:	mov    %rax,%rdx
   0x000000000040997f <+5849>:	lea    -0x9a0(%rbp),%rax
   0x0000000000409986 <+5856>:	mov    %rax,%rsi
   0x0000000000409989 <+5859>:	mov    %rdx,%rdi
   0x000000000040998c <+5862>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409991 <+5867>:	mov    %rax,%rdx
   0x0000000000409994 <+5870>:	lea    -0x46f0(%rbp),%rax
   0x000000000040999b <+5877>:	mov    %rax,%rsi
   0x000000000040999e <+5880>:	mov    %rdx,%rdi
   0x00000000004099a1 <+5883>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x00000000004099a6 <+5888>:	lea    -0x80(%rbp),%rax
   0x00000000004099aa <+5892>:	mov    $0x42478b,%esi
   0x00000000004099af <+5897>:	mov    %rax,%rdi
   0x00000000004099b2 <+5900>:	callq  0x407920 <_ZN7sc_core14sc_module_nameC1EPKc@plt>
   0x00000000004099b7 <+5905>:	lea    -0x80(%rbp),%rdx
   0x00000000004099bb <+5909>:	lea    -0xa720(%rbp),%rax
   0x00000000004099c2 <+5916>:	mov    %rdx,%rsi
   0x00000000004099c5 <+5919>:	mov    %rax,%rdi
   0x00000000004099c8 <+5922>:	callq  0x40d538 <dcache::dcache(sc_core::sc_module_name)>
   0x00000000004099cd <+5927>:	lea    -0x80(%rbp),%rax
   0x00000000004099d1 <+5931>:	mov    %rax,%rdi
   0x00000000004099d4 <+5934>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x00000000004099d9 <+5939>:	lea    -0xa720(%rbp),%rax
   0x00000000004099e0 <+5946>:	mov    $0x2,%esi
   0x00000000004099e5 <+5951>:	mov    %rax,%rdi
   0x00000000004099e8 <+5954>:	callq  0x40d51c <dcache::init_param(int)>
   0x00000000004099ed <+5959>:	lea    -0x2970(%rbp),%rdx
   0x00000000004099f4 <+5966>:	lea    -0xa720(%rbp),%rax
   0x00000000004099fb <+5973>:	mov    %rdx,%rsi
   0x00000000004099fe <+5976>:	mov    %rax,%rdi
   0x0000000000409a01 <+5979>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409a06 <+5984>:	mov    %rax,%rdx
   0x0000000000409a09 <+5987>:	lea    -0x2a20(%rbp),%rax
   0x0000000000409a10 <+5994>:	mov    %rax,%rsi
   0x0000000000409a13 <+5997>:	mov    %rdx,%rdi
   0x0000000000409a16 <+6000>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409a1b <+6005>:	mov    %rax,%rdx
   0x0000000000409a1e <+6008>:	lea    -0x2af0(%rbp),%rax
   0x0000000000409a25 <+6015>:	mov    %rax,%rsi
   0x0000000000409a28 <+6018>:	mov    %rdx,%rdi
   0x0000000000409a2b <+6021>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409a30 <+6026>:	mov    %rax,%rdx
   0x0000000000409a33 <+6029>:	lea    -0x2bc0(%rbp),%rax
   0x0000000000409a3a <+6036>:	mov    %rax,%rsi
   0x0000000000409a3d <+6039>:	mov    %rdx,%rdi
   0x0000000000409a40 <+6042>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409a45 <+6047>:	mov    %rax,%rdx
   0x0000000000409a48 <+6050>:	lea    -0x2c70(%rbp),%rax
   0x0000000000409a4f <+6057>:	mov    %rax,%rsi
   0x0000000000409a52 <+6060>:	mov    %rdx,%rdi
   0x0000000000409a55 <+6063>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409a5a <+6068>:	mov    %rax,%rdx
   0x0000000000409a5d <+6071>:	lea    -0x2d20(%rbp),%rax
   0x0000000000409a64 <+6078>:	mov    %rax,%rsi
   0x0000000000409a67 <+6081>:	mov    %rdx,%rdi
   0x0000000000409a6a <+6084>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409a6f <+6089>:	mov    %rax,%rdx
   0x0000000000409a72 <+6092>:	lea    -0x2dd0(%rbp),%rax
   0x0000000000409a79 <+6099>:	mov    %rax,%rsi
   0x0000000000409a7c <+6102>:	mov    %rdx,%rdi
   0x0000000000409a7f <+6105>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409a84 <+6110>:	mov    %rax,%rdx
   0x0000000000409a87 <+6113>:	lea    -0x2e80(%rbp),%rax
   0x0000000000409a8e <+6120>:	mov    %rax,%rsi
   0x0000000000409a91 <+6123>:	mov    %rdx,%rdi
   0x0000000000409a94 <+6126>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409a99 <+6131>:	mov    %rax,%rdx
   0x0000000000409a9c <+6134>:	lea    -0x2f50(%rbp),%rax
   0x0000000000409aa3 <+6141>:	mov    %rax,%rsi
   0x0000000000409aa6 <+6144>:	mov    %rdx,%rdi
   0x0000000000409aa9 <+6147>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409aae <+6152>:	mov    %rax,%rdx
   0x0000000000409ab1 <+6155>:	lea    -0x3000(%rbp),%rax
   0x0000000000409ab8 <+6162>:	mov    %rax,%rsi
   0x0000000000409abb <+6165>:	mov    %rdx,%rdi
   0x0000000000409abe <+6168>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409ac3 <+6173>:	mov    %rax,%rdx
   0x0000000000409ac6 <+6176>:	lea    -0x46f0(%rbp),%rax
   0x0000000000409acd <+6183>:	mov    %rax,%rsi
   0x0000000000409ad0 <+6186>:	mov    %rdx,%rdi
   0x0000000000409ad3 <+6189>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409ad8 <+6194>:	lea    -0x50(%rbp),%rax
   0x0000000000409adc <+6198>:	mov    $0x424798,%esi
   0x0000000000409ae1 <+6203>:	mov    %rax,%rdi
   0x0000000000409ae4 <+6206>:	callq  0x407920 <_ZN7sc_core14sc_module_nameC1EPKc@plt>
   0x0000000000409ae9 <+6211>:	lea    -0x50(%rbp),%rdx
   0x0000000000409aed <+6215>:	lea    -0xae40(%rbp),%rax
   0x0000000000409af4 <+6222>:	mov    %rdx,%rsi
   0x0000000000409af7 <+6225>:	mov    %rax,%rdi
   0x0000000000409afa <+6228>:	callq  0x40d95e <pic::pic(sc_core::sc_module_name)>
   0x0000000000409aff <+6233>:	lea    -0x50(%rbp),%rax
   0x0000000000409b03 <+6237>:	mov    %rax,%rdi
   0x0000000000409b06 <+6240>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x0000000000409b0b <+6245>:	lea    -0x3ab0(%rbp),%rdx
   0x0000000000409b12 <+6252>:	lea    -0xae40(%rbp),%rax
   0x0000000000409b19 <+6259>:	mov    %rdx,%rsi
   0x0000000000409b1c <+6262>:	mov    %rax,%rdi
   0x0000000000409b1f <+6265>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409b24 <+6270>:	mov    %rax,%rdx
   0x0000000000409b27 <+6273>:	lea    -0x3b80(%rbp),%rax
   0x0000000000409b2e <+6280>:	mov    %rax,%rsi
   0x0000000000409b31 <+6283>:	mov    %rdx,%rdi
   0x0000000000409b34 <+6286>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409b39 <+6291>:	mov    %rax,%rdx
   0x0000000000409b3c <+6294>:	lea    -0x3c50(%rbp),%rax
   0x0000000000409b43 <+6301>:	mov    %rax,%rsi
   0x0000000000409b46 <+6304>:	mov    %rdx,%rdi
   0x0000000000409b49 <+6307>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409b4e <+6312>:	mov    %rax,%rdx
   0x0000000000409b51 <+6315>:	lea    -0x3d20(%rbp),%rax
   0x0000000000409b58 <+6322>:	mov    %rax,%rsi
   0x0000000000409b5b <+6325>:	mov    %rdx,%rdi
   0x0000000000409b5e <+6328>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409b63 <+6333>:	mov    %rax,%rdx
   0x0000000000409b66 <+6336>:	lea    -0x4110(%rbp),%rax
   0x0000000000409b6d <+6343>:	mov    %rax,%rsi
   0x0000000000409b70 <+6346>:	mov    %rdx,%rdi
   0x0000000000409b73 <+6349>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409b78 <+6354>:	mov    %rax,%rdx
   0x0000000000409b7b <+6357>:	lea    -0x3df0(%rbp),%rax
   0x0000000000409b82 <+6364>:	mov    %rax,%rsi
   0x0000000000409b85 <+6367>:	mov    %rdx,%rdi
   0x0000000000409b88 <+6370>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409b8d <+6375>:	mov    %rax,%rdx
   0x0000000000409b90 <+6378>:	lea    -0x4110(%rbp),%rax
   0x0000000000409b97 <+6385>:	mov    %rax,%rsi
   0x0000000000409b9a <+6388>:	mov    %rdx,%rdi
   0x0000000000409b9d <+6391>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409ba2 <+6396>:	mov    %rax,%rdx
   0x0000000000409ba5 <+6399>:	lea    -0x3ec0(%rbp),%rax
   0x0000000000409bac <+6406>:	mov    %rax,%rsi
   0x0000000000409baf <+6409>:	mov    %rdx,%rdi
   0x0000000000409bb2 <+6412>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409bb7 <+6417>:	mov    %rax,%rdx
   0x0000000000409bba <+6420>:	lea    -0x4040(%rbp),%rax
   0x0000000000409bc1 <+6427>:	mov    %rax,%rsi
   0x0000000000409bc4 <+6430>:	mov    %rdx,%rdi
   0x0000000000409bc7 <+6433>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409bcc <+6438>:	mov    %rax,%rdx
   0x0000000000409bcf <+6441>:	lea    -0x3f70(%rbp),%rax
   0x0000000000409bd6 <+6448>:	mov    %rax,%rsi
   0x0000000000409bd9 <+6451>:	mov    %rdx,%rdi
   0x0000000000409bdc <+6454>:	callq  0x407e60 <_ZN7sc_core9sc_modulelsERNS_12sc_interfaceE@plt>
   0x0000000000409be1 <+6459>:	mov    $0x0,%edi
   0x0000000000409be6 <+6464>:	callq  0x407c60 <time@plt>
   0x0000000000409beb <+6469>:	mov    %rax,-0x20(%rbp)
   0x0000000000409bef <+6473>:	callq  0x407b90 <_ZN7sc_core8sc_startEv@plt>
   0x0000000000409bf4 <+6478>:	mov    $0x0,%edi
   0x0000000000409bf9 <+6483>:	callq  0x407c60 <time@plt>
   0x0000000000409bfe <+6488>:	sub    -0x20(%rbp),%rax
   0x0000000000409c02 <+6492>:	mov    %rax,%rbx
   0x0000000000409c05 <+6495>:	mov    $0x4247a2,%esi
   0x0000000000409c0a <+6500>:	mov    $0x636740,%edi
   0x0000000000409c0f <+6505>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000409c14 <+6510>:	mov    %rbx,%rsi
   0x0000000000409c17 <+6513>:	mov    %rax,%rdi
   0x0000000000409c1a <+6516>:	callq  0x4080c0 <_ZNSolsEl@plt>
   0x0000000000409c1f <+6521>:	mov    $0x407a20,%esi
   0x0000000000409c24 <+6526>:	mov    %rax,%rdi
   0x0000000000409c27 <+6529>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000409c2c <+6534>:	mov    $0x0,%ebx
   0x0000000000409c31 <+6539>:	lea    -0xae40(%rbp),%rax
   0x0000000000409c38 <+6546>:	mov    %rax,%rdi
   0x0000000000409c3b <+6549>:	callq  0x412512 <pic::~pic()>
   0x0000000000409c40 <+6554>:	lea    -0xa720(%rbp),%rax
   0x0000000000409c47 <+6561>:	mov    %rax,%rdi
   0x0000000000409c4a <+6564>:	callq  0x41273c <dcache::~dcache()>
   0x0000000000409c4f <+6569>:	lea    -0x9fa0(%rbp),%rax
   0x0000000000409c56 <+6576>:	mov    %rax,%rdi
   0x0000000000409c59 <+6579>:	callq  0x413c36 <icache::~icache()>
   0x0000000000409c5e <+6584>:	lea    -0x98a0(%rbp),%rax
   0x0000000000409c65 <+6591>:	mov    %rax,%rdi
   0x0000000000409c68 <+6594>:	callq  0x413e60 <paging::~paging()>
   0x0000000000409c6d <+6599>:	lea    -0x8e90(%rbp),%rax
   0x0000000000409c74 <+6606>:	mov    %rax,%rdi
   0x0000000000409c77 <+6609>:	callq  0x414156 <bios::~bios()>
   0x0000000000409c7c <+6614>:	lea    -0x88c0(%rbp),%rax
   0x0000000000409c83 <+6621>:	mov    %rax,%rdi
   0x0000000000409c86 <+6624>:	callq  0x412b8e <mmxu::~mmxu()>
   0x0000000000409c8b <+6629>:	lea    -0x8290(%rbp),%rax
   0x0000000000409c92 <+6636>:	mov    %rax,%rdi
   0x0000000000409c95 <+6639>:	callq  0x41298e <floating::~floating()>
   0x0000000000409c9a <+6644>:	lea    -0x7c60(%rbp),%rax
   0x0000000000409ca1 <+6651>:	mov    %rax,%rdi
   0x0000000000409ca4 <+6654>:	callq  0x412d8e <exec::~exec()>
   0x0000000000409ca9 <+6659>:	lea    -0x7090(%rbp),%rax
   0x0000000000409cb0 <+6666>:	mov    %rax,%rdi
   0x0000000000409cb3 <+6669>:	callq  0x413100 <decode::~decode()>
   0x0000000000409cb8 <+6674>:	lea    -0x56a0(%rbp),%rax
   0x0000000000409cbf <+6681>:	mov    %rax,%rdi
   0x0000000000409cc2 <+6684>:	callq  0x4137ce <fetch::~fetch()>
   0x0000000000409cc7 <+6689>:	lea    -0x46f0(%rbp),%rax
   0x0000000000409cce <+6696>:	mov    %rax,%rdi
   0x0000000000409cd1 <+6699>:	callq  0x407bb0 <_ZN7sc_core8sc_clockD1Ev@plt>
   0x0000000000409cd6 <+6704>:	lea    -0x44e0(%rbp),%rax
   0x0000000000409cdd <+6711>:	mov    %rax,%rdi
   0x0000000000409ce0 <+6714>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409ce5 <+6719>:	lea    -0x4410(%rbp),%rax
   0x0000000000409cec <+6726>:	mov    %rax,%rdi
   0x0000000000409cef <+6729>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409cf4 <+6734>:	lea    -0x4340(%rbp),%rax
   0x0000000000409cfb <+6741>:	mov    %rax,%rdi
   0x0000000000409cfe <+6744>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409d03 <+6749>:	lea    -0x4270(%rbp),%rax
   0x0000000000409d0a <+6756>:	mov    %rax,%rdi
   0x0000000000409d0d <+6759>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409d12 <+6764>:	lea    -0x41c0(%rbp),%rax
   0x0000000000409d19 <+6771>:	mov    %rax,%rdi
   0x0000000000409d1c <+6774>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409d21 <+6779>:	lea    -0x4110(%rbp),%rax
   0x0000000000409d28 <+6786>:	mov    %rax,%rdi
   0x0000000000409d2b <+6789>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409d30 <+6794>:	lea    -0x4040(%rbp),%rax
   0x0000000000409d37 <+6801>:	mov    %rax,%rdi
   0x0000000000409d3a <+6804>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409d3f <+6809>:	lea    -0x3f70(%rbp),%rax
   0x0000000000409d46 <+6816>:	mov    %rax,%rdi
   0x0000000000409d49 <+6819>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409d4e <+6824>:	lea    -0x3ec0(%rbp),%rax
   0x0000000000409d55 <+6831>:	mov    %rax,%rdi
   0x0000000000409d58 <+6834>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409d5d <+6839>:	lea    -0x3df0(%rbp),%rax
   0x0000000000409d64 <+6846>:	mov    %rax,%rdi
   0x0000000000409d67 <+6849>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409d6c <+6854>:	lea    -0x3d20(%rbp),%rax
   0x0000000000409d73 <+6861>:	mov    %rax,%rdi
   0x0000000000409d76 <+6864>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409d7b <+6869>:	lea    -0x3c50(%rbp),%rax
   0x0000000000409d82 <+6876>:	mov    %rax,%rdi
   0x0000000000409d85 <+6879>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409d8a <+6884>:	lea    -0x3b80(%rbp),%rax
   0x0000000000409d91 <+6891>:	mov    %rax,%rdi
   0x0000000000409d94 <+6894>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409d99 <+6899>:	lea    -0x3ab0(%rbp),%rax
   0x0000000000409da0 <+6906>:	mov    %rax,%rdi
   0x0000000000409da3 <+6909>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409da8 <+6914>:	lea    -0x39e0(%rbp),%rax
   0x0000000000409daf <+6921>:	mov    %rax,%rdi
   0x0000000000409db2 <+6924>:	callq  0x40eb96 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)1>::~sc_signal()>
   0x0000000000409db7 <+6929>:	lea    -0x3930(%rbp),%rax
   0x0000000000409dbe <+6936>:	mov    %rax,%rdi
   0x0000000000409dc1 <+6939>:	callq  0x407880 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE1EED1Ev@plt>
   0x0000000000409dc6 <+6944>:	lea    -0x3870(%rbp),%rax
   0x0000000000409dcd <+6951>:	mov    %rax,%rdi
   0x0000000000409dd0 <+6954>:	callq  0x40f398 <sc_core::sc_signal<int, (sc_core::sc_writer_policy)1>::~sc_signal()>
   0x0000000000409dd5 <+6959>:	lea    -0x37c0(%rbp),%rax
   0x0000000000409ddc <+6966>:	mov    %rax,%rdi
   0x0000000000409ddf <+6969>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409de4 <+6974>:	lea    -0x3710(%rbp),%rax
   0x0000000000409deb <+6981>:	mov    %rax,%rdi
   0x0000000000409dee <+6984>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409df3 <+6989>:	lea    -0x3640(%rbp),%rax
   0x0000000000409dfa <+6996>:	mov    %rax,%rdi
   0x0000000000409dfd <+6999>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409e02 <+7004>:	lea    -0x3590(%rbp),%rax
   0x0000000000409e09 <+7011>:	mov    %rax,%rdi
   0x0000000000409e0c <+7014>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409e11 <+7019>:	lea    -0x34c0(%rbp),%rax
   0x0000000000409e18 <+7026>:	mov    %rax,%rdi
   0x0000000000409e1b <+7029>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409e20 <+7034>:	lea    -0x33f0(%rbp),%rax
   0x0000000000409e27 <+7041>:	mov    %rax,%rdi
   0x0000000000409e2a <+7044>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409e2f <+7049>:	lea    -0x3320(%rbp),%rax
   0x0000000000409e36 <+7056>:	mov    %rax,%rdi
   0x0000000000409e39 <+7059>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409e3e <+7064>:	lea    -0x3250(%rbp),%rax
   0x0000000000409e45 <+7071>:	mov    %rax,%rdi
   0x0000000000409e48 <+7074>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409e4d <+7079>:	lea    -0x31a0(%rbp),%rax
   0x0000000000409e54 <+7086>:	mov    %rax,%rdi
   0x0000000000409e57 <+7089>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409e5c <+7094>:	lea    -0x30d0(%rbp),%rax
   0x0000000000409e63 <+7101>:	mov    %rax,%rdi
   0x0000000000409e66 <+7104>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409e6b <+7109>:	lea    -0x3000(%rbp),%rax
   0x0000000000409e72 <+7116>:	mov    %rax,%rdi
   0x0000000000409e75 <+7119>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409e7a <+7124>:	lea    -0x2f50(%rbp),%rax
   0x0000000000409e81 <+7131>:	mov    %rax,%rdi
   0x0000000000409e84 <+7134>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409e89 <+7139>:	lea    -0x2e80(%rbp),%rax
   0x0000000000409e90 <+7146>:	mov    %rax,%rdi
   0x0000000000409e93 <+7149>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409e98 <+7154>:	lea    -0x2dd0(%rbp),%rax
   0x0000000000409e9f <+7161>:	mov    %rax,%rdi
   0x0000000000409ea2 <+7164>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409ea7 <+7169>:	lea    -0x2d20(%rbp),%rax
   0x0000000000409eae <+7176>:	mov    %rax,%rdi
   0x0000000000409eb1 <+7179>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409eb6 <+7184>:	lea    -0x2c70(%rbp),%rax
   0x0000000000409ebd <+7191>:	mov    %rax,%rdi
   0x0000000000409ec0 <+7194>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409ec5 <+7199>:	lea    -0x2bc0(%rbp),%rax
   0x0000000000409ecc <+7206>:	mov    %rax,%rdi
   0x0000000000409ecf <+7209>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409ed4 <+7214>:	lea    -0x2af0(%rbp),%rax
   0x0000000000409edb <+7221>:	mov    %rax,%rdi
   0x0000000000409ede <+7224>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409ee3 <+7229>:	lea    -0x2a20(%rbp),%rax
   0x0000000000409eea <+7236>:	mov    %rax,%rdi
   0x0000000000409eed <+7239>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409ef2 <+7244>:	lea    -0x2970(%rbp),%rax
   0x0000000000409ef9 <+7251>:	mov    %rax,%rdi
   0x0000000000409efc <+7254>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409f01 <+7259>:	lea    -0x28c0(%rbp),%rax
   0x0000000000409f08 <+7266>:	mov    %rax,%rdi
   0x0000000000409f0b <+7269>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409f10 <+7274>:	lea    -0x2810(%rbp),%rax
   0x0000000000409f17 <+7281>:	mov    %rax,%rdi
   0x0000000000409f1a <+7284>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409f1f <+7289>:	lea    -0x2740(%rbp),%rax
   0x0000000000409f26 <+7296>:	mov    %rax,%rdi
   0x0000000000409f29 <+7299>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409f2e <+7304>:	lea    -0x2670(%rbp),%rax
   0x0000000000409f35 <+7311>:	mov    %rax,%rdi
   0x0000000000409f38 <+7314>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409f3d <+7319>:	lea    -0x25a0(%rbp),%rax
   0x0000000000409f44 <+7326>:	mov    %rax,%rdi
   0x0000000000409f47 <+7329>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409f4c <+7334>:	lea    -0x24d0(%rbp),%rax
   0x0000000000409f53 <+7341>:	mov    %rax,%rdi
   0x0000000000409f56 <+7344>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409f5b <+7349>:	lea    -0x2400(%rbp),%rax
   0x0000000000409f62 <+7356>:	mov    %rax,%rdi
   0x0000000000409f65 <+7359>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409f6a <+7364>:	lea    -0x2330(%rbp),%rax
   0x0000000000409f71 <+7371>:	mov    %rax,%rdi
   0x0000000000409f74 <+7374>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409f79 <+7379>:	lea    -0x2280(%rbp),%rax
   0x0000000000409f80 <+7386>:	mov    %rax,%rdi
   0x0000000000409f83 <+7389>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409f88 <+7394>:	lea    -0x21d0(%rbp),%rax
   0x0000000000409f8f <+7401>:	mov    %rax,%rdi
   0x0000000000409f92 <+7404>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409f97 <+7409>:	lea    -0x2100(%rbp),%rax
   0x0000000000409f9e <+7416>:	mov    %rax,%rdi
   0x0000000000409fa1 <+7419>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409fa6 <+7424>:	lea    -0x2050(%rbp),%rax
   0x0000000000409fad <+7431>:	mov    %rax,%rdi
   0x0000000000409fb0 <+7434>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409fb5 <+7439>:	lea    -0x1f80(%rbp),%rax
   0x0000000000409fbc <+7446>:	mov    %rax,%rdi
   0x0000000000409fbf <+7449>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409fc4 <+7454>:	lea    -0x1ed0(%rbp),%rax
   0x0000000000409fcb <+7461>:	mov    %rax,%rdi
   0x0000000000409fce <+7464>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409fd3 <+7469>:	lea    -0x1e20(%rbp),%rax
   0x0000000000409fda <+7476>:	mov    %rax,%rdi
   0x0000000000409fdd <+7479>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x0000000000409fe2 <+7484>:	lea    -0x1d50(%rbp),%rax
   0x0000000000409fe9 <+7491>:	mov    %rax,%rdi
   0x0000000000409fec <+7494>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x0000000000409ff1 <+7499>:	lea    -0x1ca0(%rbp),%rax
   0x0000000000409ff8 <+7506>:	mov    %rax,%rdi
   0x0000000000409ffb <+7509>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a000 <+7514>:	lea    -0x1bd0(%rbp),%rax
   0x000000000040a007 <+7521>:	mov    %rax,%rdi
   0x000000000040a00a <+7524>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a00f <+7529>:	lea    -0x1b20(%rbp),%rax
   0x000000000040a016 <+7536>:	mov    %rax,%rdi
   0x000000000040a019 <+7539>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a01e <+7544>:	lea    -0x1a70(%rbp),%rax
   0x000000000040a025 <+7551>:	mov    %rax,%rdi
   0x000000000040a028 <+7554>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a02d <+7559>:	lea    -0x19a0(%rbp),%rax
   0x000000000040a034 <+7566>:	mov    %rax,%rdi
   0x000000000040a037 <+7569>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a03c <+7574>:	lea    -0x18f0(%rbp),%rax
   0x000000000040a043 <+7581>:	mov    %rax,%rdi
   0x000000000040a046 <+7584>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a04b <+7589>:	lea    -0x1820(%rbp),%rax
   0x000000000040a052 <+7596>:	mov    %rax,%rdi
   0x000000000040a055 <+7599>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a05a <+7604>:	lea    -0x1770(%rbp),%rax
   0x000000000040a061 <+7611>:	mov    %rax,%rdi
   0x000000000040a064 <+7614>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a069 <+7619>:	lea    -0x16a0(%rbp),%rax
   0x000000000040a070 <+7626>:	mov    %rax,%rdi
   0x000000000040a073 <+7629>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a078 <+7634>:	lea    -0x15d0(%rbp),%rax
   0x000000000040a07f <+7641>:	mov    %rax,%rdi
   0x000000000040a082 <+7644>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a087 <+7649>:	lea    -0x1520(%rbp),%rax
   0x000000000040a08e <+7656>:	mov    %rax,%rdi
   0x000000000040a091 <+7659>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a096 <+7664>:	lea    -0x1450(%rbp),%rax
   0x000000000040a09d <+7671>:	mov    %rax,%rdi
   0x000000000040a0a0 <+7674>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a0a5 <+7679>:	lea    -0x1380(%rbp),%rax
   0x000000000040a0ac <+7686>:	mov    %rax,%rdi
   0x000000000040a0af <+7689>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a0b4 <+7694>:	lea    -0x12b0(%rbp),%rax
   0x000000000040a0bb <+7701>:	mov    %rax,%rdi
   0x000000000040a0be <+7704>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a0c3 <+7709>:	lea    -0x1200(%rbp),%rax
   0x000000000040a0ca <+7716>:	mov    %rax,%rdi
   0x000000000040a0cd <+7719>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a0d2 <+7724>:	lea    -0x1130(%rbp),%rax
   0x000000000040a0d9 <+7731>:	mov    %rax,%rdi
   0x000000000040a0dc <+7734>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a0e1 <+7739>:	lea    -0x1080(%rbp),%rax
   0x000000000040a0e8 <+7746>:	mov    %rax,%rdi
   0x000000000040a0eb <+7749>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a0f0 <+7754>:	lea    -0xfb0(%rbp),%rax
   0x000000000040a0f7 <+7761>:	mov    %rax,%rdi
   0x000000000040a0fa <+7764>:	callq  0x407880 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE1EED1Ev@plt>
   0x000000000040a0ff <+7769>:	lea    -0xef0(%rbp),%rax
   0x000000000040a106 <+7776>:	mov    %rax,%rdi
   0x000000000040a109 <+7779>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a10e <+7784>:	lea    -0xe20(%rbp),%rax
   0x000000000040a115 <+7791>:	mov    %rax,%rdi
   0x000000000040a118 <+7794>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a11d <+7799>:	lea    -0xd50(%rbp),%rax
   0x000000000040a124 <+7806>:	mov    %rax,%rdi
   0x000000000040a127 <+7809>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a12c <+7814>:	lea    -0xca0(%rbp),%rax
   0x000000000040a133 <+7821>:	mov    %rax,%rdi
   0x000000000040a136 <+7824>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a13b <+7829>:	lea    -0xbf0(%rbp),%rax
   0x000000000040a142 <+7836>:	mov    %rax,%rdi
   0x000000000040a145 <+7839>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a14a <+7844>:	lea    -0xb20(%rbp),%rax
   0x000000000040a151 <+7851>:	mov    %rax,%rdi
   0x000000000040a154 <+7854>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a159 <+7859>:	lea    -0xa50(%rbp),%rax
   0x000000000040a160 <+7866>:	mov    %rax,%rdi
   0x000000000040a163 <+7869>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a168 <+7874>:	lea    -0x9a0(%rbp),%rax
   0x000000000040a16f <+7881>:	mov    %rax,%rdi
   0x000000000040a172 <+7884>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a177 <+7889>:	lea    -0x8d0(%rbp),%rax
   0x000000000040a17e <+7896>:	mov    %rax,%rdi
   0x000000000040a181 <+7899>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a186 <+7904>:	lea    -0x800(%rbp),%rax
   0x000000000040a18d <+7911>:	mov    %rax,%rdi
   0x000000000040a190 <+7914>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a195 <+7919>:	lea    -0x750(%rbp),%rax
   0x000000000040a19c <+7926>:	mov    %rax,%rdi
   0x000000000040a19f <+7929>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a1a4 <+7934>:	lea    -0x680(%rbp),%rax
   0x000000000040a1ab <+7941>:	mov    %rax,%rdi
   0x000000000040a1ae <+7944>:	callq  0x40eb96 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)1>::~sc_signal()>
   0x000000000040a1b3 <+7949>:	lea    -0x5d0(%rbp),%rax
   0x000000000040a1ba <+7956>:	mov    %rax,%rdi
   0x000000000040a1bd <+7959>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a1c2 <+7964>:	lea    -0x520(%rbp),%rax
   0x000000000040a1c9 <+7971>:	mov    %rax,%rdi
   0x000000000040a1cc <+7974>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a1d1 <+7979>:	lea    -0x470(%rbp),%rax
   0x000000000040a1d8 <+7986>:	mov    %rax,%rdi
   0x000000000040a1db <+7989>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a1e0 <+7994>:	lea    -0x3a0(%rbp),%rax
   0x000000000040a1e7 <+8001>:	mov    %rax,%rdi
   0x000000000040a1ea <+8004>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a1ef <+8009>:	lea    -0x2d0(%rbp),%rax
   0x000000000040a1f6 <+8016>:	mov    %rax,%rdi
   0x000000000040a1f9 <+8019>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a1fe <+8024>:	mov    %ebx,%eax
   0x000000000040a200 <+8026>:	jmpq   0x40ab84 <sc_main(int, char**)+10462>
   0x000000000040a205 <+8031>:	mov    %rax,%rbx
   0x000000000040a208 <+8034>:	lea    -0x200(%rbp),%rax
   0x000000000040a20f <+8041>:	mov    %rax,%rdi
   0x000000000040a212 <+8044>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x000000000040a217 <+8049>:	jmpq   0x40a48a <sc_main(int, char**)+8676>
   0x000000000040a21c <+8054>:	mov    %rax,%rbx
   0x000000000040a21f <+8057>:	lea    -0x56a0(%rbp),%rax
   0x000000000040a226 <+8064>:	mov    %rax,%rdi
   0x000000000040a229 <+8067>:	callq  0x4137ce <fetch::~fetch()>
   0x000000000040a22e <+8072>:	jmpq   0x40a48a <sc_main(int, char**)+8676>
   0x000000000040a233 <+8077>:	mov    %rax,%rbx
   0x000000000040a236 <+8080>:	lea    -0x1d0(%rbp),%rax
   0x000000000040a23d <+8087>:	mov    %rax,%rdi
   0x000000000040a240 <+8090>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x000000000040a245 <+8095>:	jmpq   0x40a476 <sc_main(int, char**)+8656>
   0x000000000040a24a <+8100>:	mov    %rax,%rbx
   0x000000000040a24d <+8103>:	lea    -0x7090(%rbp),%rax
   0x000000000040a254 <+8110>:	mov    %rax,%rdi
   0x000000000040a257 <+8113>:	callq  0x413100 <decode::~decode()>
   0x000000000040a25c <+8118>:	jmpq   0x40a476 <sc_main(int, char**)+8656>
   0x000000000040a261 <+8123>:	mov    %rax,%rbx
   0x000000000040a264 <+8126>:	lea    -0x1a0(%rbp),%rax
   0x000000000040a26b <+8133>:	mov    %rax,%rdi
   0x000000000040a26e <+8136>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x000000000040a273 <+8141>:	jmpq   0x40a462 <sc_main(int, char**)+8636>
   0x000000000040a278 <+8146>:	mov    %rax,%rbx
   0x000000000040a27b <+8149>:	lea    -0x7c60(%rbp),%rax
   0x000000000040a282 <+8156>:	mov    %rax,%rdi
   0x000000000040a285 <+8159>:	callq  0x412d8e <exec::~exec()>
   0x000000000040a28a <+8164>:	jmpq   0x40a462 <sc_main(int, char**)+8636>
   0x000000000040a28f <+8169>:	mov    %rax,%rbx
   0x000000000040a292 <+8172>:	lea    -0x170(%rbp),%rax
   0x000000000040a299 <+8179>:	mov    %rax,%rdi
   0x000000000040a29c <+8182>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x000000000040a2a1 <+8187>:	jmpq   0x40a44e <sc_main(int, char**)+8616>
   0x000000000040a2a6 <+8192>:	mov    %rax,%rbx
   0x000000000040a2a9 <+8195>:	lea    -0x8290(%rbp),%rax
   0x000000000040a2b0 <+8202>:	mov    %rax,%rdi
   0x000000000040a2b3 <+8205>:	callq  0x41298e <floating::~floating()>
   0x000000000040a2b8 <+8210>:	jmpq   0x40a44e <sc_main(int, char**)+8616>
   0x000000000040a2bd <+8215>:	mov    %rax,%rbx
   0x000000000040a2c0 <+8218>:	lea    -0x140(%rbp),%rax
   0x000000000040a2c7 <+8225>:	mov    %rax,%rdi
   0x000000000040a2ca <+8228>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x000000000040a2cf <+8233>:	jmpq   0x40a43a <sc_main(int, char**)+8596>
   0x000000000040a2d4 <+8238>:	mov    %rax,%rbx
   0x000000000040a2d7 <+8241>:	lea    -0x88c0(%rbp),%rax
   0x000000000040a2de <+8248>:	mov    %rax,%rdi
   0x000000000040a2e1 <+8251>:	callq  0x412b8e <mmxu::~mmxu()>
   0x000000000040a2e6 <+8256>:	jmpq   0x40a43a <sc_main(int, char**)+8596>
   0x000000000040a2eb <+8261>:	mov    %rax,%rbx
   0x000000000040a2ee <+8264>:	lea    -0x110(%rbp),%rax
   0x000000000040a2f5 <+8271>:	mov    %rax,%rdi
   0x000000000040a2f8 <+8274>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x000000000040a2fd <+8279>:	jmpq   0x40a426 <sc_main(int, char**)+8576>
   0x000000000040a302 <+8284>:	mov    %rax,%rbx
   0x000000000040a305 <+8287>:	lea    -0x8e90(%rbp),%rax
   0x000000000040a30c <+8294>:	mov    %rax,%rdi
   0x000000000040a30f <+8297>:	callq  0x414156 <bios::~bios()>
   0x000000000040a314 <+8302>:	jmpq   0x40a426 <sc_main(int, char**)+8576>
   0x000000000040a319 <+8307>:	mov    %rax,%rbx
   0x000000000040a31c <+8310>:	lea    -0xe0(%rbp),%rax
   0x000000000040a323 <+8317>:	mov    %rax,%rdi
   0x000000000040a326 <+8320>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x000000000040a32b <+8325>:	jmpq   0x40a412 <sc_main(int, char**)+8556>
   0x000000000040a330 <+8330>:	mov    %rax,%rbx
   0x000000000040a333 <+8333>:	lea    -0x98a0(%rbp),%rax
   0x000000000040a33a <+8340>:	mov    %rax,%rdi
   0x000000000040a33d <+8343>:	callq  0x413e60 <paging::~paging()>
   0x000000000040a342 <+8348>:	jmpq   0x40a412 <sc_main(int, char**)+8556>
   0x000000000040a347 <+8353>:	mov    %rax,%rbx
   0x000000000040a34a <+8356>:	lea    -0xb0(%rbp),%rax
   0x000000000040a351 <+8363>:	mov    %rax,%rdi
   0x000000000040a354 <+8366>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x000000000040a359 <+8371>:	jmpq   0x40a3fe <sc_main(int, char**)+8536>
   0x000000000040a35e <+8376>:	mov    %rax,%rbx
   0x000000000040a361 <+8379>:	lea    -0x9fa0(%rbp),%rax
   0x000000000040a368 <+8386>:	mov    %rax,%rdi
   0x000000000040a36b <+8389>:	callq  0x413c36 <icache::~icache()>
   0x000000000040a370 <+8394>:	jmpq   0x40a3fe <sc_main(int, char**)+8536>
   0x000000000040a375 <+8399>:	mov    %rax,%rbx
   0x000000000040a378 <+8402>:	lea    -0x80(%rbp),%rax
   0x000000000040a37c <+8406>:	mov    %rax,%rdi
   0x000000000040a37f <+8409>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x000000000040a384 <+8414>:	jmp    0x40a3ea <sc_main(int, char**)+8516>
   0x000000000040a386 <+8416>:	mov    %rax,%rbx
   0x000000000040a389 <+8419>:	lea    -0xa720(%rbp),%rax
   0x000000000040a390 <+8426>:	mov    %rax,%rdi
   0x000000000040a393 <+8429>:	callq  0x41273c <dcache::~dcache()>
   0x000000000040a398 <+8434>:	jmp    0x40a3ea <sc_main(int, char**)+8516>
   0x000000000040a39a <+8436>:	mov    %rax,%rbx
   0x000000000040a39d <+8439>:	lea    -0x50(%rbp),%rax
   0x000000000040a3a1 <+8443>:	mov    %rax,%rdi
   0x000000000040a3a4 <+8446>:	callq  0x4080d0 <_ZN7sc_core14sc_module_nameD1Ev@plt>
   0x000000000040a3a9 <+8451>:	jmp    0x40a3d6 <sc_main(int, char**)+8496>
   0x000000000040a3ab <+8453>:	mov    %rax,%rbx
   0x000000000040a3ae <+8456>:	lea    -0xae40(%rbp),%rax
   0x000000000040a3b5 <+8463>:	mov    %rax,%rdi
   0x000000000040a3b8 <+8466>:	callq  0x412512 <pic::~pic()>
   0x000000000040a3bd <+8471>:	jmp    0x40a3d6 <sc_main(int, char**)+8496>
   0x000000000040a3bf <+8473>:	mov    %rax,%rbx
   0x000000000040a3c2 <+8476>:	lea    -0xae40(%rbp),%rax
   0x000000000040a3c9 <+8483>:	mov    %rax,%rdi
   0x000000000040a3cc <+8486>:	callq  0x412512 <pic::~pic()>
   0x000000000040a3d1 <+8491>:	jmp    0x40a3d6 <sc_main(int, char**)+8496>
   0x000000000040a3d3 <+8493>:	mov    %rax,%rbx
   0x000000000040a3d6 <+8496>:	lea    -0xa720(%rbp),%rax
   0x000000000040a3dd <+8503>:	mov    %rax,%rdi
   0x000000000040a3e0 <+8506>:	callq  0x41273c <dcache::~dcache()>
   0x000000000040a3e5 <+8511>:	jmp    0x40a3ea <sc_main(int, char**)+8516>
   0x000000000040a3e7 <+8513>:	mov    %rax,%rbx
   0x000000000040a3ea <+8516>:	lea    -0x9fa0(%rbp),%rax
   0x000000000040a3f1 <+8523>:	mov    %rax,%rdi
   0x000000000040a3f4 <+8526>:	callq  0x413c36 <icache::~icache()>
   0x000000000040a3f9 <+8531>:	jmp    0x40a3fe <sc_main(int, char**)+8536>
   0x000000000040a3fb <+8533>:	mov    %rax,%rbx
   0x000000000040a3fe <+8536>:	lea    -0x98a0(%rbp),%rax
   0x000000000040a405 <+8543>:	mov    %rax,%rdi
   0x000000000040a408 <+8546>:	callq  0x413e60 <paging::~paging()>
   0x000000000040a40d <+8551>:	jmp    0x40a412 <sc_main(int, char**)+8556>
   0x000000000040a40f <+8553>:	mov    %rax,%rbx
   0x000000000040a412 <+8556>:	lea    -0x8e90(%rbp),%rax
   0x000000000040a419 <+8563>:	mov    %rax,%rdi
   0x000000000040a41c <+8566>:	callq  0x414156 <bios::~bios()>
   0x000000000040a421 <+8571>:	jmp    0x40a426 <sc_main(int, char**)+8576>
   0x000000000040a423 <+8573>:	mov    %rax,%rbx
   0x000000000040a426 <+8576>:	lea    -0x88c0(%rbp),%rax
   0x000000000040a42d <+8583>:	mov    %rax,%rdi
   0x000000000040a430 <+8586>:	callq  0x412b8e <mmxu::~mmxu()>
   0x000000000040a435 <+8591>:	jmp    0x40a43a <sc_main(int, char**)+8596>
   0x000000000040a437 <+8593>:	mov    %rax,%rbx
   0x000000000040a43a <+8596>:	lea    -0x8290(%rbp),%rax
   0x000000000040a441 <+8603>:	mov    %rax,%rdi
   0x000000000040a444 <+8606>:	callq  0x41298e <floating::~floating()>
   0x000000000040a449 <+8611>:	jmp    0x40a44e <sc_main(int, char**)+8616>
   0x000000000040a44b <+8613>:	mov    %rax,%rbx
   0x000000000040a44e <+8616>:	lea    -0x7c60(%rbp),%rax
   0x000000000040a455 <+8623>:	mov    %rax,%rdi
   0x000000000040a458 <+8626>:	callq  0x412d8e <exec::~exec()>
   0x000000000040a45d <+8631>:	jmp    0x40a462 <sc_main(int, char**)+8636>
   0x000000000040a45f <+8633>:	mov    %rax,%rbx
   0x000000000040a462 <+8636>:	lea    -0x7090(%rbp),%rax
   0x000000000040a469 <+8643>:	mov    %rax,%rdi
   0x000000000040a46c <+8646>:	callq  0x413100 <decode::~decode()>
   0x000000000040a471 <+8651>:	jmp    0x40a476 <sc_main(int, char**)+8656>
   0x000000000040a473 <+8653>:	mov    %rax,%rbx
   0x000000000040a476 <+8656>:	lea    -0x56a0(%rbp),%rax
   0x000000000040a47d <+8663>:	mov    %rax,%rdi
   0x000000000040a480 <+8666>:	callq  0x4137ce <fetch::~fetch()>
   0x000000000040a485 <+8671>:	jmp    0x40a48a <sc_main(int, char**)+8676>
   0x000000000040a487 <+8673>:	mov    %rax,%rbx
   0x000000000040a48a <+8676>:	lea    -0x46f0(%rbp),%rax
   0x000000000040a491 <+8683>:	mov    %rax,%rdi
   0x000000000040a494 <+8686>:	callq  0x407bb0 <_ZN7sc_core8sc_clockD1Ev@plt>
   0x000000000040a499 <+8691>:	jmp    0x40a49e <sc_main(int, char**)+8696>
   0x000000000040a49b <+8693>:	mov    %rax,%rbx
   0x000000000040a49e <+8696>:	lea    -0x44e0(%rbp),%rax
   0x000000000040a4a5 <+8703>:	mov    %rax,%rdi
   0x000000000040a4a8 <+8706>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a4ad <+8711>:	jmp    0x40a4b2 <sc_main(int, char**)+8716>
   0x000000000040a4af <+8713>:	mov    %rax,%rbx
   0x000000000040a4b2 <+8716>:	lea    -0x4410(%rbp),%rax
   0x000000000040a4b9 <+8723>:	mov    %rax,%rdi
   0x000000000040a4bc <+8726>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a4c1 <+8731>:	jmp    0x40a4c6 <sc_main(int, char**)+8736>
   0x000000000040a4c3 <+8733>:	mov    %rax,%rbx
   0x000000000040a4c6 <+8736>:	lea    -0x4340(%rbp),%rax
   0x000000000040a4cd <+8743>:	mov    %rax,%rdi
   0x000000000040a4d0 <+8746>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a4d5 <+8751>:	jmp    0x40a4da <sc_main(int, char**)+8756>
   0x000000000040a4d7 <+8753>:	mov    %rax,%rbx
   0x000000000040a4da <+8756>:	lea    -0x4270(%rbp),%rax
   0x000000000040a4e1 <+8763>:	mov    %rax,%rdi
   0x000000000040a4e4 <+8766>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a4e9 <+8771>:	jmp    0x40a4ee <sc_main(int, char**)+8776>
   0x000000000040a4eb <+8773>:	mov    %rax,%rbx
   0x000000000040a4ee <+8776>:	lea    -0x41c0(%rbp),%rax
   0x000000000040a4f5 <+8783>:	mov    %rax,%rdi
   0x000000000040a4f8 <+8786>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a4fd <+8791>:	jmp    0x40a502 <sc_main(int, char**)+8796>
   0x000000000040a4ff <+8793>:	mov    %rax,%rbx
   0x000000000040a502 <+8796>:	lea    -0x4110(%rbp),%rax
   0x000000000040a509 <+8803>:	mov    %rax,%rdi
   0x000000000040a50c <+8806>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a511 <+8811>:	jmp    0x40a516 <sc_main(int, char**)+8816>
   0x000000000040a513 <+8813>:	mov    %rax,%rbx
   0x000000000040a516 <+8816>:	lea    -0x4040(%rbp),%rax
   0x000000000040a51d <+8823>:	mov    %rax,%rdi
   0x000000000040a520 <+8826>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a525 <+8831>:	jmp    0x40a52a <sc_main(int, char**)+8836>
   0x000000000040a527 <+8833>:	mov    %rax,%rbx
   0x000000000040a52a <+8836>:	lea    -0x3f70(%rbp),%rax
   0x000000000040a531 <+8843>:	mov    %rax,%rdi
   0x000000000040a534 <+8846>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a539 <+8851>:	jmp    0x40a53e <sc_main(int, char**)+8856>
   0x000000000040a53b <+8853>:	mov    %rax,%rbx
   0x000000000040a53e <+8856>:	lea    -0x3ec0(%rbp),%rax
   0x000000000040a545 <+8863>:	mov    %rax,%rdi
   0x000000000040a548 <+8866>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a54d <+8871>:	jmp    0x40a552 <sc_main(int, char**)+8876>
   0x000000000040a54f <+8873>:	mov    %rax,%rbx
   0x000000000040a552 <+8876>:	lea    -0x3df0(%rbp),%rax
   0x000000000040a559 <+8883>:	mov    %rax,%rdi
   0x000000000040a55c <+8886>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a561 <+8891>:	jmp    0x40a566 <sc_main(int, char**)+8896>
   0x000000000040a563 <+8893>:	mov    %rax,%rbx
   0x000000000040a566 <+8896>:	lea    -0x3d20(%rbp),%rax
   0x000000000040a56d <+8903>:	mov    %rax,%rdi
   0x000000000040a570 <+8906>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a575 <+8911>:	jmp    0x40a57a <sc_main(int, char**)+8916>
   0x000000000040a577 <+8913>:	mov    %rax,%rbx
   0x000000000040a57a <+8916>:	lea    -0x3c50(%rbp),%rax
   0x000000000040a581 <+8923>:	mov    %rax,%rdi
   0x000000000040a584 <+8926>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a589 <+8931>:	jmp    0x40a58e <sc_main(int, char**)+8936>
   0x000000000040a58b <+8933>:	mov    %rax,%rbx
   0x000000000040a58e <+8936>:	lea    -0x3b80(%rbp),%rax
   0x000000000040a595 <+8943>:	mov    %rax,%rdi
   0x000000000040a598 <+8946>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a59d <+8951>:	jmp    0x40a5a2 <sc_main(int, char**)+8956>
   0x000000000040a59f <+8953>:	mov    %rax,%rbx
   0x000000000040a5a2 <+8956>:	lea    -0x3ab0(%rbp),%rax
   0x000000000040a5a9 <+8963>:	mov    %rax,%rdi
   0x000000000040a5ac <+8966>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a5b1 <+8971>:	jmp    0x40a5b6 <sc_main(int, char**)+8976>
   0x000000000040a5b3 <+8973>:	mov    %rax,%rbx
   0x000000000040a5b6 <+8976>:	lea    -0x39e0(%rbp),%rax
   0x000000000040a5bd <+8983>:	mov    %rax,%rdi
   0x000000000040a5c0 <+8986>:	callq  0x40eb96 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)1>::~sc_signal()>
   0x000000000040a5c5 <+8991>:	jmp    0x40a5ca <sc_main(int, char**)+8996>
   0x000000000040a5c7 <+8993>:	mov    %rax,%rbx
   0x000000000040a5ca <+8996>:	lea    -0x3930(%rbp),%rax
   0x000000000040a5d1 <+9003>:	mov    %rax,%rdi
   0x000000000040a5d4 <+9006>:	callq  0x407880 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE1EED1Ev@plt>
   0x000000000040a5d9 <+9011>:	jmp    0x40a5de <sc_main(int, char**)+9016>
   0x000000000040a5db <+9013>:	mov    %rax,%rbx
   0x000000000040a5de <+9016>:	lea    -0x3870(%rbp),%rax
   0x000000000040a5e5 <+9023>:	mov    %rax,%rdi
   0x000000000040a5e8 <+9026>:	callq  0x40f398 <sc_core::sc_signal<int, (sc_core::sc_writer_policy)1>::~sc_signal()>
   0x000000000040a5ed <+9031>:	jmp    0x40a5f2 <sc_main(int, char**)+9036>
   0x000000000040a5ef <+9033>:	mov    %rax,%rbx
   0x000000000040a5f2 <+9036>:	lea    -0x37c0(%rbp),%rax
   0x000000000040a5f9 <+9043>:	mov    %rax,%rdi
   0x000000000040a5fc <+9046>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a601 <+9051>:	jmp    0x40a606 <sc_main(int, char**)+9056>
   0x000000000040a603 <+9053>:	mov    %rax,%rbx
   0x000000000040a606 <+9056>:	lea    -0x3710(%rbp),%rax
   0x000000000040a60d <+9063>:	mov    %rax,%rdi
   0x000000000040a610 <+9066>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a615 <+9071>:	jmp    0x40a61a <sc_main(int, char**)+9076>
   0x000000000040a617 <+9073>:	mov    %rax,%rbx
   0x000000000040a61a <+9076>:	lea    -0x3640(%rbp),%rax
   0x000000000040a621 <+9083>:	mov    %rax,%rdi
   0x000000000040a624 <+9086>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a629 <+9091>:	jmp    0x40a62e <sc_main(int, char**)+9096>
   0x000000000040a62b <+9093>:	mov    %rax,%rbx
   0x000000000040a62e <+9096>:	lea    -0x3590(%rbp),%rax
   0x000000000040a635 <+9103>:	mov    %rax,%rdi
   0x000000000040a638 <+9106>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a63d <+9111>:	jmp    0x40a642 <sc_main(int, char**)+9116>
   0x000000000040a63f <+9113>:	mov    %rax,%rbx
   0x000000000040a642 <+9116>:	lea    -0x34c0(%rbp),%rax
   0x000000000040a649 <+9123>:	mov    %rax,%rdi
   0x000000000040a64c <+9126>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a651 <+9131>:	jmp    0x40a656 <sc_main(int, char**)+9136>
   0x000000000040a653 <+9133>:	mov    %rax,%rbx
   0x000000000040a656 <+9136>:	lea    -0x33f0(%rbp),%rax
   0x000000000040a65d <+9143>:	mov    %rax,%rdi
   0x000000000040a660 <+9146>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a665 <+9151>:	jmp    0x40a66a <sc_main(int, char**)+9156>
   0x000000000040a667 <+9153>:	mov    %rax,%rbx
   0x000000000040a66a <+9156>:	lea    -0x3320(%rbp),%rax
   0x000000000040a671 <+9163>:	mov    %rax,%rdi
   0x000000000040a674 <+9166>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a679 <+9171>:	jmp    0x40a67e <sc_main(int, char**)+9176>
   0x000000000040a67b <+9173>:	mov    %rax,%rbx
   0x000000000040a67e <+9176>:	lea    -0x3250(%rbp),%rax
   0x000000000040a685 <+9183>:	mov    %rax,%rdi
   0x000000000040a688 <+9186>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a68d <+9191>:	jmp    0x40a692 <sc_main(int, char**)+9196>
   0x000000000040a68f <+9193>:	mov    %rax,%rbx
   0x000000000040a692 <+9196>:	lea    -0x31a0(%rbp),%rax
   0x000000000040a699 <+9203>:	mov    %rax,%rdi
   0x000000000040a69c <+9206>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a6a1 <+9211>:	jmp    0x40a6a6 <sc_main(int, char**)+9216>
   0x000000000040a6a3 <+9213>:	mov    %rax,%rbx
   0x000000000040a6a6 <+9216>:	lea    -0x30d0(%rbp),%rax
   0x000000000040a6ad <+9223>:	mov    %rax,%rdi
   0x000000000040a6b0 <+9226>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a6b5 <+9231>:	jmp    0x40a6ba <sc_main(int, char**)+9236>
   0x000000000040a6b7 <+9233>:	mov    %rax,%rbx
   0x000000000040a6ba <+9236>:	lea    -0x3000(%rbp),%rax
   0x000000000040a6c1 <+9243>:	mov    %rax,%rdi
   0x000000000040a6c4 <+9246>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a6c9 <+9251>:	jmp    0x40a6ce <sc_main(int, char**)+9256>
   0x000000000040a6cb <+9253>:	mov    %rax,%rbx
   0x000000000040a6ce <+9256>:	lea    -0x2f50(%rbp),%rax
   0x000000000040a6d5 <+9263>:	mov    %rax,%rdi
   0x000000000040a6d8 <+9266>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a6dd <+9271>:	jmp    0x40a6e2 <sc_main(int, char**)+9276>
   0x000000000040a6df <+9273>:	mov    %rax,%rbx
   0x000000000040a6e2 <+9276>:	lea    -0x2e80(%rbp),%rax
   0x000000000040a6e9 <+9283>:	mov    %rax,%rdi
   0x000000000040a6ec <+9286>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a6f1 <+9291>:	jmp    0x40a6f6 <sc_main(int, char**)+9296>
   0x000000000040a6f3 <+9293>:	mov    %rax,%rbx
   0x000000000040a6f6 <+9296>:	lea    -0x2dd0(%rbp),%rax
   0x000000000040a6fd <+9303>:	mov    %rax,%rdi
   0x000000000040a700 <+9306>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a705 <+9311>:	jmp    0x40a70a <sc_main(int, char**)+9316>
   0x000000000040a707 <+9313>:	mov    %rax,%rbx
   0x000000000040a70a <+9316>:	lea    -0x2d20(%rbp),%rax
   0x000000000040a711 <+9323>:	mov    %rax,%rdi
   0x000000000040a714 <+9326>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a719 <+9331>:	jmp    0x40a71e <sc_main(int, char**)+9336>
   0x000000000040a71b <+9333>:	mov    %rax,%rbx
   0x000000000040a71e <+9336>:	lea    -0x2c70(%rbp),%rax
   0x000000000040a725 <+9343>:	mov    %rax,%rdi
   0x000000000040a728 <+9346>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a72d <+9351>:	jmp    0x40a732 <sc_main(int, char**)+9356>
   0x000000000040a72f <+9353>:	mov    %rax,%rbx
   0x000000000040a732 <+9356>:	lea    -0x2bc0(%rbp),%rax
   0x000000000040a739 <+9363>:	mov    %rax,%rdi
   0x000000000040a73c <+9366>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a741 <+9371>:	jmp    0x40a746 <sc_main(int, char**)+9376>
   0x000000000040a743 <+9373>:	mov    %rax,%rbx
   0x000000000040a746 <+9376>:	lea    -0x2af0(%rbp),%rax
   0x000000000040a74d <+9383>:	mov    %rax,%rdi
   0x000000000040a750 <+9386>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a755 <+9391>:	jmp    0x40a75a <sc_main(int, char**)+9396>
   0x000000000040a757 <+9393>:	mov    %rax,%rbx
   0x000000000040a75a <+9396>:	lea    -0x2a20(%rbp),%rax
   0x000000000040a761 <+9403>:	mov    %rax,%rdi
   0x000000000040a764 <+9406>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a769 <+9411>:	jmp    0x40a76e <sc_main(int, char**)+9416>
   0x000000000040a76b <+9413>:	mov    %rax,%rbx
   0x000000000040a76e <+9416>:	lea    -0x2970(%rbp),%rax
   0x000000000040a775 <+9423>:	mov    %rax,%rdi
   0x000000000040a778 <+9426>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a77d <+9431>:	jmp    0x40a782 <sc_main(int, char**)+9436>
   0x000000000040a77f <+9433>:	mov    %rax,%rbx
   0x000000000040a782 <+9436>:	lea    -0x28c0(%rbp),%rax
   0x000000000040a789 <+9443>:	mov    %rax,%rdi
   0x000000000040a78c <+9446>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a791 <+9451>:	jmp    0x40a796 <sc_main(int, char**)+9456>
   0x000000000040a793 <+9453>:	mov    %rax,%rbx
   0x000000000040a796 <+9456>:	lea    -0x2810(%rbp),%rax
   0x000000000040a79d <+9463>:	mov    %rax,%rdi
   0x000000000040a7a0 <+9466>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a7a5 <+9471>:	jmp    0x40a7aa <sc_main(int, char**)+9476>
   0x000000000040a7a7 <+9473>:	mov    %rax,%rbx
   0x000000000040a7aa <+9476>:	lea    -0x2740(%rbp),%rax
   0x000000000040a7b1 <+9483>:	mov    %rax,%rdi
   0x000000000040a7b4 <+9486>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a7b9 <+9491>:	jmp    0x40a7be <sc_main(int, char**)+9496>
   0x000000000040a7bb <+9493>:	mov    %rax,%rbx
   0x000000000040a7be <+9496>:	lea    -0x2670(%rbp),%rax
   0x000000000040a7c5 <+9503>:	mov    %rax,%rdi
   0x000000000040a7c8 <+9506>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a7cd <+9511>:	jmp    0x40a7d2 <sc_main(int, char**)+9516>
   0x000000000040a7cf <+9513>:	mov    %rax,%rbx
   0x000000000040a7d2 <+9516>:	lea    -0x25a0(%rbp),%rax
   0x000000000040a7d9 <+9523>:	mov    %rax,%rdi
   0x000000000040a7dc <+9526>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a7e1 <+9531>:	jmp    0x40a7e6 <sc_main(int, char**)+9536>
   0x000000000040a7e3 <+9533>:	mov    %rax,%rbx
   0x000000000040a7e6 <+9536>:	lea    -0x24d0(%rbp),%rax
   0x000000000040a7ed <+9543>:	mov    %rax,%rdi
   0x000000000040a7f0 <+9546>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a7f5 <+9551>:	jmp    0x40a7fa <sc_main(int, char**)+9556>
   0x000000000040a7f7 <+9553>:	mov    %rax,%rbx
   0x000000000040a7fa <+9556>:	lea    -0x2400(%rbp),%rax
   0x000000000040a801 <+9563>:	mov    %rax,%rdi
   0x000000000040a804 <+9566>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a809 <+9571>:	jmp    0x40a80e <sc_main(int, char**)+9576>
   0x000000000040a80b <+9573>:	mov    %rax,%rbx
   0x000000000040a80e <+9576>:	lea    -0x2330(%rbp),%rax
   0x000000000040a815 <+9583>:	mov    %rax,%rdi
   0x000000000040a818 <+9586>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a81d <+9591>:	jmp    0x40a822 <sc_main(int, char**)+9596>
   0x000000000040a81f <+9593>:	mov    %rax,%rbx
   0x000000000040a822 <+9596>:	lea    -0x2280(%rbp),%rax
   0x000000000040a829 <+9603>:	mov    %rax,%rdi
   0x000000000040a82c <+9606>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a831 <+9611>:	jmp    0x40a836 <sc_main(int, char**)+9616>
   0x000000000040a833 <+9613>:	mov    %rax,%rbx
   0x000000000040a836 <+9616>:	lea    -0x21d0(%rbp),%rax
   0x000000000040a83d <+9623>:	mov    %rax,%rdi
   0x000000000040a840 <+9626>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a845 <+9631>:	jmp    0x40a84a <sc_main(int, char**)+9636>
   0x000000000040a847 <+9633>:	mov    %rax,%rbx
   0x000000000040a84a <+9636>:	lea    -0x2100(%rbp),%rax
   0x000000000040a851 <+9643>:	mov    %rax,%rdi
   0x000000000040a854 <+9646>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a859 <+9651>:	jmp    0x40a85e <sc_main(int, char**)+9656>
   0x000000000040a85b <+9653>:	mov    %rax,%rbx
   0x000000000040a85e <+9656>:	lea    -0x2050(%rbp),%rax
   0x000000000040a865 <+9663>:	mov    %rax,%rdi
   0x000000000040a868 <+9666>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a86d <+9671>:	jmp    0x40a872 <sc_main(int, char**)+9676>
   0x000000000040a86f <+9673>:	mov    %rax,%rbx
   0x000000000040a872 <+9676>:	lea    -0x1f80(%rbp),%rax
   0x000000000040a879 <+9683>:	mov    %rax,%rdi
   0x000000000040a87c <+9686>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a881 <+9691>:	jmp    0x40a886 <sc_main(int, char**)+9696>
   0x000000000040a883 <+9693>:	mov    %rax,%rbx
   0x000000000040a886 <+9696>:	lea    -0x1ed0(%rbp),%rax
   0x000000000040a88d <+9703>:	mov    %rax,%rdi
   0x000000000040a890 <+9706>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a895 <+9711>:	jmp    0x40a89a <sc_main(int, char**)+9716>
   0x000000000040a897 <+9713>:	mov    %rax,%rbx
   0x000000000040a89a <+9716>:	lea    -0x1e20(%rbp),%rax
   0x000000000040a8a1 <+9723>:	mov    %rax,%rdi
   0x000000000040a8a4 <+9726>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a8a9 <+9731>:	jmp    0x40a8ae <sc_main(int, char**)+9736>
   0x000000000040a8ab <+9733>:	mov    %rax,%rbx
   0x000000000040a8ae <+9736>:	lea    -0x1d50(%rbp),%rax
   0x000000000040a8b5 <+9743>:	mov    %rax,%rdi
   0x000000000040a8b8 <+9746>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a8bd <+9751>:	jmp    0x40a8c2 <sc_main(int, char**)+9756>
   0x000000000040a8bf <+9753>:	mov    %rax,%rbx
   0x000000000040a8c2 <+9756>:	lea    -0x1ca0(%rbp),%rax
   0x000000000040a8c9 <+9763>:	mov    %rax,%rdi
   0x000000000040a8cc <+9766>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a8d1 <+9771>:	jmp    0x40a8d6 <sc_main(int, char**)+9776>
   0x000000000040a8d3 <+9773>:	mov    %rax,%rbx
   0x000000000040a8d6 <+9776>:	lea    -0x1bd0(%rbp),%rax
   0x000000000040a8dd <+9783>:	mov    %rax,%rdi
   0x000000000040a8e0 <+9786>:	callq  0x40f11c <sc_core::sc_signal<int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a8e5 <+9791>:	jmp    0x40a8ea <sc_main(int, char**)+9796>
   0x000000000040a8e7 <+9793>:	mov    %rax,%rbx
   0x000000000040a8ea <+9796>:	lea    -0x1b20(%rbp),%rax
   0x000000000040a8f1 <+9803>:	mov    %rax,%rdi
   0x000000000040a8f4 <+9806>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a8f9 <+9811>:	jmp    0x40a8fe <sc_main(int, char**)+9816>
   0x000000000040a8fb <+9813>:	mov    %rax,%rbx
   0x000000000040a8fe <+9816>:	lea    -0x1a70(%rbp),%rax
   0x000000000040a905 <+9823>:	mov    %rax,%rdi
   0x000000000040a908 <+9826>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a90d <+9831>:	jmp    0x40a912 <sc_main(int, char**)+9836>
   0x000000000040a90f <+9833>:	mov    %rax,%rbx
   0x000000000040a912 <+9836>:	lea    -0x19a0(%rbp),%rax
   0x000000000040a919 <+9843>:	mov    %rax,%rdi
   0x000000000040a91c <+9846>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a921 <+9851>:	jmp    0x40a926 <sc_main(int, char**)+9856>
   0x000000000040a923 <+9853>:	mov    %rax,%rbx
   0x000000000040a926 <+9856>:	lea    -0x18f0(%rbp),%rax
   0x000000000040a92d <+9863>:	mov    %rax,%rdi
   0x000000000040a930 <+9866>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a935 <+9871>:	jmp    0x40a93a <sc_main(int, char**)+9876>
   0x000000000040a937 <+9873>:	mov    %rax,%rbx
   0x000000000040a93a <+9876>:	lea    -0x1820(%rbp),%rax
   0x000000000040a941 <+9883>:	mov    %rax,%rdi
   0x000000000040a944 <+9886>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a949 <+9891>:	jmp    0x40a94e <sc_main(int, char**)+9896>
   0x000000000040a94b <+9893>:	mov    %rax,%rbx
   0x000000000040a94e <+9896>:	lea    -0x1770(%rbp),%rax
   0x000000000040a955 <+9903>:	mov    %rax,%rdi
   0x000000000040a958 <+9906>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a95d <+9911>:	jmp    0x40a962 <sc_main(int, char**)+9916>
   0x000000000040a95f <+9913>:	mov    %rax,%rbx
   0x000000000040a962 <+9916>:	lea    -0x16a0(%rbp),%rax
   0x000000000040a969 <+9923>:	mov    %rax,%rdi
   0x000000000040a96c <+9926>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a971 <+9931>:	jmp    0x40a976 <sc_main(int, char**)+9936>
   0x000000000040a973 <+9933>:	mov    %rax,%rbx
   0x000000000040a976 <+9936>:	lea    -0x15d0(%rbp),%rax
   0x000000000040a97d <+9943>:	mov    %rax,%rdi
   0x000000000040a980 <+9946>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a985 <+9951>:	jmp    0x40a98a <sc_main(int, char**)+9956>
   0x000000000040a987 <+9953>:	mov    %rax,%rbx
   0x000000000040a98a <+9956>:	lea    -0x1520(%rbp),%rax
   0x000000000040a991 <+9963>:	mov    %rax,%rdi
   0x000000000040a994 <+9966>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a999 <+9971>:	jmp    0x40a99e <sc_main(int, char**)+9976>
   0x000000000040a99b <+9973>:	mov    %rax,%rbx
   0x000000000040a99e <+9976>:	lea    -0x1450(%rbp),%rax
   0x000000000040a9a5 <+9983>:	mov    %rax,%rdi
   0x000000000040a9a8 <+9986>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a9ad <+9991>:	jmp    0x40a9b2 <sc_main(int, char**)+9996>
   0x000000000040a9af <+9993>:	mov    %rax,%rbx
   0x000000000040a9b2 <+9996>:	lea    -0x1380(%rbp),%rax
   0x000000000040a9b9 <+10003>:	mov    %rax,%rdi
   0x000000000040a9bc <+10006>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a9c1 <+10011>:	jmp    0x40a9c6 <sc_main(int, char**)+10016>
   0x000000000040a9c3 <+10013>:	mov    %rax,%rbx
   0x000000000040a9c6 <+10016>:	lea    -0x12b0(%rbp),%rax
   0x000000000040a9cd <+10023>:	mov    %rax,%rdi
   0x000000000040a9d0 <+10026>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a9d5 <+10031>:	jmp    0x40a9da <sc_main(int, char**)+10036>
   0x000000000040a9d7 <+10033>:	mov    %rax,%rbx
   0x000000000040a9da <+10036>:	lea    -0x1200(%rbp),%rax
   0x000000000040a9e1 <+10043>:	mov    %rax,%rdi
   0x000000000040a9e4 <+10046>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040a9e9 <+10051>:	jmp    0x40a9ee <sc_main(int, char**)+10056>
   0x000000000040a9eb <+10053>:	mov    %rax,%rbx
   0x000000000040a9ee <+10056>:	lea    -0x1130(%rbp),%rax
   0x000000000040a9f5 <+10063>:	mov    %rax,%rdi
   0x000000000040a9f8 <+10066>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040a9fd <+10071>:	jmp    0x40aa02 <sc_main(int, char**)+10076>
   0x000000000040a9ff <+10073>:	mov    %rax,%rbx
   0x000000000040aa02 <+10076>:	lea    -0x1080(%rbp),%rax
   0x000000000040aa09 <+10083>:	mov    %rax,%rdi
   0x000000000040aa0c <+10086>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040aa11 <+10091>:	jmp    0x40aa16 <sc_main(int, char**)+10096>
   0x000000000040aa13 <+10093>:	mov    %rax,%rbx
   0x000000000040aa16 <+10096>:	lea    -0xfb0(%rbp),%rax
   0x000000000040aa1d <+10103>:	mov    %rax,%rdi
   0x000000000040aa20 <+10106>:	callq  0x407880 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE1EED1Ev@plt>
   0x000000000040aa25 <+10111>:	jmp    0x40aa2a <sc_main(int, char**)+10116>
   0x000000000040aa27 <+10113>:	mov    %rax,%rbx
   0x000000000040aa2a <+10116>:	lea    -0xef0(%rbp),%rax
   0x000000000040aa31 <+10123>:	mov    %rax,%rdi
   0x000000000040aa34 <+10126>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040aa39 <+10131>:	jmp    0x40aa3e <sc_main(int, char**)+10136>
   0x000000000040aa3b <+10133>:	mov    %rax,%rbx
   0x000000000040aa3e <+10136>:	lea    -0xe20(%rbp),%rax
   0x000000000040aa45 <+10143>:	mov    %rax,%rdi
   0x000000000040aa48 <+10146>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040aa4d <+10151>:	jmp    0x40aa52 <sc_main(int, char**)+10156>
   0x000000000040aa4f <+10153>:	mov    %rax,%rbx
   0x000000000040aa52 <+10156>:	lea    -0xd50(%rbp),%rax
   0x000000000040aa59 <+10163>:	mov    %rax,%rdi
   0x000000000040aa5c <+10166>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040aa61 <+10171>:	jmp    0x40aa66 <sc_main(int, char**)+10176>
   0x000000000040aa63 <+10173>:	mov    %rax,%rbx
   0x000000000040aa66 <+10176>:	lea    -0xca0(%rbp),%rax
   0x000000000040aa6d <+10183>:	mov    %rax,%rdi
   0x000000000040aa70 <+10186>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040aa75 <+10191>:	jmp    0x40aa7a <sc_main(int, char**)+10196>
   0x000000000040aa77 <+10193>:	mov    %rax,%rbx
   0x000000000040aa7a <+10196>:	lea    -0xbf0(%rbp),%rax
   0x000000000040aa81 <+10203>:	mov    %rax,%rdi
   0x000000000040aa84 <+10206>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040aa89 <+10211>:	jmp    0x40aa8e <sc_main(int, char**)+10216>
   0x000000000040aa8b <+10213>:	mov    %rax,%rbx
   0x000000000040aa8e <+10216>:	lea    -0xb20(%rbp),%rax
   0x000000000040aa95 <+10223>:	mov    %rax,%rdi
   0x000000000040aa98 <+10226>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040aa9d <+10231>:	jmp    0x40aaa2 <sc_main(int, char**)+10236>
   0x000000000040aa9f <+10233>:	mov    %rax,%rbx
   0x000000000040aaa2 <+10236>:	lea    -0xa50(%rbp),%rax
   0x000000000040aaa9 <+10243>:	mov    %rax,%rdi
   0x000000000040aaac <+10246>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040aab1 <+10251>:	jmp    0x40aab6 <sc_main(int, char**)+10256>
   0x000000000040aab3 <+10253>:	mov    %rax,%rbx
   0x000000000040aab6 <+10256>:	lea    -0x9a0(%rbp),%rax
   0x000000000040aabd <+10263>:	mov    %rax,%rdi
   0x000000000040aac0 <+10266>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040aac5 <+10271>:	jmp    0x40aaca <sc_main(int, char**)+10276>
   0x000000000040aac7 <+10273>:	mov    %rax,%rbx
   0x000000000040aaca <+10276>:	lea    -0x8d0(%rbp),%rax
   0x000000000040aad1 <+10283>:	mov    %rax,%rdi
   0x000000000040aad4 <+10286>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040aad9 <+10291>:	jmp    0x40aade <sc_main(int, char**)+10296>
   0x000000000040aadb <+10293>:	mov    %rax,%rbx
   0x000000000040aade <+10296>:	lea    -0x800(%rbp),%rax
   0x000000000040aae5 <+10303>:	mov    %rax,%rdi
   0x000000000040aae8 <+10306>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040aaed <+10311>:	jmp    0x40aaf2 <sc_main(int, char**)+10316>
   0x000000000040aaef <+10313>:	mov    %rax,%rbx
   0x000000000040aaf2 <+10316>:	lea    -0x750(%rbp),%rax
   0x000000000040aaf9 <+10323>:	mov    %rax,%rdi
   0x000000000040aafc <+10326>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040ab01 <+10331>:	jmp    0x40ab06 <sc_main(int, char**)+10336>
   0x000000000040ab03 <+10333>:	mov    %rax,%rbx
   0x000000000040ab06 <+10336>:	lea    -0x680(%rbp),%rax
   0x000000000040ab0d <+10343>:	mov    %rax,%rdi
   0x000000000040ab10 <+10346>:	callq  0x40eb96 <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)1>::~sc_signal()>
   0x000000000040ab15 <+10351>:	jmp    0x40ab1a <sc_main(int, char**)+10356>
   0x000000000040ab17 <+10353>:	mov    %rax,%rbx
   0x000000000040ab1a <+10356>:	lea    -0x5d0(%rbp),%rax
   0x000000000040ab21 <+10363>:	mov    %rax,%rdi
   0x000000000040ab24 <+10366>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040ab29 <+10371>:	jmp    0x40ab2e <sc_main(int, char**)+10376>
   0x000000000040ab2b <+10373>:	mov    %rax,%rbx
   0x000000000040ab2e <+10376>:	lea    -0x520(%rbp),%rax
   0x000000000040ab35 <+10383>:	mov    %rax,%rdi
   0x000000000040ab38 <+10386>:	callq  0x40e91a <sc_core::sc_signal<unsigned int, (sc_core::sc_writer_policy)0>::~sc_signal()>
   0x000000000040ab3d <+10391>:	jmp    0x40ab42 <sc_main(int, char**)+10396>
   0x000000000040ab3f <+10393>:	mov    %rax,%rbx
   0x000000000040ab42 <+10396>:	lea    -0x470(%rbp),%rax
   0x000000000040ab49 <+10403>:	mov    %rax,%rdi
   0x000000000040ab4c <+10406>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040ab51 <+10411>:	jmp    0x40ab56 <sc_main(int, char**)+10416>
   0x000000000040ab53 <+10413>:	mov    %rax,%rbx
   0x000000000040ab56 <+10416>:	lea    -0x3a0(%rbp),%rax
   0x000000000040ab5d <+10423>:	mov    %rax,%rdi
   0x000000000040ab60 <+10426>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040ab65 <+10431>:	jmp    0x40ab6a <sc_main(int, char**)+10436>
   0x000000000040ab67 <+10433>:	mov    %rax,%rbx
   0x000000000040ab6a <+10436>:	lea    -0x2d0(%rbp),%rax
   0x000000000040ab71 <+10443>:	mov    %rax,%rdi
   0x000000000040ab74 <+10446>:	callq  0x407db0 <_ZN7sc_core9sc_signalIbLNS_16sc_writer_policyE0EED1Ev@plt>
   0x000000000040ab79 <+10451>:	mov    %rbx,%rax
   0x000000000040ab7c <+10454>:	mov    %rax,%rdi
   0x000000000040ab7f <+10457>:	callq  0x408070 <_Unwind_Resume@plt>
   0x000000000040ab84 <+10462>:	add    $0xae48,%rsp
   0x000000000040ab8b <+10469>:	pop    %rbx
   0x000000000040ab8c <+10470>:	pop    %rbp
   0x000000000040ab8d <+10471>:	retq   
End of assembler dump.
Line 370 of "main.cpp" starts at address 0x40ab8e <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x40ab9c <__static_initialization_and_destruction_0(int, int)+14>.
Line 102 of "icache.cpp" starts at address 0x41c70b <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c719 <__static_initialization_and_destruction_0(int, int)+14>.
Line 177 of "exec.cpp" starts at address 0x4222d7 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4222e5 <__static_initialization_and_destruction_0(int, int)+14>.
Line 59 of "pic.cpp" starts at address 0x42369f <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4236ad <__static_initialization_and_destruction_0(int, int)+14>.
Line 787 of "decode.cpp" starts at address 0x421cf6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x421d04 <__static_initialization_and_destruction_0(int, int)+14>.
Line 78 of "bios.cpp" starts at address 0x41bf79 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41bf87 <__static_initialization_and_destruction_0(int, int)+14>.
Line 86 of "paging.cpp" starts at address 0x41c443 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c451 <__static_initialization_and_destruction_0(int, int)+14>.
Line 250 of "mmxu.cpp" starts at address 0x422aaf <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422abd <__static_initialization_and_destruction_0(int, int)+14>.
Line 90 of "dcache.cpp" starts at address 0x423461 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x42346f <__static_initialization_and_destruction_0(int, int)+14>.
Line 180 of "floating.cpp" starts at address 0x422fc6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422fd4 <__static_initialization_and_destruction_0(int, int)+14>.
Line 189 of "fetch.cpp" starts at address 0x41d2e1 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41d2ef <__static_initialization_and_destruction_0(int, int)+14>.

Temporary breakpoint 14, fetch::init_param (this=0x7fffffff83c0, given_delay_cycles=2) at fetch.h:67
67	    memory_latency = given_delay_cycles; 
Dump of assembler code for function fetch::init_param(int):
   0x000000000040bf6a <+0>:	push   %rbp
   0x000000000040bf6b <+1>:	mov    %rsp,%rbp
   0x000000000040bf6e <+4>:	mov    %rdi,-0x8(%rbp)
   0x000000000040bf72 <+8>:	mov    %esi,-0xc(%rbp)
=> 0x000000000040bf75 <+11>:	mov    -0x8(%rbp),%rax
   0x000000000040bf79 <+15>:	mov    -0xc(%rbp),%edx
   0x000000000040bf7c <+18>:	mov    %edx,0xfa8(%rax)
   0x000000000040bf82 <+24>:	nop
   0x000000000040bf83 <+25>:	pop    %rbp
   0x000000000040bf84 <+26>:	retq   
End of assembler dump.
Line 370 of "main.cpp" starts at address 0x40ab8e <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x40ab9c <__static_initialization_and_destruction_0(int, int)+14>.
Line 102 of "icache.cpp" starts at address 0x41c70b <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c719 <__static_initialization_and_destruction_0(int, int)+14>.
Line 177 of "exec.cpp" starts at address 0x4222d7 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4222e5 <__static_initialization_and_destruction_0(int, int)+14>.
Line 59 of "pic.cpp" starts at address 0x42369f <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4236ad <__static_initialization_and_destruction_0(int, int)+14>.
Line 787 of "decode.cpp" starts at address 0x421cf6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x421d04 <__static_initialization_and_destruction_0(int, int)+14>.
Line 78 of "bios.cpp" starts at address 0x41bf79 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41bf87 <__static_initialization_and_destruction_0(int, int)+14>.
Line 86 of "paging.cpp" starts at address 0x41c443 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c451 <__static_initialization_and_destruction_0(int, int)+14>.
Line 250 of "mmxu.cpp" starts at address 0x422aaf <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422abd <__static_initialization_and_destruction_0(int, int)+14>.
Line 90 of "dcache.cpp" starts at address 0x423461 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x42346f <__static_initialization_and_destruction_0(int, int)+14>.
Line 180 of "floating.cpp" starts at address 0x422fc6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422fd4 <__static_initialization_and_destruction_0(int, int)+14>.
Line 189 of "fetch.cpp" starts at address 0x41d2e1 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41d2ef <__static_initialization_and_destruction_0(int, int)+14>.

Temporary breakpoint 7, bios::init_param (this=0x7fffffff4bd0, given_delay_cycles=2) at bios.h:57
57	    wait_cycles = given_delay_cycles; 
Dump of assembler code for function bios::init_param(int):
   0x000000000040b4c4 <+0>:	push   %rbp
   0x000000000040b4c5 <+1>:	mov    %rsp,%rbp
   0x000000000040b4c8 <+4>:	mov    %rdi,-0x8(%rbp)
   0x000000000040b4cc <+8>:	mov    %esi,-0xc(%rbp)
=> 0x000000000040b4cf <+11>:	mov    -0x8(%rbp),%rax
   0x000000000040b4d3 <+15>:	mov    -0xc(%rbp),%edx
   0x000000000040b4d6 <+18>:	mov    %edx,0x5c8(%rax)
   0x000000000040b4dc <+24>:	nop
   0x000000000040b4dd <+25>:	pop    %rbp
   0x000000000040b4de <+26>:	retq   
End of assembler dump.
Line 370 of "main.cpp" starts at address 0x40ab8e <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x40ab9c <__static_initialization_and_destruction_0(int, int)+14>.
Line 102 of "icache.cpp" starts at address 0x41c70b <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c719 <__static_initialization_and_destruction_0(int, int)+14>.
Line 177 of "exec.cpp" starts at address 0x4222d7 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4222e5 <__static_initialization_and_destruction_0(int, int)+14>.
Line 59 of "pic.cpp" starts at address 0x42369f <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4236ad <__static_initialization_and_destruction_0(int, int)+14>.
Line 787 of "decode.cpp" starts at address 0x421cf6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x421d04 <__static_initialization_and_destruction_0(int, int)+14>.
Line 78 of "bios.cpp" starts at address 0x41bf79 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41bf87 <__static_initialization_and_destruction_0(int, int)+14>.
Line 86 of "paging.cpp" starts at address 0x41c443 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c451 <__static_initialization_and_destruction_0(int, int)+14>.
Line 250 of "mmxu.cpp" starts at address 0x422aaf <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422abd <__static_initialization_and_destruction_0(int, int)+14>.
Line 90 of "dcache.cpp" starts at address 0x423461 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x42346f <__static_initialization_and_destruction_0(int, int)+14>.
Line 180 of "floating.cpp" starts at address 0x422fc6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422fd4 <__static_initialization_and_destruction_0(int, int)+14>.
Line 189 of "fetch.cpp" starts at address 0x41d2e1 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41d2ef <__static_initialization_and_destruction_0(int, int)+14>.

Temporary breakpoint 2, icache::init_param (this=0x7fffffff3ac0, given_delay_cycles=2) at icache.h:60
60	    wait_cycles = given_delay_cycles;
Dump of assembler code for function icache::init_param(int):
   0x000000000040bba4 <+0>:	push   %rbp
   0x000000000040bba5 <+1>:	mov    %rsp,%rbp
   0x000000000040bba8 <+4>:	mov    %rdi,-0x8(%rbp)
   0x000000000040bbac <+8>:	mov    %esi,-0xc(%rbp)
=> 0x000000000040bbaf <+11>:	mov    -0x8(%rbp),%rax
   0x000000000040bbb3 <+15>:	mov    -0xc(%rbp),%edx
   0x000000000040bbb6 <+18>:	mov    %edx,0x6fc(%rax)
   0x000000000040bbbc <+24>:	nop
   0x000000000040bbbd <+25>:	pop    %rbp
   0x000000000040bbbe <+26>:	retq   
End of assembler dump.
Line 370 of "main.cpp" starts at address 0x40ab8e <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x40ab9c <__static_initialization_and_destruction_0(int, int)+14>.
Line 102 of "icache.cpp" starts at address 0x41c70b <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c719 <__static_initialization_and_destruction_0(int, int)+14>.
Line 177 of "exec.cpp" starts at address 0x4222d7 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4222e5 <__static_initialization_and_destruction_0(int, int)+14>.
Line 59 of "pic.cpp" starts at address 0x42369f <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4236ad <__static_initialization_and_destruction_0(int, int)+14>.
Line 787 of "decode.cpp" starts at address 0x421cf6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x421d04 <__static_initialization_and_destruction_0(int, int)+14>.
Line 78 of "bios.cpp" starts at address 0x41bf79 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41bf87 <__static_initialization_and_destruction_0(int, int)+14>.
Line 86 of "paging.cpp" starts at address 0x41c443 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c451 <__static_initialization_and_destruction_0(int, int)+14>.
Line 250 of "mmxu.cpp" starts at address 0x422aaf <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422abd <__static_initialization_and_destruction_0(int, int)+14>.
Line 90 of "dcache.cpp" starts at address 0x423461 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x42346f <__static_initialization_and_destruction_0(int, int)+14>.
Line 180 of "floating.cpp" starts at address 0x422fc6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422fd4 <__static_initialization_and_destruction_0(int, int)+14>.
Line 189 of "fetch.cpp" starts at address 0x41d2e1 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41d2ef <__static_initialization_and_destruction_0(int, int)+14>.

Temporary breakpoint 11, dcache::init_param (this=0x7fffffff3340, given_delay_cycles=2) at dcache.h:58
58	    wait_cycles = given_delay_cycles; 
Dump of assembler code for function dcache::init_param(int):
   0x000000000040d51c <+0>:	push   %rbp
   0x000000000040d51d <+1>:	mov    %rsp,%rbp
   0x000000000040d520 <+4>:	mov    %rdi,-0x8(%rbp)
   0x000000000040d524 <+8>:	mov    %esi,-0xc(%rbp)
=> 0x000000000040d527 <+11>:	mov    -0x8(%rbp),%rax
   0x000000000040d52b <+15>:	mov    -0xc(%rbp),%edx
   0x000000000040d52e <+18>:	mov    %edx,0x778(%rax)
   0x000000000040d534 <+24>:	nop
   0x000000000040d535 <+25>:	pop    %rbp
   0x000000000040d536 <+26>:	retq   
End of assembler dump.
Line 370 of "main.cpp" starts at address 0x40ab8e <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x40ab9c <__static_initialization_and_destruction_0(int, int)+14>.
Line 102 of "icache.cpp" starts at address 0x41c70b <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c719 <__static_initialization_and_destruction_0(int, int)+14>.
Line 177 of "exec.cpp" starts at address 0x4222d7 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4222e5 <__static_initialization_and_destruction_0(int, int)+14>.
Line 59 of "pic.cpp" starts at address 0x42369f <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4236ad <__static_initialization_and_destruction_0(int, int)+14>.
Line 787 of "decode.cpp" starts at address 0x421cf6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x421d04 <__static_initialization_and_destruction_0(int, int)+14>.
Line 78 of "bios.cpp" starts at address 0x41bf79 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41bf87 <__static_initialization_and_destruction_0(int, int)+14>.
Line 86 of "paging.cpp" starts at address 0x41c443 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c451 <__static_initialization_and_destruction_0(int, int)+14>.
Line 250 of "mmxu.cpp" starts at address 0x422aaf <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422abd <__static_initialization_and_destruction_0(int, int)+14>.
Line 90 of "dcache.cpp" starts at address 0x423461 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x42346f <__static_initialization_and_destruction_0(int, int)+14>.
Line 180 of "floating.cpp" starts at address 0x422fc6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422fd4 <__static_initialization_and_destruction_0(int, int)+14>.
Line 189 of "fetch.cpp" starts at address 0x41d2e1 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41d2ef <__static_initialization_and_destruction_0(int, int)+14>.

Temporary breakpoint 15, fetch::entry (this=0x7fffffff83c0) at fetch.cpp:44
44	   unsigned addr_tmp=0;
Dump of assembler code for function fetch::entry():
   0x000000000041c7fa <+0>:	push   %rbp
   0x000000000041c7fb <+1>:	mov    %rsp,%rbp
   0x000000000041c7fe <+4>:	push   %rbx
   0x000000000041c7ff <+5>:	sub    $0x48,%rsp
   0x000000000041c803 <+9>:	mov    %rdi,-0x48(%rbp)
=> 0x000000000041c807 <+13>:	movl   $0x0,-0x34(%rbp)
   0x000000000041c80e <+20>:	movl   $0x0,-0x38(%rbp)
   0x000000000041c815 <+27>:	movl   $0x0,-0x14(%rbp)
   0x000000000041c81c <+34>:	movl   $0x1,-0x34(%rbp)
   0x000000000041c823 <+41>:	movb   $0x1,-0x2e(%rbp)
   0x000000000041c827 <+45>:	mov    -0x48(%rbp),%rax
   0x000000000041c82b <+49>:	lea    0xe60(%rax),%rdx
   0x000000000041c832 <+56>:	lea    -0x2e(%rbp),%rax
   0x000000000041c836 <+60>:	mov    %rax,%rsi
   0x000000000041c839 <+63>:	mov    %rdx,%rdi
   0x000000000041c83c <+66>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041c841 <+71>:	movb   $0x1,-0x2d(%rbp)
   0x000000000041c845 <+75>:	mov    -0x48(%rbp),%rax
   0x000000000041c849 <+79>:	lea    0x810(%rax),%rdx
   0x000000000041c850 <+86>:	lea    -0x2d(%rbp),%rax
   0x000000000041c854 <+90>:	mov    %rax,%rsi
   0x000000000041c857 <+93>:	mov    %rdx,%rdi
   0x000000000041c85a <+96>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041c85f <+101>:	movb   $0x0,-0x2c(%rbp)
   0x000000000041c863 <+105>:	mov    -0x48(%rbp),%rax
   0x000000000041c867 <+109>:	lea    0x8b8(%rax),%rdx
   0x000000000041c86e <+116>:	lea    -0x2c(%rbp),%rax
   0x000000000041c872 <+120>:	mov    %rax,%rsi
   0x000000000041c875 <+123>:	mov    %rdx,%rdi
   0x000000000041c878 <+126>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041c87d <+131>:	mov    -0x48(%rbp),%rax
   0x000000000041c881 <+135>:	lea    0x960(%rax),%rdx
   0x000000000041c888 <+142>:	lea    -0x34(%rbp),%rax
   0x000000000041c88c <+146>:	mov    %rax,%rsi
   0x000000000041c88f <+149>:	mov    %rdx,%rdi
   0x000000000041c892 <+152>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041c897 <+157>:	mov    -0x48(%rbp),%rax
   0x000000000041c89b <+161>:	mov    0xfa8(%rax),%edx
   0x000000000041c8a1 <+167>:	mov    -0x48(%rbp),%rax
   0x000000000041c8a5 <+171>:	mov    %edx,%esi
   0x000000000041c8a7 <+173>:	mov    %rax,%rdi
   0x000000000041c8aa <+176>:	callq  0x41c000 <sc_core::sc_module::wait(int)>
   0x000000000041c8af <+181>:	mov    -0x48(%rbp),%rax
   0x000000000041c8b3 <+185>:	mov    %rax,%rdi
   0x000000000041c8b6 <+188>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041c8bb <+193>:	mov    -0x48(%rbp),%rax
   0x000000000041c8bf <+197>:	add    $0x500,%rax
   0x000000000041c8c5 <+203>:	mov    %rax,%rdi
   0x000000000041c8c8 <+206>:	callq  0x41c058 <sc_core::sc_in<bool>::operator bool const&() const>
   0x000000000041c8cd <+211>:	movzbl (%rax),%eax
   0x000000000041c8d0 <+214>:	xor    $0x1,%eax
   0x000000000041c8d3 <+217>:	test   %al,%al
   0x000000000041c8d5 <+219>:	je     0x41c8fa <fetch::entry()+256>
   0x000000000041c8d7 <+221>:	mov    -0x48(%rbp),%rax
   0x000000000041c8db <+225>:	add    $0x5a0,%rax
   0x000000000041c8e1 <+231>:	mov    %rax,%rdi
   0x000000000041c8e4 <+234>:	callq  0x41c058 <sc_core::sc_in<bool>::operator bool const&() const>
   0x000000000041c8e9 <+239>:	movzbl (%rax),%eax
   0x000000000041c8ec <+242>:	xor    $0x1,%eax
   0x000000000041c8ef <+245>:	test   %al,%al
   0x000000000041c8f1 <+247>:	je     0x41c8fa <fetch::entry()+256>
   0x000000000041c8f3 <+249>:	mov    $0x1,%eax
   0x000000000041c8f8 <+254>:	jmp    0x41c8ff <fetch::entry()+261>
   0x000000000041c8fa <+256>:	mov    $0x0,%eax
   0x000000000041c8ff <+261>:	test   %al,%al
   0x000000000041c901 <+263>:	je     0x41c905 <fetch::entry()+267>
   0x000000000041c903 <+265>:	jmp    0x41c8af <fetch::entry()+181>
   0x000000000041c905 <+267>:	mov    -0x48(%rbp),%rax
   0x000000000041c909 <+271>:	add    $0x330,%rax
   0x000000000041c90f <+277>:	mov    %rax,%rdi
   0x000000000041c912 <+280>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x000000000041c917 <+285>:	movzbl (%rax),%eax
   0x000000000041c91a <+288>:	test   %al,%al
   0x000000000041c91c <+290>:	je     0x41c927 <fetch::entry()+301>
   0x000000000041c91e <+292>:	movl   $0x0,-0x38(%rbp)
   0x000000000041c925 <+299>:	jmp    0x41c93e <fetch::entry()+324>
   0x000000000041c927 <+301>:	mov    -0x48(%rbp),%rax
   0x000000000041c92b <+305>:	add    $0xd0,%rax
   0x000000000041c931 <+311>:	mov    %rax,%rdi
   0x000000000041c934 <+314>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041c939 <+319>:	mov    (%rax),%eax
   0x000000000041c93b <+321>:	mov    %eax,-0x38(%rbp)
   0x000000000041c93e <+324>:	mov    $0x4a,%edx
   0x000000000041c943 <+329>:	mov    $0x8,%esi
   0x000000000041c948 <+334>:	mov    $0x636748,%edi
   0x000000000041c94d <+339>:	callq  0x41d3d4 <std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)>
   0x000000000041c952 <+344>:	mov    $0x429e90,%esi
   0x000000000041c957 <+349>:	mov    $0x636740,%edi
   0x000000000041c95c <+354>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041c961 <+359>:	mov    $0x407a20,%esi
   0x000000000041c966 <+364>:	mov    %rax,%rdi
   0x000000000041c969 <+367>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041c96e <+372>:	mov    -0x38(%rbp),%ebx
   0x000000000041c971 <+375>:	mov    $0x429ea8,%esi
   0x000000000041c976 <+380>:	mov    $0x636740,%edi
   0x000000000041c97b <+385>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041c980 <+390>:	mov    $0x429eae,%esi
   0x000000000041c985 <+395>:	mov    %rax,%rdi
   0x000000000041c988 <+398>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041c98d <+403>:	mov    %ebx,%esi
   0x000000000041c98f <+405>:	mov    %rax,%rdi
   0x000000000041c992 <+408>:	callq  0x407e40 <_ZNSolsEj@plt>
   0x000000000041c997 <+413>:	mov    $0x407a20,%esi
   0x000000000041c99c <+418>:	mov    %rax,%rdi
   0x000000000041c99f <+421>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041c9a4 <+426>:	mov    -0x34(%rbp),%ebx
   0x000000000041c9a7 <+429>:	mov    $0x429eb6,%esi
   0x000000000041c9ac <+434>:	mov    $0x636740,%edi
   0x000000000041c9b1 <+439>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041c9b6 <+444>:	mov    %ebx,%esi
   0x000000000041c9b8 <+446>:	mov    %rax,%rdi
   0x000000000041c9bb <+449>:	callq  0x407e40 <_ZNSolsEj@plt>
   0x000000000041c9c0 <+454>:	mov    $0x4a,%edx
   0x000000000041c9c5 <+459>:	mov    $0x2,%esi
   0x000000000041c9ca <+464>:	mov    $0x636748,%edi
   0x000000000041c9cf <+469>:	callq  0x41d3d4 <std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)>
   0x000000000041c9d4 <+474>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041c9d9 <+479>:	mov    %rax,%rbx
   0x000000000041c9dc <+482>:	mov    $0x429ec1,%esi
   0x000000000041c9e1 <+487>:	mov    $0x636740,%edi
   0x000000000041c9e6 <+492>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041c9eb <+497>:	mov    %rbx,%rsi
   0x000000000041c9ee <+500>:	mov    %rax,%rdi
   0x000000000041c9f1 <+503>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041c9f6 <+508>:	mov    $0x407a20,%esi
   0x000000000041c9fb <+513>:	mov    %rax,%rdi
   0x000000000041c9fe <+516>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041ca03 <+521>:	mov    $0x429e90,%esi
   0x000000000041ca08 <+526>:	mov    $0x636740,%edi
   0x000000000041ca0d <+531>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041ca12 <+536>:	mov    $0x407a20,%esi
   0x000000000041ca17 <+541>:	mov    %rax,%rdi
   0x000000000041ca1a <+544>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041ca1f <+549>:	movb   $0x1,-0x2b(%rbp)
   0x000000000041ca23 <+553>:	mov    -0x48(%rbp),%rax
   0x000000000041ca27 <+557>:	lea    0xb28(%rax),%rdx
   0x000000000041ca2e <+564>:	lea    -0x2b(%rbp),%rax
   0x000000000041ca32 <+568>:	mov    %rax,%rsi
   0x000000000041ca35 <+571>:	mov    %rdx,%rdi
   0x000000000041ca38 <+574>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041ca3d <+579>:	mov    -0x48(%rbp),%rax
   0x000000000041ca41 <+583>:	lea    0xa90(%rax),%rdx
   0x000000000041ca48 <+590>:	lea    -0x38(%rbp),%rax
   0x000000000041ca4c <+594>:	mov    %rax,%rsi
   0x000000000041ca4f <+597>:	mov    %rdx,%rdi
   0x000000000041ca52 <+600>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041ca57 <+605>:	mov    -0x48(%rbp),%rax
   0x000000000041ca5b <+609>:	lea    0xbd0(%rax),%rdx
   0x000000000041ca62 <+616>:	lea    -0x34(%rbp),%rax
   0x000000000041ca66 <+620>:	mov    %rax,%rsi
   0x000000000041ca69 <+623>:	mov    %rdx,%rdi
   0x000000000041ca6c <+626>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041ca71 <+631>:	movb   $0x0,-0x2a(%rbp)
   0x000000000041ca75 <+635>:	mov    -0x48(%rbp),%rax
   0x000000000041ca79 <+639>:	lea    0x810(%rax),%rdx
   0x000000000041ca80 <+646>:	lea    -0x2a(%rbp),%rax
   0x000000000041ca84 <+650>:	mov    %rax,%rsi
   0x000000000041ca87 <+653>:	mov    %rdx,%rdi
   0x000000000041ca8a <+656>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041ca8f <+661>:	mov    -0x48(%rbp),%rax
   0x000000000041ca93 <+665>:	mov    %rax,%rdi
   0x000000000041ca96 <+668>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041ca9b <+673>:	movb   $0x0,-0x29(%rbp)
   0x000000000041ca9f <+677>:	mov    -0x48(%rbp),%rax
   0x000000000041caa3 <+681>:	lea    0xb28(%rax),%rdx
   0x000000000041caaa <+688>:	lea    -0x29(%rbp),%rax
   0x000000000041caae <+692>:	mov    %rax,%rsi
   0x000000000041cab1 <+695>:	mov    %rdx,%rdi
   0x000000000041cab4 <+698>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041cab9 <+703>:	mov    -0x34(%rbp),%eax
   0x000000000041cabc <+706>:	add    $0x1,%eax
   0x000000000041cabf <+709>:	mov    %eax,-0x34(%rbp)
   0x000000000041cac2 <+712>:	mov    -0x48(%rbp),%rax
   0x000000000041cac6 <+716>:	mov    %rax,%rdi
   0x000000000041cac9 <+719>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041cace <+724>:	mov    -0x34(%rbp),%eax
   0x000000000041cad1 <+727>:	cmp    $0x5,%eax
   0x000000000041cad4 <+730>:	jne    0x41caf4 <fetch::entry()+762>
   0x000000000041cad6 <+732>:	movb   $0x0,-0x28(%rbp)
   0x000000000041cada <+736>:	mov    -0x48(%rbp),%rax
   0x000000000041cade <+740>:	lea    0xe60(%rax),%rdx
   0x000000000041cae5 <+747>:	lea    -0x28(%rbp),%rax
   0x000000000041cae9 <+751>:	mov    %rax,%rsi
   0x000000000041caec <+754>:	mov    %rdx,%rdi
   0x000000000041caef <+757>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041caf4 <+762>:	mov    -0x48(%rbp),%rax
   0x000000000041caf8 <+766>:	add    $0x3d0,%rax
   0x000000000041cafe <+772>:	mov    %rax,%rdi
   0x000000000041cb01 <+775>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x000000000041cb06 <+780>:	movzbl (%rax),%eax
   0x000000000041cb09 <+783>:	test   %al,%al
   0x000000000041cb0b <+785>:	je     0x41cd68 <fetch::entry()+1390>
   0x000000000041cb11 <+791>:	movb   $0x1,-0x27(%rbp)
   0x000000000041cb15 <+795>:	mov    -0x48(%rbp),%rax
   0x000000000041cb19 <+799>:	lea    0x810(%rax),%rdx
   0x000000000041cb20 <+806>:	lea    -0x27(%rbp),%rax
   0x000000000041cb24 <+810>:	mov    %rax,%rsi
   0x000000000041cb27 <+813>:	mov    %rdx,%rdi
   0x000000000041cb2a <+816>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041cb2f <+821>:	mov    -0x48(%rbp),%rax
   0x000000000041cb33 <+825>:	add    $0x470,%rax
   0x000000000041cb39 <+831>:	mov    %rax,%rdi
   0x000000000041cb3c <+834>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041cb41 <+839>:	mov    (%rax),%eax
   0x000000000041cb43 <+841>:	mov    %eax,-0x34(%rbp)
   0x000000000041cb46 <+844>:	movb   $0x0,-0x26(%rbp)
   0x000000000041cb4a <+848>:	mov    -0x48(%rbp),%rax
   0x000000000041cb4e <+852>:	lea    0x8b8(%rax),%rdx
   0x000000000041cb55 <+859>:	lea    -0x26(%rbp),%rax
   0x000000000041cb59 <+863>:	mov    %rax,%rsi
   0x000000000041cb5c <+866>:	mov    %rdx,%rdi
   0x000000000041cb5f <+869>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041cb64 <+874>:	mov    -0x48(%rbp),%rax
   0x000000000041cb68 <+878>:	mov    0xfa8(%rax),%edx
   0x000000000041cb6e <+884>:	mov    -0x48(%rbp),%rax
   0x000000000041cb72 <+888>:	mov    %edx,%esi
   0x000000000041cb74 <+890>:	mov    %rax,%rdi
   0x000000000041cb77 <+893>:	callq  0x41c000 <sc_core::sc_module::wait(int)>
   0x000000000041cb7c <+898>:	mov    -0x48(%rbp),%rax
   0x000000000041cb80 <+902>:	add    $0xd0,%rax
   0x000000000041cb86 <+908>:	mov    %rax,%rdi
   0x000000000041cb89 <+911>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041cb8e <+916>:	mov    (%rax),%eax
   0x000000000041cb90 <+918>:	mov    %eax,-0x38(%rbp)
   0x000000000041cb93 <+921>:	mov    $0x429ecb,%edi
   0x000000000041cb98 <+926>:	callq  0x407f50 <puts@plt>
   0x000000000041cb9d <+931>:	mov    $0x4a,%edx
   0x000000000041cba2 <+936>:	mov    $0x8,%esi
   0x000000000041cba7 <+941>:	mov    $0x636748,%edi
   0x000000000041cbac <+946>:	callq  0x41d3d4 <std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)>
   0x000000000041cbb1 <+951>:	mov    $0x429ee3,%esi
   0x000000000041cbb6 <+956>:	mov    $0x636740,%edi
   0x000000000041cbbb <+961>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041cbc0 <+966>:	mov    $0x407a20,%esi
   0x000000000041cbc5 <+971>:	mov    %rax,%rdi
   0x000000000041cbc8 <+974>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041cbcd <+979>:	mov    -0x38(%rbp),%ebx
   0x000000000041cbd0 <+982>:	mov    $0x429ea8,%esi
   0x000000000041cbd5 <+987>:	mov    $0x636740,%edi
   0x000000000041cbda <+992>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041cbdf <+997>:	mov    $0x429eae,%esi
   0x000000000041cbe4 <+1002>:	mov    %rax,%rdi
   0x000000000041cbe7 <+1005>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041cbec <+1010>:	mov    %ebx,%esi
   0x000000000041cbee <+1012>:	mov    %rax,%rdi
   0x000000000041cbf1 <+1015>:	callq  0x407e40 <_ZNSolsEj@plt>
   0x000000000041cbf6 <+1020>:	mov    $0x407a20,%esi
   0x000000000041cbfb <+1025>:	mov    %rax,%rdi
   0x000000000041cbfe <+1028>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041cc03 <+1033>:	mov    -0x34(%rbp),%ebx
   0x000000000041cc06 <+1036>:	mov    $0x429eb6,%esi
   0x000000000041cc0b <+1041>:	mov    $0x636740,%edi
   0x000000000041cc10 <+1046>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041cc15 <+1051>:	mov    %ebx,%esi
   0x000000000041cc17 <+1053>:	mov    %rax,%rdi
   0x000000000041cc1a <+1056>:	callq  0x407e40 <_ZNSolsEj@plt>
   0x000000000041cc1f <+1061>:	mov    $0x4a,%edx
   0x000000000041cc24 <+1066>:	mov    $0x2,%esi
   0x000000000041cc29 <+1071>:	mov    $0x636748,%edi
   0x000000000041cc2e <+1076>:	callq  0x41d3d4 <std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)>
   0x000000000041cc33 <+1081>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041cc38 <+1086>:	mov    %rax,%rbx
   0x000000000041cc3b <+1089>:	mov    $0x429ec1,%esi
   0x000000000041cc40 <+1094>:	mov    $0x636740,%edi
   0x000000000041cc45 <+1099>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041cc4a <+1104>:	mov    %rbx,%rsi
   0x000000000041cc4d <+1107>:	mov    %rax,%rdi
   0x000000000041cc50 <+1110>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041cc55 <+1115>:	mov    $0x407a20,%esi
   0x000000000041cc5a <+1120>:	mov    %rax,%rdi
   0x000000000041cc5d <+1123>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041cc62 <+1128>:	mov    $0x429ee3,%esi
   0x000000000041cc67 <+1133>:	mov    $0x636740,%edi
   0x000000000041cc6c <+1138>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041cc71 <+1143>:	mov    $0x407a20,%esi
   0x000000000041cc76 <+1148>:	mov    %rax,%rdi
   0x000000000041cc79 <+1151>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041cc7e <+1156>:	movb   $0x1,-0x25(%rbp)
   0x000000000041cc82 <+1160>:	mov    -0x48(%rbp),%rax
   0x000000000041cc86 <+1164>:	lea    0xb28(%rax),%rdx
   0x000000000041cc8d <+1171>:	lea    -0x25(%rbp),%rax
   0x000000000041cc91 <+1175>:	mov    %rax,%rsi
   0x000000000041cc94 <+1178>:	mov    %rdx,%rdi
   0x000000000041cc97 <+1181>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041cc9c <+1186>:	mov    -0x48(%rbp),%rax
   0x000000000041cca0 <+1190>:	lea    0xa90(%rax),%rdx
   0x000000000041cca7 <+1197>:	lea    -0x38(%rbp),%rax
   0x000000000041ccab <+1201>:	mov    %rax,%rsi
   0x000000000041ccae <+1204>:	mov    %rdx,%rdi
   0x000000000041ccb1 <+1207>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041ccb6 <+1212>:	movb   $0x0,-0x24(%rbp)
   0x000000000041ccba <+1216>:	mov    -0x48(%rbp),%rax
   0x000000000041ccbe <+1220>:	lea    0x810(%rax),%rdx
   0x000000000041ccc5 <+1227>:	lea    -0x24(%rbp),%rax
   0x000000000041ccc9 <+1231>:	mov    %rax,%rsi
   0x000000000041cccc <+1234>:	mov    %rdx,%rdi
   0x000000000041cccf <+1237>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041ccd4 <+1242>:	movb   $0x1,-0x23(%rbp)
   0x000000000041ccd8 <+1246>:	mov    -0x48(%rbp),%rax
   0x000000000041ccdc <+1250>:	lea    0xc68(%rax),%rdx
   0x000000000041cce3 <+1257>:	lea    -0x23(%rbp),%rax
   0x000000000041cce7 <+1261>:	mov    %rax,%rsi
   0x000000000041ccea <+1264>:	mov    %rdx,%rdi
   0x000000000041cced <+1267>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041ccf2 <+1272>:	mov    -0x48(%rbp),%rax
   0x000000000041ccf6 <+1276>:	add    $0x1f0,%rax
   0x000000000041ccfc <+1282>:	mov    %rax,%rdi
   0x000000000041ccff <+1285>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x000000000041cd04 <+1290>:	movzbl (%rax),%eax
   0x000000000041cd07 <+1293>:	test   %al,%al
   0x000000000041cd09 <+1295>:	je     0x41cd14 <fetch::entry()+1306>
   0x000000000041cd0b <+1297>:	mov    -0x34(%rbp),%eax
   0x000000000041cd0e <+1300>:	add    $0x1,%eax
   0x000000000041cd11 <+1303>:	mov    %eax,-0x34(%rbp)
   0x000000000041cd14 <+1306>:	mov    -0x48(%rbp),%rax
   0x000000000041cd18 <+1310>:	mov    %rax,%rdi
   0x000000000041cd1b <+1313>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041cd20 <+1318>:	movb   $0x0,-0x22(%rbp)
   0x000000000041cd24 <+1322>:	mov    -0x48(%rbp),%rax
   0x000000000041cd28 <+1326>:	lea    0xb28(%rax),%rdx
   0x000000000041cd2f <+1333>:	lea    -0x22(%rbp),%rax
   0x000000000041cd33 <+1337>:	mov    %rax,%rsi
   0x000000000041cd36 <+1340>:	mov    %rdx,%rdi
   0x000000000041cd39 <+1343>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041cd3e <+1348>:	movb   $0x0,-0x21(%rbp)
   0x000000000041cd42 <+1352>:	mov    -0x48(%rbp),%rax
   0x000000000041cd46 <+1356>:	lea    0xc68(%rax),%rdx
   0x000000000041cd4d <+1363>:	lea    -0x21(%rbp),%rax
   0x000000000041cd51 <+1367>:	mov    %rax,%rsi
   0x000000000041cd54 <+1370>:	mov    %rdx,%rdi
   0x000000000041cd57 <+1373>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041cd5c <+1378>:	mov    -0x48(%rbp),%rax
   0x000000000041cd60 <+1382>:	mov    %rax,%rdi
   0x000000000041cd63 <+1385>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041cd68 <+1390>:	mov    -0x48(%rbp),%rax
   0x000000000041cd6c <+1394>:	add    $0x290,%rax
   0x000000000041cd72 <+1400>:	mov    %rax,%rdi
   0x000000000041cd75 <+1403>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x000000000041cd7a <+1408>:	movzbl (%rax),%eax
   0x000000000041cd7d <+1411>:	test   %al,%al
   0x000000000041cd7f <+1413>:	je     0x41cfff <fetch::entry()+2053>
   0x000000000041cd85 <+1419>:	mov    $0x429efc,%edi
   0x000000000041cd8a <+1424>:	callq  0x407f50 <puts@plt>
   0x000000000041cd8f <+1429>:	addl   $0x1,-0x14(%rbp)
   0x000000000041cd93 <+1433>:	movb   $0x1,-0x20(%rbp)
   0x000000000041cd97 <+1437>:	mov    -0x48(%rbp),%rax
   0x000000000041cd9b <+1441>:	lea    0x810(%rax),%rdx
   0x000000000041cda2 <+1448>:	lea    -0x20(%rbp),%rax
   0x000000000041cda6 <+1452>:	mov    %rax,%rsi
   0x000000000041cda9 <+1455>:	mov    %rdx,%rdi
   0x000000000041cdac <+1458>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041cdb1 <+1463>:	mov    -0x48(%rbp),%rax
   0x000000000041cdb5 <+1467>:	add    $0x160,%rax
   0x000000000041cdbb <+1473>:	mov    %rax,%rdi
   0x000000000041cdbe <+1476>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041cdc3 <+1481>:	mov    (%rax),%eax
   0x000000000041cdc5 <+1483>:	mov    %eax,-0x34(%rbp)
   0x000000000041cdc8 <+1486>:	movb   $0x0,-0x1f(%rbp)
   0x000000000041cdcc <+1490>:	mov    -0x48(%rbp),%rax
   0x000000000041cdd0 <+1494>:	lea    0x8b8(%rax),%rdx
   0x000000000041cdd7 <+1501>:	lea    -0x1f(%rbp),%rax
   0x000000000041cddb <+1505>:	mov    %rax,%rsi
   0x000000000041cdde <+1508>:	mov    %rdx,%rdi
   0x000000000041cde1 <+1511>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041cde6 <+1516>:	mov    -0x48(%rbp),%rax
   0x000000000041cdea <+1520>:	mov    0xfa8(%rax),%edx
   0x000000000041cdf0 <+1526>:	mov    -0x48(%rbp),%rax
   0x000000000041cdf4 <+1530>:	mov    %edx,%esi
   0x000000000041cdf6 <+1532>:	mov    %rax,%rdi
   0x000000000041cdf9 <+1535>:	callq  0x41c000 <sc_core::sc_module::wait(int)>
   0x000000000041cdfe <+1540>:	mov    -0x48(%rbp),%rax
   0x000000000041ce02 <+1544>:	mov    %rax,%rdi
   0x000000000041ce05 <+1547>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041ce0a <+1552>:	mov    -0x48(%rbp),%rax
   0x000000000041ce0e <+1556>:	add    $0x500,%rax
   0x000000000041ce14 <+1562>:	mov    %rax,%rdi
   0x000000000041ce17 <+1565>:	callq  0x41c058 <sc_core::sc_in<bool>::operator bool const&() const>
   0x000000000041ce1c <+1570>:	movzbl (%rax),%eax
   0x000000000041ce1f <+1573>:	xor    $0x1,%eax
   0x000000000041ce22 <+1576>:	test   %al,%al
   0x000000000041ce24 <+1578>:	je     0x41ce49 <fetch::entry()+1615>
   0x000000000041ce26 <+1580>:	mov    -0x48(%rbp),%rax
   0x000000000041ce2a <+1584>:	add    $0x5a0,%rax
   0x000000000041ce30 <+1590>:	mov    %rax,%rdi
   0x000000000041ce33 <+1593>:	callq  0x41c058 <sc_core::sc_in<bool>::operator bool const&() const>
   0x000000000041ce38 <+1598>:	movzbl (%rax),%eax
   0x000000000041ce3b <+1601>:	xor    $0x1,%eax
   0x000000000041ce3e <+1604>:	test   %al,%al
   0x000000000041ce40 <+1606>:	je     0x41ce49 <fetch::entry()+1615>
   0x000000000041ce42 <+1608>:	mov    $0x1,%eax
   0x000000000041ce47 <+1613>:	jmp    0x41ce4e <fetch::entry()+1620>
   0x000000000041ce49 <+1615>:	mov    $0x0,%eax
   0x000000000041ce4e <+1620>:	test   %al,%al
   0x000000000041ce50 <+1622>:	je     0x41ce54 <fetch::entry()+1626>
   0x000000000041ce52 <+1624>:	jmp    0x41cdfe <fetch::entry()+1540>
   0x000000000041ce54 <+1626>:	mov    -0x48(%rbp),%rax
   0x000000000041ce58 <+1630>:	add    $0xd0,%rax
   0x000000000041ce5e <+1636>:	mov    %rax,%rdi
   0x000000000041ce61 <+1639>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041ce66 <+1644>:	mov    (%rax),%eax
   0x000000000041ce68 <+1646>:	mov    %eax,-0x38(%rbp)
   0x000000000041ce6b <+1649>:	mov    $0x4a,%edx
   0x000000000041ce70 <+1654>:	mov    $0x8,%esi
   0x000000000041ce75 <+1659>:	mov    $0x636748,%edi
   0x000000000041ce7a <+1664>:	callq  0x41d3d4 <std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)>
   0x000000000041ce7f <+1669>:	mov    $0x429ee3,%esi
   0x000000000041ce84 <+1674>:	mov    $0x636740,%edi
   0x000000000041ce89 <+1679>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041ce8e <+1684>:	mov    $0x407a20,%esi
   0x000000000041ce93 <+1689>:	mov    %rax,%rdi
   0x000000000041ce96 <+1692>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041ce9b <+1697>:	mov    -0x38(%rbp),%ebx
   0x000000000041ce9e <+1700>:	mov    $0x429ea8,%esi
   0x000000000041cea3 <+1705>:	mov    $0x636740,%edi
   0x000000000041cea8 <+1710>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041cead <+1715>:	mov    $0x429eae,%esi
   0x000000000041ceb2 <+1720>:	mov    %rax,%rdi
   0x000000000041ceb5 <+1723>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041ceba <+1728>:	mov    %ebx,%esi
   0x000000000041cebc <+1730>:	mov    %rax,%rdi
   0x000000000041cebf <+1733>:	callq  0x407e40 <_ZNSolsEj@plt>
   0x000000000041cec4 <+1738>:	mov    $0x407a20,%esi
   0x000000000041cec9 <+1743>:	mov    %rax,%rdi
   0x000000000041cecc <+1746>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041ced1 <+1751>:	mov    -0x34(%rbp),%ebx
   0x000000000041ced4 <+1754>:	mov    $0x429eb6,%esi
   0x000000000041ced9 <+1759>:	mov    $0x636740,%edi
   0x000000000041cede <+1764>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041cee3 <+1769>:	mov    %ebx,%esi
   0x000000000041cee5 <+1771>:	mov    %rax,%rdi
   0x000000000041cee8 <+1774>:	callq  0x407e40 <_ZNSolsEj@plt>
   0x000000000041ceed <+1779>:	mov    $0x4a,%edx
   0x000000000041cef2 <+1784>:	mov    $0x2,%esi
   0x000000000041cef7 <+1789>:	mov    $0x636748,%edi
   0x000000000041cefc <+1794>:	callq  0x41d3d4 <std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)>
   0x000000000041cf01 <+1799>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041cf06 <+1804>:	mov    %rax,%rbx
   0x000000000041cf09 <+1807>:	mov    $0x429ec1,%esi
   0x000000000041cf0e <+1812>:	mov    $0x636740,%edi
   0x000000000041cf13 <+1817>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041cf18 <+1822>:	mov    %rbx,%rsi
   0x000000000041cf1b <+1825>:	mov    %rax,%rdi
   0x000000000041cf1e <+1828>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041cf23 <+1833>:	mov    $0x407a20,%esi
   0x000000000041cf28 <+1838>:	mov    %rax,%rdi
   0x000000000041cf2b <+1841>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041cf30 <+1846>:	mov    $0x429ee3,%esi
   0x000000000041cf35 <+1851>:	mov    $0x636740,%edi
   0x000000000041cf3a <+1856>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041cf3f <+1861>:	mov    $0x407a20,%esi
   0x000000000041cf44 <+1866>:	mov    %rax,%rdi
   0x000000000041cf47 <+1869>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041cf4c <+1874>:	movb   $0x1,-0x1e(%rbp)
   0x000000000041cf50 <+1878>:	mov    -0x48(%rbp),%rax
   0x000000000041cf54 <+1882>:	lea    0xb28(%rax),%rdx
   0x000000000041cf5b <+1889>:	lea    -0x1e(%rbp),%rax
   0x000000000041cf5f <+1893>:	mov    %rax,%rsi
   0x000000000041cf62 <+1896>:	mov    %rdx,%rdi
   0x000000000041cf65 <+1899>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041cf6a <+1904>:	mov    -0x48(%rbp),%rax
   0x000000000041cf6e <+1908>:	lea    0xa90(%rax),%rdx
   0x000000000041cf75 <+1915>:	lea    -0x38(%rbp),%rax
   0x000000000041cf79 <+1919>:	mov    %rax,%rsi
   0x000000000041cf7c <+1922>:	mov    %rdx,%rdi
   0x000000000041cf7f <+1925>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041cf84 <+1930>:	movb   $0x0,-0x1d(%rbp)
   0x000000000041cf88 <+1934>:	mov    -0x48(%rbp),%rax
   0x000000000041cf8c <+1938>:	lea    0x810(%rax),%rdx
   0x000000000041cf93 <+1945>:	lea    -0x1d(%rbp),%rax
   0x000000000041cf97 <+1949>:	mov    %rax,%rsi
   0x000000000041cf9a <+1952>:	mov    %rdx,%rdi
   0x000000000041cf9d <+1955>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041cfa2 <+1960>:	mov    -0x48(%rbp),%rax
   0x000000000041cfa6 <+1964>:	add    $0x1f0,%rax
   0x000000000041cfac <+1970>:	mov    %rax,%rdi
   0x000000000041cfaf <+1973>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x000000000041cfb4 <+1978>:	movzbl (%rax),%eax
   0x000000000041cfb7 <+1981>:	test   %al,%al
   0x000000000041cfb9 <+1983>:	je     0x41cfc4 <fetch::entry()+1994>
   0x000000000041cfbb <+1985>:	mov    -0x34(%rbp),%eax
   0x000000000041cfbe <+1988>:	add    $0x1,%eax
   0x000000000041cfc1 <+1991>:	mov    %eax,-0x34(%rbp)
   0x000000000041cfc4 <+1994>:	mov    -0x48(%rbp),%rax
   0x000000000041cfc8 <+1998>:	mov    %rax,%rdi
   0x000000000041cfcb <+2001>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041cfd0 <+2006>:	movb   $0x0,-0x1c(%rbp)
   0x000000000041cfd4 <+2010>:	mov    -0x48(%rbp),%rax
   0x000000000041cfd8 <+2014>:	lea    0xb28(%rax),%rdx
   0x000000000041cfdf <+2021>:	lea    -0x1c(%rbp),%rax
   0x000000000041cfe3 <+2025>:	mov    %rax,%rsi
   0x000000000041cfe6 <+2028>:	mov    %rdx,%rdi
   0x000000000041cfe9 <+2031>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041cfee <+2036>:	mov    -0x48(%rbp),%rax
   0x000000000041cff2 <+2040>:	mov    %rax,%rdi
   0x000000000041cff5 <+2043>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041cffa <+2048>:	jmpq   0x41d2a8 <fetch::entry()+2734>
   0x000000000041cfff <+2053>:	movl   $0x0,-0x14(%rbp)
   0x000000000041d006 <+2060>:	movb   $0x1,-0x1b(%rbp)
   0x000000000041d00a <+2064>:	mov    -0x48(%rbp),%rax
   0x000000000041d00e <+2068>:	lea    0x810(%rax),%rdx
   0x000000000041d015 <+2075>:	lea    -0x1b(%rbp),%rax
   0x000000000041d019 <+2079>:	mov    %rax,%rsi
   0x000000000041d01c <+2082>:	mov    %rdx,%rdi
   0x000000000041d01f <+2085>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041d024 <+2090>:	mov    -0x48(%rbp),%rax
   0x000000000041d028 <+2094>:	lea    0x960(%rax),%rdx
   0x000000000041d02f <+2101>:	lea    -0x34(%rbp),%rax
   0x000000000041d033 <+2105>:	mov    %rax,%rsi
   0x000000000041d036 <+2108>:	mov    %rdx,%rdi
   0x000000000041d039 <+2111>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041d03e <+2116>:	movb   $0x0,-0x1a(%rbp)
   0x000000000041d042 <+2120>:	mov    -0x48(%rbp),%rax
   0x000000000041d046 <+2124>:	lea    0x8b8(%rax),%rdx
   0x000000000041d04d <+2131>:	lea    -0x1a(%rbp),%rax
   0x000000000041d051 <+2135>:	mov    %rax,%rsi
   0x000000000041d054 <+2138>:	mov    %rdx,%rdi
   0x000000000041d057 <+2141>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041d05c <+2146>:	mov    -0x48(%rbp),%rax
   0x000000000041d060 <+2150>:	mov    0xfa8(%rax),%edx
   0x000000000041d066 <+2156>:	mov    -0x48(%rbp),%rax
   0x000000000041d06a <+2160>:	mov    %edx,%esi
   0x000000000041d06c <+2162>:	mov    %rax,%rdi
   0x000000000041d06f <+2165>:	callq  0x41c000 <sc_core::sc_module::wait(int)>
   0x000000000041d074 <+2170>:	mov    -0x48(%rbp),%rax
   0x000000000041d078 <+2174>:	mov    %rax,%rdi
   0x000000000041d07b <+2177>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041d080 <+2182>:	mov    -0x48(%rbp),%rax
   0x000000000041d084 <+2186>:	add    $0x500,%rax
   0x000000000041d08a <+2192>:	mov    %rax,%rdi
   0x000000000041d08d <+2195>:	callq  0x41c058 <sc_core::sc_in<bool>::operator bool const&() const>
   0x000000000041d092 <+2200>:	movzbl (%rax),%eax
   0x000000000041d095 <+2203>:	xor    $0x1,%eax
   0x000000000041d098 <+2206>:	test   %al,%al
   0x000000000041d09a <+2208>:	je     0x41d0bf <fetch::entry()+2245>
   0x000000000041d09c <+2210>:	mov    -0x48(%rbp),%rax
   0x000000000041d0a0 <+2214>:	add    $0x5a0,%rax
   0x000000000041d0a6 <+2220>:	mov    %rax,%rdi
   0x000000000041d0a9 <+2223>:	callq  0x41c058 <sc_core::sc_in<bool>::operator bool const&() const>
   0x000000000041d0ae <+2228>:	movzbl (%rax),%eax
   0x000000000041d0b1 <+2231>:	xor    $0x1,%eax
   0x000000000041d0b4 <+2234>:	test   %al,%al
   0x000000000041d0b6 <+2236>:	je     0x41d0bf <fetch::entry()+2245>
   0x000000000041d0b8 <+2238>:	mov    $0x1,%eax
   0x000000000041d0bd <+2243>:	jmp    0x41d0c4 <fetch::entry()+2250>
   0x000000000041d0bf <+2245>:	mov    $0x0,%eax
   0x000000000041d0c4 <+2250>:	test   %al,%al
   0x000000000041d0c6 <+2252>:	je     0x41d0ca <fetch::entry()+2256>
   0x000000000041d0c8 <+2254>:	jmp    0x41d074 <fetch::entry()+2170>
   0x000000000041d0ca <+2256>:	mov    -0x48(%rbp),%rax
   0x000000000041d0ce <+2260>:	add    $0xd0,%rax
   0x000000000041d0d4 <+2266>:	mov    %rax,%rdi
   0x000000000041d0d7 <+2269>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041d0dc <+2274>:	mov    (%rax),%eax
   0x000000000041d0de <+2276>:	mov    %eax,-0x38(%rbp)
   0x000000000041d0e1 <+2279>:	mov    $0x4a,%edx
   0x000000000041d0e6 <+2284>:	mov    $0x8,%esi
   0x000000000041d0eb <+2289>:	mov    $0x636748,%edi
   0x000000000041d0f0 <+2294>:	callq  0x41d3d4 <std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)>
   0x000000000041d0f5 <+2299>:	mov    $0x429ee3,%esi
   0x000000000041d0fa <+2304>:	mov    $0x636740,%edi
   0x000000000041d0ff <+2309>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d104 <+2314>:	mov    $0x407a20,%esi
   0x000000000041d109 <+2319>:	mov    %rax,%rdi
   0x000000000041d10c <+2322>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d111 <+2327>:	mov    -0x38(%rbp),%ebx
   0x000000000041d114 <+2330>:	mov    $0x429ea8,%esi
   0x000000000041d119 <+2335>:	mov    $0x636740,%edi
   0x000000000041d11e <+2340>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d123 <+2345>:	mov    $0x429eae,%esi
   0x000000000041d128 <+2350>:	mov    %rax,%rdi
   0x000000000041d12b <+2353>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d130 <+2358>:	mov    %ebx,%esi
   0x000000000041d132 <+2360>:	mov    %rax,%rdi
   0x000000000041d135 <+2363>:	callq  0x407e40 <_ZNSolsEj@plt>
   0x000000000041d13a <+2368>:	mov    $0x407a20,%esi
   0x000000000041d13f <+2373>:	mov    %rax,%rdi
   0x000000000041d142 <+2376>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d147 <+2381>:	mov    -0x34(%rbp),%ebx
   0x000000000041d14a <+2384>:	mov    $0x429eb6,%esi
   0x000000000041d14f <+2389>:	mov    $0x636740,%edi
   0x000000000041d154 <+2394>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d159 <+2399>:	mov    %ebx,%esi
   0x000000000041d15b <+2401>:	mov    %rax,%rdi
   0x000000000041d15e <+2404>:	callq  0x407e40 <_ZNSolsEj@plt>
   0x000000000041d163 <+2409>:	mov    $0x4a,%edx
   0x000000000041d168 <+2414>:	mov    $0x2,%esi
   0x000000000041d16d <+2419>:	mov    $0x636748,%edi
   0x000000000041d172 <+2424>:	callq  0x41d3d4 <std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)>
   0x000000000041d177 <+2429>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041d17c <+2434>:	mov    %rax,%rbx
   0x000000000041d17f <+2437>:	mov    $0x429ec1,%esi
   0x000000000041d184 <+2442>:	mov    $0x636740,%edi
   0x000000000041d189 <+2447>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d18e <+2452>:	mov    %rbx,%rsi
   0x000000000041d191 <+2455>:	mov    %rax,%rdi
   0x000000000041d194 <+2458>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041d199 <+2463>:	mov    $0x407a20,%esi
   0x000000000041d19e <+2468>:	mov    %rax,%rdi
   0x000000000041d1a1 <+2471>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d1a6 <+2476>:	mov    $0x429ee3,%esi
   0x000000000041d1ab <+2481>:	mov    $0x636740,%edi
   0x000000000041d1b0 <+2486>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d1b5 <+2491>:	mov    $0x407a20,%esi
   0x000000000041d1ba <+2496>:	mov    %rax,%rdi
   0x000000000041d1bd <+2499>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d1c2 <+2504>:	movb   $0x1,-0x19(%rbp)
   0x000000000041d1c6 <+2508>:	mov    -0x48(%rbp),%rax
   0x000000000041d1ca <+2512>:	lea    0xb28(%rax),%rdx
   0x000000000041d1d1 <+2519>:	lea    -0x19(%rbp),%rax
   0x000000000041d1d5 <+2523>:	mov    %rax,%rsi
   0x000000000041d1d8 <+2526>:	mov    %rdx,%rdi
   0x000000000041d1db <+2529>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041d1e0 <+2534>:	mov    -0x48(%rbp),%rax
   0x000000000041d1e4 <+2538>:	lea    0xa90(%rax),%rdx
   0x000000000041d1eb <+2545>:	lea    -0x38(%rbp),%rax
   0x000000000041d1ef <+2549>:	mov    %rax,%rsi
   0x000000000041d1f2 <+2552>:	mov    %rdx,%rdi
   0x000000000041d1f5 <+2555>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041d1fa <+2560>:	mov    -0x48(%rbp),%rax
   0x000000000041d1fe <+2564>:	lea    0xbd0(%rax),%rdx
   0x000000000041d205 <+2571>:	lea    -0x34(%rbp),%rax
   0x000000000041d209 <+2575>:	mov    %rax,%rsi
   0x000000000041d20c <+2578>:	mov    %rdx,%rdi
   0x000000000041d20f <+2581>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041d214 <+2586>:	movb   $0x0,-0x18(%rbp)
   0x000000000041d218 <+2590>:	mov    -0x48(%rbp),%rax
   0x000000000041d21c <+2594>:	lea    0xd10(%rax),%rdx
   0x000000000041d223 <+2601>:	lea    -0x18(%rbp),%rax
   0x000000000041d227 <+2605>:	mov    %rax,%rsi
   0x000000000041d22a <+2608>:	mov    %rdx,%rdi
   0x000000000041d22d <+2611>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041d232 <+2616>:	movb   $0x0,-0x17(%rbp)
   0x000000000041d236 <+2620>:	mov    -0x48(%rbp),%rax
   0x000000000041d23a <+2624>:	lea    0x810(%rax),%rdx
   0x000000000041d241 <+2631>:	lea    -0x17(%rbp),%rax
   0x000000000041d245 <+2635>:	mov    %rax,%rsi
   0x000000000041d248 <+2638>:	mov    %rdx,%rdi
   0x000000000041d24b <+2641>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041d250 <+2646>:	mov    -0x48(%rbp),%rax
   0x000000000041d254 <+2650>:	add    $0x1f0,%rax
   0x000000000041d25a <+2656>:	mov    %rax,%rdi
   0x000000000041d25d <+2659>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x000000000041d262 <+2664>:	movzbl (%rax),%eax
   0x000000000041d265 <+2667>:	test   %al,%al
   0x000000000041d267 <+2669>:	je     0x41d272 <fetch::entry()+2680>
   0x000000000041d269 <+2671>:	mov    -0x34(%rbp),%eax
   0x000000000041d26c <+2674>:	add    $0x1,%eax
   0x000000000041d26f <+2677>:	mov    %eax,-0x34(%rbp)
   0x000000000041d272 <+2680>:	mov    -0x48(%rbp),%rax
   0x000000000041d276 <+2684>:	mov    %rax,%rdi
   0x000000000041d279 <+2687>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041d27e <+2692>:	movb   $0x0,-0x16(%rbp)
   0x000000000041d282 <+2696>:	mov    -0x48(%rbp),%rax
   0x000000000041d286 <+2700>:	lea    0xb28(%rax),%rdx
   0x000000000041d28d <+2707>:	lea    -0x16(%rbp),%rax
   0x000000000041d291 <+2711>:	mov    %rax,%rsi
   0x000000000041d294 <+2714>:	mov    %rdx,%rdi
   0x000000000041d297 <+2717>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041d29c <+2722>:	mov    -0x48(%rbp),%rax
   0x000000000041d2a0 <+2726>:	mov    %rax,%rdi
   0x000000000041d2a3 <+2729>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041d2a8 <+2734>:	cmpl   $0x1,-0x14(%rbp)
   0x000000000041d2ac <+2738>:	jne    0x41cace <fetch::entry()+724>
   0x000000000041d2b2 <+2744>:	movb   $0x1,-0x15(%rbp)
   0x000000000041d2b6 <+2748>:	mov    -0x48(%rbp),%rax
   0x000000000041d2ba <+2752>:	lea    0xd10(%rax),%rdx
   0x000000000041d2c1 <+2759>:	lea    -0x15(%rbp),%rax
   0x000000000041d2c5 <+2763>:	mov    %rax,%rsi
   0x000000000041d2c8 <+2766>:	mov    %rdx,%rdi
   0x000000000041d2cb <+2769>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041d2d0 <+2774>:	mov    -0x48(%rbp),%rax
   0x000000000041d2d4 <+2778>:	mov    %rax,%rdi
   0x000000000041d2d7 <+2781>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041d2dc <+2786>:	jmpq   0x41cace <fetch::entry()+724>
End of assembler dump.
Line 370 of "main.cpp" starts at address 0x40ab8e <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x40ab9c <__static_initialization_and_destruction_0(int, int)+14>.
Line 102 of "icache.cpp" starts at address 0x41c70b <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c719 <__static_initialization_and_destruction_0(int, int)+14>.
Line 177 of "exec.cpp" starts at address 0x4222d7 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4222e5 <__static_initialization_and_destruction_0(int, int)+14>.
Line 59 of "pic.cpp" starts at address 0x42369f <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4236ad <__static_initialization_and_destruction_0(int, int)+14>.
Line 787 of "decode.cpp" starts at address 0x421cf6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x421d04 <__static_initialization_and_destruction_0(int, int)+14>.
Line 78 of "bios.cpp" starts at address 0x41bf79 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41bf87 <__static_initialization_and_destruction_0(int, int)+14>.
Line 86 of "paging.cpp" starts at address 0x41c443 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c451 <__static_initialization_and_destruction_0(int, int)+14>.
Line 250 of "mmxu.cpp" starts at address 0x422aaf <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422abd <__static_initialization_and_destruction_0(int, int)+14>.
Line 90 of "dcache.cpp" starts at address 0x423461 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x42346f <__static_initialization_and_destruction_0(int, int)+14>.
Line 180 of "floating.cpp" starts at address 0x422fc6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422fd4 <__static_initialization_and_destruction_0(int, int)+14>.
Line 189 of "fetch.cpp" starts at address 0x41d2e1 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41d2ef <__static_initialization_and_destruction_0(int, int)+14>.

Temporary breakpoint 6, decode::entry (this=0x7fffffff69d0) at decode.cpp:45
45	  unsigned int 	instr_tmp = 0;
Dump of assembler code for function decode::entry():
   0x000000000041d436 <+0>:	push   %rbp
   0x000000000041d437 <+1>:	mov    %rsp,%rbp
   0x000000000041d43a <+4>:	push   %r12
   0x000000000041d43c <+6>:	push   %rbx
   0x000000000041d43d <+7>:	sub    $0x270,%rsp
   0x000000000041d444 <+14>:	mov    %rdi,-0x278(%rbp)
=> 0x000000000041d44b <+21>:	movl   $0x0,-0x254(%rbp)
   0x000000000041d455 <+31>:	movl   $0x0,-0x1c(%rbp)
   0x000000000041d45c <+38>:	movl   $0x0,-0x20(%rbp)
   0x000000000041d463 <+45>:	movl   $0x0,-0x24(%rbp)
   0x000000000041d46a <+52>:	movl   $0x0,-0x258(%rbp)
   0x000000000041d474 <+62>:	movl   $0x0,-0x28(%rbp)
   0x000000000041d47b <+69>:	movl   $0x0,-0x25c(%rbp)
   0x000000000041d485 <+79>:	movl   $0x0,-0x14(%rbp)
   0x000000000041d48c <+86>:	movl   $0x0,-0x260(%rbp)
   0x000000000041d496 <+96>:	movl   $0x0,-0x264(%rbp)
   0x000000000041d4a0 <+106>:	movl   $0x0,-0x268(%rbp)
   0x000000000041d4aa <+116>:	movl   $0x0,-0x2c(%rbp)
   0x000000000041d4b1 <+123>:	movb   $0x0,-0x2d(%rbp)
   0x000000000041d4b5 <+127>:	movb   $0x0,-0x24d(%rbp)
   0x000000000041d4bc <+134>:	mov    -0x278(%rbp),%rax
   0x000000000041d4c3 <+141>:	lea    0xcc0(%rax),%rdx
   0x000000000041d4ca <+148>:	lea    -0x24d(%rbp),%rax
   0x000000000041d4d1 <+155>:	mov    %rax,%rsi
   0x000000000041d4d4 <+158>:	mov    %rdx,%rdi
   0x000000000041d4d7 <+161>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041d4dc <+166>:	movb   $0x0,-0x24c(%rbp)
   0x000000000041d4e3 <+173>:	mov    -0x278(%rbp),%rax
   0x000000000041d4ea <+180>:	lea    0x14e8(%rax),%rdx
   0x000000000041d4f1 <+187>:	lea    -0x24c(%rbp),%rax
   0x000000000041d4f8 <+194>:	mov    %rax,%rsi
   0x000000000041d4fb <+197>:	mov    %rdx,%rdi
   0x000000000041d4fe <+200>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041d503 <+205>:	movb   $0x0,-0x24b(%rbp)
   0x000000000041d50a <+212>:	mov    -0x278(%rbp),%rax
   0x000000000041d511 <+219>:	lea    0x1590(%rax),%rdx
   0x000000000041d518 <+226>:	lea    -0x24b(%rbp),%rax
   0x000000000041d51f <+233>:	mov    %rax,%rsi
   0x000000000041d522 <+236>:	mov    %rdx,%rdi
   0x000000000041d525 <+239>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041d52a <+244>:	movb   $0x0,-0x24a(%rbp)
   0x000000000041d531 <+251>:	mov    -0x278(%rbp),%rax
   0x000000000041d538 <+258>:	lea    0x1638(%rax),%rdx
   0x000000000041d53f <+265>:	lea    -0x24a(%rbp),%rax
   0x000000000041d546 <+272>:	mov    %rax,%rsi
   0x000000000041d549 <+275>:	mov    %rdx,%rdi
   0x000000000041d54c <+278>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041d551 <+283>:	mov    -0x278(%rbp),%rax
   0x000000000041d558 <+290>:	mov    $0x2,%esi
   0x000000000041d55d <+295>:	mov    %rax,%rdi
   0x000000000041d560 <+298>:	callq  0x41c000 <sc_core::sc_module::wait(int)>
   0x000000000041d565 <+303>:	mov    -0x278(%rbp),%rax
   0x000000000041d56c <+310>:	add    $0x3d0,%rax
   0x000000000041d572 <+316>:	mov    %rax,%rdi
   0x000000000041d575 <+319>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x000000000041d57a <+324>:	movzbl (%rax),%eax
   0x000000000041d57d <+327>:	test   %al,%al
   0x000000000041d57f <+329>:	je     0x41d69d <decode::entry()+615>
   0x000000000041d585 <+335>:	mov    -0x278(%rbp),%rax
   0x000000000041d58c <+342>:	add    $0x470,%rax
   0x000000000041d592 <+348>:	mov    %rax,%rdi
   0x000000000041d595 <+351>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041d59a <+356>:	mov    (%rax),%ebx
   0x000000000041d59c <+358>:	mov    -0x278(%rbp),%rax
   0x000000000041d5a3 <+365>:	add    $0x500,%rax
   0x000000000041d5a9 <+371>:	mov    %rax,%rdi
   0x000000000041d5ac <+374>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x000000000041d5b1 <+379>:	mov    (%rax),%edx
   0x000000000041d5b3 <+381>:	mov    -0x278(%rbp),%rax
   0x000000000041d5ba <+388>:	mov    %ebx,%ecx
   0x000000000041d5bc <+390>:	add    $0x630,%rcx
   0x000000000041d5c3 <+397>:	mov    %edx,(%rax,%rcx,4)
   0x000000000041d5c6 <+400>:	mov    $0x429fc8,%esi
   0x000000000041d5cb <+405>:	mov    $0x636740,%edi
   0x000000000041d5d0 <+410>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d5d5 <+415>:	mov    $0x407a20,%esi
   0x000000000041d5da <+420>:	mov    %rax,%rdi
   0x000000000041d5dd <+423>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d5e2 <+428>:	mov    -0x278(%rbp),%rax
   0x000000000041d5e9 <+435>:	add    $0x500,%rax
   0x000000000041d5ef <+441>:	mov    %rax,%rdi
   0x000000000041d5f2 <+444>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x000000000041d5f7 <+449>:	mov    (%rax),%r12d
   0x000000000041d5fa <+452>:	mov    -0x278(%rbp),%rax
   0x000000000041d601 <+459>:	add    $0x500,%rax
   0x000000000041d607 <+465>:	mov    %rax,%rdi
   0x000000000041d60a <+468>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x000000000041d60f <+473>:	mov    (%rax),%ebx
   0x000000000041d611 <+475>:	mov    -0x278(%rbp),%rax
   0x000000000041d618 <+482>:	add    $0x470,%rax
   0x000000000041d61e <+488>:	mov    %rax,%rdi
   0x000000000041d621 <+491>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041d626 <+496>:	mov    (%rax),%eax
   0x000000000041d628 <+498>:	mov    %r12d,%ecx
   0x000000000041d62b <+501>:	mov    %ebx,%edx
   0x000000000041d62d <+503>:	mov    %eax,%esi
   0x000000000041d62f <+505>:	mov    $0x429feb,%edi
   0x000000000041d634 <+510>:	mov    $0x0,%eax
   0x000000000041d639 <+515>:	callq  0x407810 <printf@plt>
   0x000000000041d63e <+520>:	mov    $0x4a,%edx
   0x000000000041d643 <+525>:	mov    $0x2,%esi
   0x000000000041d648 <+530>:	mov    $0x636748,%edi
   0x000000000041d64d <+535>:	callq  0x41d3d4 <std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)>
   0x000000000041d652 <+540>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041d657 <+545>:	mov    %rax,%rbx
   0x000000000041d65a <+548>:	mov    $0x42a006,%esi
   0x000000000041d65f <+553>:	mov    $0x636740,%edi
   0x000000000041d664 <+558>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d669 <+563>:	mov    %rbx,%rsi
   0x000000000041d66c <+566>:	mov    %rax,%rdi
   0x000000000041d66f <+569>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041d674 <+574>:	mov    $0x407a20,%esi
   0x000000000041d679 <+579>:	mov    %rax,%rdi
   0x000000000041d67c <+582>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d681 <+587>:	mov    $0x429fc8,%esi
   0x000000000041d686 <+592>:	mov    $0x636740,%edi
   0x000000000041d68b <+597>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d690 <+602>:	mov    $0x407a20,%esi
   0x000000000041d695 <+607>:	mov    %rax,%rdi
   0x000000000041d698 <+610>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d69d <+615>:	mov    -0x278(%rbp),%rax
   0x000000000041d6a4 <+622>:	add    $0x620,%rax
   0x000000000041d6aa <+628>:	mov    %rax,%rdi
   0x000000000041d6ad <+631>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x000000000041d6b2 <+636>:	movzbl (%rax),%eax
   0x000000000041d6b5 <+639>:	test   %al,%al
   0x000000000041d6b7 <+641>:	je     0x41d7d5 <decode::entry()+927>
   0x000000000041d6bd <+647>:	mov    -0x278(%rbp),%rax
   0x000000000041d6c4 <+654>:	add    $0x6c0,%rax
   0x000000000041d6ca <+660>:	mov    %rax,%rdi
   0x000000000041d6cd <+663>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041d6d2 <+668>:	mov    (%rax),%ebx
   0x000000000041d6d4 <+670>:	mov    -0x278(%rbp),%rax
   0x000000000041d6db <+677>:	add    $0x590,%rax
   0x000000000041d6e1 <+683>:	mov    %rax,%rdi
   0x000000000041d6e4 <+686>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x000000000041d6e9 <+691>:	mov    (%rax),%edx
   0x000000000041d6eb <+693>:	mov    -0x278(%rbp),%rax
   0x000000000041d6f2 <+700>:	mov    %ebx,%ecx
   0x000000000041d6f4 <+702>:	add    $0x630,%rcx
   0x000000000041d6fb <+709>:	mov    %edx,(%rax,%rcx,4)
   0x000000000041d6fe <+712>:	mov    $0x429fc8,%esi
   0x000000000041d703 <+717>:	mov    $0x636740,%edi
   0x000000000041d708 <+722>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d70d <+727>:	mov    $0x407a20,%esi
   0x000000000041d712 <+732>:	mov    %rax,%rdi
   0x000000000041d715 <+735>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d71a <+740>:	mov    -0x278(%rbp),%rax
   0x000000000041d721 <+747>:	add    $0x590,%rax
   0x000000000041d727 <+753>:	mov    %rax,%rdi
   0x000000000041d72a <+756>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x000000000041d72f <+761>:	mov    (%rax),%r12d
   0x000000000041d732 <+764>:	mov    -0x278(%rbp),%rax
   0x000000000041d739 <+771>:	add    $0x590,%rax
   0x000000000041d73f <+777>:	mov    %rax,%rdi
   0x000000000041d742 <+780>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x000000000041d747 <+785>:	mov    (%rax),%ebx
   0x000000000041d749 <+787>:	mov    -0x278(%rbp),%rax
   0x000000000041d750 <+794>:	add    $0x6c0,%rax
   0x000000000041d756 <+800>:	mov    %rax,%rdi
   0x000000000041d759 <+803>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041d75e <+808>:	mov    (%rax),%eax
   0x000000000041d760 <+810>:	mov    %r12d,%ecx
   0x000000000041d763 <+813>:	mov    %ebx,%edx
   0x000000000041d765 <+815>:	mov    %eax,%esi
   0x000000000041d767 <+817>:	mov    $0x42a010,%edi
   0x000000000041d76c <+822>:	mov    $0x0,%eax
   0x000000000041d771 <+827>:	callq  0x407810 <printf@plt>
   0x000000000041d776 <+832>:	mov    $0x4a,%edx
   0x000000000041d77b <+837>:	mov    $0x2,%esi
   0x000000000041d780 <+842>:	mov    $0x636748,%edi
   0x000000000041d785 <+847>:	callq  0x41d3d4 <std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)>
   0x000000000041d78a <+852>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041d78f <+857>:	mov    %rax,%rbx
   0x000000000041d792 <+860>:	mov    $0x42a006,%esi
   0x000000000041d797 <+865>:	mov    $0x636740,%edi
   0x000000000041d79c <+870>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d7a1 <+875>:	mov    %rbx,%rsi
   0x000000000041d7a4 <+878>:	mov    %rax,%rdi
   0x000000000041d7a7 <+881>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041d7ac <+886>:	mov    $0x407a20,%esi
   0x000000000041d7b1 <+891>:	mov    %rax,%rdi
   0x000000000041d7b4 <+894>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d7b9 <+899>:	mov    $0x429fc8,%esi
   0x000000000041d7be <+904>:	mov    $0x636740,%edi
   0x000000000041d7c3 <+909>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d7c8 <+914>:	mov    $0x407a20,%esi
   0x000000000041d7cd <+919>:	mov    %rax,%rdi
   0x000000000041d7d0 <+922>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d7d5 <+927>:	mov    -0x278(%rbp),%rax
   0x000000000041d7dc <+934>:	add    $0x7e0,%rax
   0x000000000041d7e2 <+940>:	mov    %rax,%rdi
   0x000000000041d7e5 <+943>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x000000000041d7ea <+948>:	movzbl (%rax),%eax
   0x000000000041d7ed <+951>:	test   %al,%al
   0x000000000041d7ef <+953>:	je     0x41d8f2 <decode::entry()+1212>
   0x000000000041d7f5 <+959>:	mov    -0x278(%rbp),%rax
   0x000000000041d7fc <+966>:	add    $0x880,%rax
   0x000000000041d802 <+972>:	mov    %rax,%rdi
   0x000000000041d805 <+975>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041d80a <+980>:	mov    (%rax),%ebx
   0x000000000041d80c <+982>:	mov    -0x278(%rbp),%rax
   0x000000000041d813 <+989>:	add    $0x750,%rax
   0x000000000041d819 <+995>:	mov    %rax,%rdi
   0x000000000041d81c <+998>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x000000000041d821 <+1003>:	mov    (%rax),%edx
   0x000000000041d823 <+1005>:	mov    -0x278(%rbp),%rax
   0x000000000041d82a <+1012>:	mov    %ebx,%ecx
   0x000000000041d82c <+1014>:	add    $0x630,%rcx
   0x000000000041d833 <+1021>:	mov    %edx,(%rax,%rcx,4)
   0x000000000041d836 <+1024>:	mov    $0x429fc8,%esi
   0x000000000041d83b <+1029>:	mov    $0x636740,%edi
   0x000000000041d840 <+1034>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d845 <+1039>:	mov    $0x407a20,%esi
   0x000000000041d84a <+1044>:	mov    %rax,%rdi
   0x000000000041d84d <+1047>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d852 <+1052>:	mov    -0x278(%rbp),%rax
   0x000000000041d859 <+1059>:	add    $0x750,%rax
   0x000000000041d85f <+1065>:	mov    %rax,%rdi
   0x000000000041d862 <+1068>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x000000000041d867 <+1073>:	mov    (%rax),%ebx
   0x000000000041d869 <+1075>:	mov    -0x278(%rbp),%rax
   0x000000000041d870 <+1082>:	add    $0x880,%rax
   0x000000000041d876 <+1088>:	mov    %rax,%rdi
   0x000000000041d879 <+1091>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041d87e <+1096>:	mov    (%rax),%eax
   0x000000000041d880 <+1098>:	mov    %ebx,%edx
   0x000000000041d882 <+1100>:	mov    %eax,%esi
   0x000000000041d884 <+1102>:	mov    $0x42a02d,%edi
   0x000000000041d889 <+1107>:	mov    $0x0,%eax
   0x000000000041d88e <+1112>:	callq  0x407810 <printf@plt>
   0x000000000041d893 <+1117>:	mov    $0x4a,%edx
   0x000000000041d898 <+1122>:	mov    $0x2,%esi
   0x000000000041d89d <+1127>:	mov    $0x636748,%edi
   0x000000000041d8a2 <+1132>:	callq  0x41d3d4 <std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)>
   0x000000000041d8a7 <+1137>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041d8ac <+1142>:	mov    %rax,%rbx
   0x000000000041d8af <+1145>:	mov    $0x42a006,%esi
   0x000000000041d8b4 <+1150>:	mov    $0x636740,%edi
   0x000000000041d8b9 <+1155>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d8be <+1160>:	mov    %rbx,%rsi
   0x000000000041d8c1 <+1163>:	mov    %rax,%rdi
   0x000000000041d8c4 <+1166>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041d8c9 <+1171>:	mov    $0x407a20,%esi
   0x000000000041d8ce <+1176>:	mov    %rax,%rdi
   0x000000000041d8d1 <+1179>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d8d6 <+1184>:	mov    $0x429fc8,%esi
   0x000000000041d8db <+1189>:	mov    $0x636740,%edi
   0x000000000041d8e0 <+1194>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d8e5 <+1199>:	mov    $0x407a20,%esi
   0x000000000041d8ea <+1204>:	mov    %rax,%rdi
   0x000000000041d8ed <+1207>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d8f2 <+1212>:	mov    -0x278(%rbp),%rax
   0x000000000041d8f9 <+1219>:	add    $0x290,%rax
   0x000000000041d8ff <+1225>:	mov    %rax,%rdi
   0x000000000041d902 <+1228>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x000000000041d907 <+1233>:	movzbl (%rax),%eax
   0x000000000041d90a <+1236>:	test   %al,%al
   0x000000000041d90c <+1238>:	je     0x421cc1 <decode::entry()+18571>
   0x000000000041d912 <+1244>:	mov    -0x278(%rbp),%rax
   0x000000000041d919 <+1251>:	add    $0xa50,%rax
   0x000000000041d91f <+1257>:	mov    %rax,%rdi
   0x000000000041d922 <+1260>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041d927 <+1265>:	mov    (%rax),%edx
   0x000000000041d929 <+1267>:	mov    -0x278(%rbp),%rax
   0x000000000041d930 <+1274>:	mov    %edx,0x19e0(%rax)
   0x000000000041d936 <+1280>:	mov    -0x278(%rbp),%rax
   0x000000000041d93d <+1287>:	add    $0x910,%rax
   0x000000000041d943 <+1293>:	mov    %rax,%rdi
   0x000000000041d946 <+1296>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x000000000041d94b <+1301>:	movzbl (%rax),%eax
   0x000000000041d94e <+1304>:	test   %al,%al
   0x000000000041d950 <+1306>:	je     0x41da07 <decode::entry()+1489>
   0x000000000041d956 <+1312>:	mov    $0x429fc8,%esi
   0x000000000041d95b <+1317>:	mov    $0x636740,%edi
   0x000000000041d960 <+1322>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d965 <+1327>:	mov    $0x407a20,%esi
   0x000000000041d96a <+1332>:	mov    %rax,%rdi
   0x000000000041d96d <+1335>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d972 <+1340>:	mov    $0x42a044,%edi
   0x000000000041d977 <+1345>:	mov    $0x0,%eax
   0x000000000041d97c <+1350>:	callq  0x407810 <printf@plt>
   0x000000000041d981 <+1355>:	mov    $0x4a,%edx
   0x000000000041d986 <+1360>:	mov    $0x2,%esi
   0x000000000041d98b <+1365>:	mov    $0x636748,%edi
   0x000000000041d990 <+1370>:	callq  0x41d3d4 <std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)>
   0x000000000041d995 <+1375>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041d99a <+1380>:	mov    %rax,%rbx
   0x000000000041d99d <+1383>:	mov    $0x42a006,%esi
   0x000000000041d9a2 <+1388>:	mov    $0x636740,%edi
   0x000000000041d9a7 <+1393>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d9ac <+1398>:	mov    %rbx,%rsi
   0x000000000041d9af <+1401>:	mov    %rax,%rdi
   0x000000000041d9b2 <+1404>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041d9b7 <+1409>:	mov    $0x407a20,%esi
   0x000000000041d9bc <+1414>:	mov    %rax,%rdi
   0x000000000041d9bf <+1417>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d9c4 <+1422>:	mov    $0x429fc8,%esi
   0x000000000041d9c9 <+1427>:	mov    $0x636740,%edi
   0x000000000041d9ce <+1432>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041d9d3 <+1437>:	mov    $0x407a20,%esi
   0x000000000041d9d8 <+1442>:	mov    %rax,%rdi
   0x000000000041d9db <+1445>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041d9e0 <+1450>:	movb   $0x0,-0x249(%rbp)
   0x000000000041d9e7 <+1457>:	mov    -0x278(%rbp),%rax
   0x000000000041d9ee <+1464>:	lea    0xcc0(%rax),%rdx
   0x000000000041d9f5 <+1471>:	lea    -0x249(%rbp),%rax
   0x000000000041d9fc <+1478>:	mov    %rax,%rsi
   0x000000000041d9ff <+1481>:	mov    %rdx,%rdi
   0x000000000041da02 <+1484>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041da07 <+1489>:	mov    -0x278(%rbp),%rax
   0x000000000041da0e <+1496>:	add    $0x170,%rax
   0x000000000041da14 <+1502>:	mov    %rax,%rdi
   0x000000000041da17 <+1505>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041da1c <+1510>:	mov    (%rax),%eax
   0x000000000041da1e <+1512>:	mov    %eax,-0x254(%rbp)
   0x000000000041da24 <+1518>:	mov    -0x254(%rbp),%eax
   0x000000000041da2a <+1524>:	shr    $0x18,%eax
   0x000000000041da2d <+1527>:	mov    %eax,-0x1c(%rbp)
   0x000000000041da30 <+1530>:	mov    -0x254(%rbp),%eax
   0x000000000041da36 <+1536>:	and    $0xf00000,%eax
   0x000000000041da3b <+1541>:	shr    $0x14,%eax
   0x000000000041da3e <+1544>:	mov    %eax,-0x258(%rbp)
   0x000000000041da44 <+1550>:	mov    -0x254(%rbp),%eax
   0x000000000041da4a <+1556>:	and    $0xf0000,%eax
   0x000000000041da4f <+1561>:	shr    $0x10,%eax
   0x000000000041da52 <+1564>:	mov    %eax,-0x20(%rbp)
   0x000000000041da55 <+1567>:	mov    -0x254(%rbp),%eax
   0x000000000041da5b <+1573>:	and    $0xf000,%eax
   0x000000000041da60 <+1578>:	shr    $0xc,%eax
   0x000000000041da63 <+1581>:	mov    %eax,-0x24(%rbp)
   0x000000000041da66 <+1584>:	mov    -0x254(%rbp),%eax
   0x000000000041da6c <+1590>:	and    $0xffff,%eax
   0x000000000041da71 <+1595>:	mov    %eax,-0x28(%rbp)
   0x000000000041da74 <+1598>:	mov    -0x254(%rbp),%eax
   0x000000000041da7a <+1604>:	and    $0xfff,%eax
   0x000000000041da7f <+1609>:	mov    %eax,-0x25c(%rbp)
   0x000000000041da85 <+1615>:	mov    -0x254(%rbp),%eax
   0x000000000041da8b <+1621>:	and    $0xffff,%eax
   0x000000000041da90 <+1626>:	mov    %eax,-0x14(%rbp)
   0x000000000041da93 <+1629>:	mov    -0x254(%rbp),%eax
   0x000000000041da99 <+1635>:	and    $0xffffff,%eax
   0x000000000041da9e <+1640>:	mov    %eax,-0x260(%rbp)
   0x000000000041daa4 <+1646>:	mov    -0x254(%rbp),%eax
   0x000000000041daaa <+1652>:	and    $0x8000,%eax
   0x000000000041daaf <+1657>:	shr    $0xf,%eax
   0x000000000041dab2 <+1660>:	test   %eax,%eax
   0x000000000041dab4 <+1662>:	setne  %al
   0x000000000041dab7 <+1665>:	mov    %al,-0x2d(%rbp)
   0x000000000041daba <+1668>:	cmpb   $0x0,-0x2d(%rbp)
   0x000000000041dabe <+1672>:	je     0x41dac7 <decode::entry()+1681>
   0x000000000041dac0 <+1674>:	subl   $0x10000,-0x14(%rbp)
   0x000000000041dac7 <+1681>:	mov    -0x278(%rbp),%rax
   0x000000000041dace <+1688>:	mov    -0x20(%rbp),%edx
   0x000000000041dad1 <+1691>:	add    $0x630,%rdx
   0x000000000041dad8 <+1698>:	mov    (%rax,%rdx,4),%eax
   0x000000000041dadb <+1701>:	mov    %eax,-0x264(%rbp)
   0x000000000041dae1 <+1707>:	mov    -0x278(%rbp),%rax
   0x000000000041dae8 <+1714>:	mov    -0x24(%rbp),%edx
   0x000000000041daeb <+1717>:	add    $0x630,%rdx
   0x000000000041daf2 <+1724>:	mov    (%rax,%rdx,4),%eax
   0x000000000041daf5 <+1727>:	mov    %eax,-0x268(%rbp)
   0x000000000041dafb <+1733>:	mov    -0x258(%rbp),%edx
   0x000000000041db01 <+1739>:	mov    -0x278(%rbp),%rax
   0x000000000041db08 <+1746>:	mov    %edx,%edx
   0x000000000041db0a <+1748>:	add    $0x630,%rdx
   0x000000000041db11 <+1755>:	mov    (%rax,%rdx,4),%eax
   0x000000000041db14 <+1758>:	mov    %eax,-0x2c(%rbp)
   0x000000000041db17 <+1761>:	mov    -0x278(%rbp),%rax
   0x000000000041db1e <+1768>:	mov    %rax,%rdi
   0x000000000041db21 <+1771>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041db26 <+1776>:	mov    $0x429fc8,%esi
   0x000000000041db2b <+1781>:	mov    $0x636740,%edi
   0x000000000041db30 <+1786>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041db35 <+1791>:	mov    $0x407a20,%esi
   0x000000000041db3a <+1796>:	mov    %rax,%rdi
   0x000000000041db3d <+1799>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041db42 <+1804>:	cmpl   $0xff,-0x1c(%rbp)
   0x000000000041db49 <+1811>:	ja     0x421c3e <decode::entry()+18440>
   0x000000000041db4f <+1817>:	mov    -0x1c(%rbp),%eax
   0x000000000041db52 <+1820>:	mov    0x42a870(,%rax,8),%rax
   0x000000000041db5a <+1828>:	jmpq   *%rax
   0x000000000041db5c <+1830>:	mov    $0x42a058,%edi
   0x000000000041db61 <+1835>:	callq  0x407f50 <puts@plt>
   0x000000000041db66 <+1840>:	mov    $0x42a07d,%edi
   0x000000000041db6b <+1845>:	mov    $0x0,%eax
   0x000000000041db70 <+1850>:	callq  0x407810 <printf@plt>
   0x000000000041db75 <+1855>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041db7a <+1860>:	mov    %rax,%rbx
   0x000000000041db7d <+1863>:	mov    $0x42a006,%esi
   0x000000000041db82 <+1868>:	mov    $0x636740,%edi
   0x000000000041db87 <+1873>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041db8c <+1878>:	mov    %rbx,%rsi
   0x000000000041db8f <+1881>:	mov    %rax,%rdi
   0x000000000041db92 <+1884>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041db97 <+1889>:	mov    $0x407a20,%esi
   0x000000000041db9c <+1894>:	mov    %rax,%rdi
   0x000000000041db9f <+1897>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041dba4 <+1902>:	mov    $0x42a098,%edi
   0x000000000041dba9 <+1907>:	callq  0x407f50 <puts@plt>
   0x000000000041dbae <+1912>:	mov    $0x42a0c0,%edi
   0x000000000041dbb3 <+1917>:	callq  0x407f50 <puts@plt>
   0x000000000041dbb8 <+1922>:	movl   $0x0,-0x18(%rbp)
   0x000000000041dbbf <+1929>:	cmpl   $0x1f,-0x18(%rbp)
   0x000000000041dbc3 <+1933>:	jg     0x41dc30 <decode::entry()+2042>
   0x000000000041dbc5 <+1935>:	mov    -0x278(%rbp),%rax
   0x000000000041dbcc <+1942>:	mov    -0x18(%rbp),%edx
   0x000000000041dbcf <+1945>:	movslq %edx,%rdx
   0x000000000041dbd2 <+1948>:	add    $0x630,%rdx
   0x000000000041dbd9 <+1955>:	mov    (%rax,%rdx,4),%edx
   0x000000000041dbdc <+1958>:	mov    -0x18(%rbp),%eax
   0x000000000041dbdf <+1961>:	mov    %eax,%esi
   0x000000000041dbe1 <+1963>:	mov    $0x42a108,%edi
   0x000000000041dbe6 <+1968>:	mov    $0x0,%eax
   0x000000000041dbeb <+1973>:	callq  0x407810 <printf@plt>
   0x000000000041dbf0 <+1978>:	cmpl   $0x3,-0x18(%rbp)
   0x000000000041dbf4 <+1982>:	je     0x41dc20 <decode::entry()+2026>
   0x000000000041dbf6 <+1984>:	cmpl   $0xb,-0x18(%rbp)
   0x000000000041dbfa <+1988>:	je     0x41dc20 <decode::entry()+2026>
   0x000000000041dbfc <+1990>:	cmpl   $0x13,-0x18(%rbp)
   0x000000000041dc00 <+1994>:	je     0x41dc20 <decode::entry()+2026>
   0x000000000041dc02 <+1996>:	cmpl   $0x1b,-0x18(%rbp)
   0x000000000041dc06 <+2000>:	je     0x41dc20 <decode::entry()+2026>
   0x000000000041dc08 <+2002>:	cmpl   $0x7,-0x18(%rbp)
   0x000000000041dc0c <+2006>:	je     0x41dc20 <decode::entry()+2026>
   0x000000000041dc0e <+2008>:	cmpl   $0xf,-0x18(%rbp)
   0x000000000041dc12 <+2012>:	je     0x41dc20 <decode::entry()+2026>
   0x000000000041dc14 <+2014>:	cmpl   $0x17,-0x18(%rbp)
   0x000000000041dc18 <+2018>:	je     0x41dc20 <decode::entry()+2026>
   0x000000000041dc1a <+2020>:	cmpl   $0x1f,-0x18(%rbp)
   0x000000000041dc1e <+2024>:	jne    0x41dc2a <decode::entry()+2036>
   0x000000000041dc20 <+2026>:	mov    $0xa,%edi
   0x000000000041dc25 <+2031>:	callq  0x407ec0 <putchar@plt>
   0x000000000041dc2a <+2036>:	addl   $0x1,-0x18(%rbp)
   0x000000000041dc2e <+2040>:	jmp    0x41dbbf <decode::entry()+1929>
   0x000000000041dc30 <+2042>:	mov    $0x42a118,%edi
   0x000000000041dc35 <+2047>:	callq  0x407f50 <puts@plt>
   0x000000000041dc3a <+2052>:	mov    -0x278(%rbp),%rax
   0x000000000041dc41 <+2059>:	mov    %rax,%rdi
   0x000000000041dc44 <+2062>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041dc49 <+2067>:	mov    -0x278(%rbp),%rax
   0x000000000041dc50 <+2074>:	mov    %rax,%rdi
   0x000000000041dc53 <+2077>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041dc58 <+2082>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041dc5d <+2087>:	mov    -0x268(%rbp),%edi
   0x000000000041dc63 <+2093>:	mov    -0x264(%rbp),%ecx
   0x000000000041dc69 <+2099>:	mov    -0x258(%rbp),%eax
   0x000000000041dc6f <+2105>:	mov    -0x24(%rbp),%esi
   0x000000000041dc72 <+2108>:	mov    -0x20(%rbp),%edx
   0x000000000041dc75 <+2111>:	mov    %edi,%r9d
   0x000000000041dc78 <+2114>:	mov    %esi,%r8d
   0x000000000041dc7b <+2117>:	mov    %eax,%esi
   0x000000000041dc7d <+2119>:	mov    $0x42a161,%edi
   0x000000000041dc82 <+2124>:	mov    $0x0,%eax
   0x000000000041dc87 <+2129>:	callq  0x407810 <printf@plt>
   0x000000000041dc8c <+2134>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041dc91 <+2139>:	mov    %rax,%rbx
   0x000000000041dc94 <+2142>:	mov    $0x42a17f,%esi
   0x000000000041dc99 <+2147>:	mov    $0x636740,%edi
   0x000000000041dc9e <+2152>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041dca3 <+2157>:	mov    %rbx,%rsi
   0x000000000041dca6 <+2160>:	mov    %rax,%rdi
   0x000000000041dca9 <+2163>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041dcae <+2168>:	mov    $0x407a20,%esi
   0x000000000041dcb3 <+2173>:	mov    %rax,%rdi
   0x000000000041dcb6 <+2176>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041dcbb <+2181>:	mov    $0x429fc8,%esi
   0x000000000041dcc0 <+2186>:	mov    $0x636740,%edi
   0x000000000041dcc5 <+2191>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041dcca <+2196>:	mov    $0x407a20,%esi
   0x000000000041dccf <+2201>:	mov    %rax,%rdi
   0x000000000041dcd2 <+2204>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041dcd7 <+2209>:	mov    -0x278(%rbp),%rax
   0x000000000041dcde <+2216>:	lea    0x11c0(%rax),%rdx
   0x000000000041dce5 <+2223>:	lea    -0x264(%rbp),%rax
   0x000000000041dcec <+2230>:	mov    %rax,%rsi
   0x000000000041dcef <+2233>:	mov    %rdx,%rdi
   0x000000000041dcf2 <+2236>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041dcf7 <+2241>:	mov    -0x278(%rbp),%rax
   0x000000000041dcfe <+2248>:	lea    0x1258(%rax),%rdx
   0x000000000041dd05 <+2255>:	lea    -0x268(%rbp),%rax
   0x000000000041dd0c <+2262>:	mov    %rax,%rsi
   0x000000000041dd0f <+2265>:	mov    %rdx,%rdi
   0x000000000041dd12 <+2268>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041dd17 <+2273>:	mov    -0x278(%rbp),%rax
   0x000000000041dd1e <+2280>:	lea    0x1080(%rax),%rdx
   0x000000000041dd25 <+2287>:	lea    -0x258(%rbp),%rax
   0x000000000041dd2c <+2294>:	mov    %rax,%rsi
   0x000000000041dd2f <+2297>:	mov    %rdx,%rdi
   0x000000000041dd32 <+2300>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041dd37 <+2305>:	movl   $0x3,-0x248(%rbp)
   0x000000000041dd41 <+2315>:	mov    -0x278(%rbp),%rax
   0x000000000041dd48 <+2322>:	lea    0xf40(%rax),%rdx
   0x000000000041dd4f <+2329>:	lea    -0x248(%rbp),%rax
   0x000000000041dd56 <+2336>:	mov    %rax,%rsi
   0x000000000041dd59 <+2339>:	mov    %rdx,%rdi
   0x000000000041dd5c <+2342>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041dd61 <+2347>:	movb   $0x1,-0x242(%rbp)
   0x000000000041dd68 <+2354>:	mov    -0x278(%rbp),%rax
   0x000000000041dd6f <+2361>:	lea    0x14e8(%rax),%rdx
   0x000000000041dd76 <+2368>:	lea    -0x242(%rbp),%rax
   0x000000000041dd7d <+2375>:	mov    %rax,%rsi
   0x000000000041dd80 <+2378>:	mov    %rdx,%rdi
   0x000000000041dd83 <+2381>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041dd88 <+2386>:	mov    -0x278(%rbp),%rax
   0x000000000041dd8f <+2393>:	mov    %rax,%rdi
   0x000000000041dd92 <+2396>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041dd97 <+2401>:	movb   $0x0,-0x241(%rbp)
   0x000000000041dd9e <+2408>:	mov    -0x278(%rbp),%rax
   0x000000000041dda5 <+2415>:	lea    0x14e8(%rax),%rdx
   0x000000000041ddac <+2422>:	lea    -0x241(%rbp),%rax
   0x000000000041ddb3 <+2429>:	mov    %rax,%rsi
   0x000000000041ddb6 <+2432>:	mov    %rdx,%rdi
   0x000000000041ddb9 <+2435>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041ddbe <+2440>:	mov    -0x278(%rbp),%rax
   0x000000000041ddc5 <+2447>:	mov    %rax,%rdi
   0x000000000041ddc8 <+2450>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041ddcd <+2455>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041ddd2 <+2460>:	mov    -0x264(%rbp),%ecx
   0x000000000041ddd8 <+2466>:	mov    -0x258(%rbp),%eax
   0x000000000041ddde <+2472>:	mov    -0x28(%rbp),%esi
   0x000000000041dde1 <+2475>:	mov    -0x20(%rbp),%edx
   0x000000000041dde4 <+2478>:	mov    %esi,%r8d
   0x000000000041dde7 <+2481>:	mov    %eax,%esi
   0x000000000041dde9 <+2483>:	mov    $0x42a191,%edi
   0x000000000041ddee <+2488>:	mov    $0x0,%eax
   0x000000000041ddf3 <+2493>:	callq  0x407810 <printf@plt>
   0x000000000041ddf8 <+2498>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041ddfd <+2503>:	mov    %rax,%rbx
   0x000000000041de00 <+2506>:	mov    $0x42a17f,%esi
   0x000000000041de05 <+2511>:	mov    $0x636740,%edi
   0x000000000041de0a <+2516>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041de0f <+2521>:	mov    %rbx,%rsi
   0x000000000041de12 <+2524>:	mov    %rax,%rdi
   0x000000000041de15 <+2527>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041de1a <+2532>:	mov    $0x407a20,%esi
   0x000000000041de1f <+2537>:	mov    %rax,%rdi
   0x000000000041de22 <+2540>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041de27 <+2545>:	mov    $0x429fc8,%esi
   0x000000000041de2c <+2550>:	mov    $0x636740,%edi
   0x000000000041de31 <+2555>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041de36 <+2560>:	mov    $0x407a20,%esi
   0x000000000041de3b <+2565>:	mov    %rax,%rdi
   0x000000000041de3e <+2568>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041de43 <+2573>:	mov    -0x278(%rbp),%rax
   0x000000000041de4a <+2580>:	lea    0x11c0(%rax),%rdx
   0x000000000041de51 <+2587>:	lea    -0x264(%rbp),%rax
   0x000000000041de58 <+2594>:	mov    %rax,%rsi
   0x000000000041de5b <+2597>:	mov    %rdx,%rdi
   0x000000000041de5e <+2600>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041de63 <+2605>:	mov    -0x28(%rbp),%eax
   0x000000000041de66 <+2608>:	mov    %eax,-0x240(%rbp)
   0x000000000041de6c <+2614>:	mov    -0x278(%rbp),%rax
   0x000000000041de73 <+2621>:	lea    0x1258(%rax),%rdx
   0x000000000041de7a <+2628>:	lea    -0x240(%rbp),%rax
   0x000000000041de81 <+2635>:	mov    %rax,%rsi
   0x000000000041de84 <+2638>:	mov    %rdx,%rdi
   0x000000000041de87 <+2641>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041de8c <+2646>:	mov    -0x278(%rbp),%rax
   0x000000000041de93 <+2653>:	lea    0x1080(%rax),%rdx
   0x000000000041de9a <+2660>:	lea    -0x258(%rbp),%rax
   0x000000000041dea1 <+2667>:	mov    %rax,%rsi
   0x000000000041dea4 <+2670>:	mov    %rdx,%rdi
   0x000000000041dea7 <+2673>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041deac <+2678>:	movl   $0x3,-0x23c(%rbp)
   0x000000000041deb6 <+2688>:	mov    -0x278(%rbp),%rax
   0x000000000041debd <+2695>:	lea    0xf40(%rax),%rdx
   0x000000000041dec4 <+2702>:	lea    -0x23c(%rbp),%rax
   0x000000000041decb <+2709>:	mov    %rax,%rsi
   0x000000000041dece <+2712>:	mov    %rdx,%rdi
   0x000000000041ded1 <+2715>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041ded6 <+2720>:	movb   $0x1,-0x236(%rbp)
   0x000000000041dedd <+2727>:	mov    -0x278(%rbp),%rax
   0x000000000041dee4 <+2734>:	lea    0x14e8(%rax),%rdx
   0x000000000041deeb <+2741>:	lea    -0x236(%rbp),%rax
   0x000000000041def2 <+2748>:	mov    %rax,%rsi
   0x000000000041def5 <+2751>:	mov    %rdx,%rdi
   0x000000000041def8 <+2754>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041defd <+2759>:	mov    -0x278(%rbp),%rax
   0x000000000041df04 <+2766>:	mov    %rax,%rdi
   0x000000000041df07 <+2769>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041df0c <+2774>:	movb   $0x0,-0x235(%rbp)
   0x000000000041df13 <+2781>:	mov    -0x278(%rbp),%rax
   0x000000000041df1a <+2788>:	lea    0x14e8(%rax),%rdx
   0x000000000041df21 <+2795>:	lea    -0x235(%rbp),%rax
   0x000000000041df28 <+2802>:	mov    %rax,%rsi
   0x000000000041df2b <+2805>:	mov    %rdx,%rdi
   0x000000000041df2e <+2808>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041df33 <+2813>:	mov    -0x278(%rbp),%rax
   0x000000000041df3a <+2820>:	mov    %rax,%rdi
   0x000000000041df3d <+2823>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041df42 <+2828>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041df47 <+2833>:	mov    -0x268(%rbp),%edi
   0x000000000041df4d <+2839>:	mov    -0x264(%rbp),%ecx
   0x000000000041df53 <+2845>:	mov    -0x258(%rbp),%eax
   0x000000000041df59 <+2851>:	mov    -0x24(%rbp),%esi
   0x000000000041df5c <+2854>:	mov    -0x20(%rbp),%edx
   0x000000000041df5f <+2857>:	mov    %edi,%r9d
   0x000000000041df62 <+2860>:	mov    %esi,%r8d
   0x000000000041df65 <+2863>:	mov    %eax,%esi
   0x000000000041df67 <+2865>:	mov    $0x42a1b0,%edi
   0x000000000041df6c <+2870>:	mov    $0x0,%eax
   0x000000000041df71 <+2875>:	callq  0x407810 <printf@plt>
   0x000000000041df76 <+2880>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041df7b <+2885>:	mov    %rax,%rbx
   0x000000000041df7e <+2888>:	mov    $0x42a17f,%esi
   0x000000000041df83 <+2893>:	mov    $0x636740,%edi
   0x000000000041df88 <+2898>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041df8d <+2903>:	mov    %rbx,%rsi
   0x000000000041df90 <+2906>:	mov    %rax,%rdi
   0x000000000041df93 <+2909>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041df98 <+2914>:	mov    $0x407a20,%esi
   0x000000000041df9d <+2919>:	mov    %rax,%rdi
   0x000000000041dfa0 <+2922>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041dfa5 <+2927>:	mov    $0x429fc8,%esi
   0x000000000041dfaa <+2932>:	mov    $0x636740,%edi
   0x000000000041dfaf <+2937>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041dfb4 <+2942>:	mov    $0x407a20,%esi
   0x000000000041dfb9 <+2947>:	mov    %rax,%rdi
   0x000000000041dfbc <+2950>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041dfc1 <+2955>:	mov    -0x278(%rbp),%rax
   0x000000000041dfc8 <+2962>:	lea    0x11c0(%rax),%rdx
   0x000000000041dfcf <+2969>:	lea    -0x264(%rbp),%rax
   0x000000000041dfd6 <+2976>:	mov    %rax,%rsi
   0x000000000041dfd9 <+2979>:	mov    %rdx,%rdi
   0x000000000041dfdc <+2982>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041dfe1 <+2987>:	mov    -0x278(%rbp),%rax
   0x000000000041dfe8 <+2994>:	lea    0x1258(%rax),%rdx
   0x000000000041dfef <+3001>:	lea    -0x268(%rbp),%rax
   0x000000000041dff6 <+3008>:	mov    %rax,%rsi
   0x000000000041dff9 <+3011>:	mov    %rdx,%rdi
   0x000000000041dffc <+3014>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e001 <+3019>:	mov    -0x278(%rbp),%rax
   0x000000000041e008 <+3026>:	lea    0x1080(%rax),%rdx
   0x000000000041e00f <+3033>:	lea    -0x258(%rbp),%rax
   0x000000000041e016 <+3040>:	mov    %rax,%rsi
   0x000000000041e019 <+3043>:	mov    %rdx,%rdi
   0x000000000041e01c <+3046>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041e021 <+3051>:	movl   $0x1,-0x234(%rbp)
   0x000000000041e02b <+3061>:	mov    -0x278(%rbp),%rax
   0x000000000041e032 <+3068>:	lea    0xf40(%rax),%rdx
   0x000000000041e039 <+3075>:	lea    -0x234(%rbp),%rax
   0x000000000041e040 <+3082>:	mov    %rax,%rsi
   0x000000000041e043 <+3085>:	mov    %rdx,%rdi
   0x000000000041e046 <+3088>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e04b <+3093>:	movb   $0x1,-0x22e(%rbp)
   0x000000000041e052 <+3100>:	mov    -0x278(%rbp),%rax
   0x000000000041e059 <+3107>:	lea    0x14e8(%rax),%rdx
   0x000000000041e060 <+3114>:	lea    -0x22e(%rbp),%rax
   0x000000000041e067 <+3121>:	mov    %rax,%rsi
   0x000000000041e06a <+3124>:	mov    %rdx,%rdi
   0x000000000041e06d <+3127>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041e072 <+3132>:	mov    -0x278(%rbp),%rax
   0x000000000041e079 <+3139>:	mov    %rax,%rdi
   0x000000000041e07c <+3142>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041e081 <+3147>:	movb   $0x0,-0x22d(%rbp)
   0x000000000041e088 <+3154>:	mov    -0x278(%rbp),%rax
   0x000000000041e08f <+3161>:	lea    0x14e8(%rax),%rdx
   0x000000000041e096 <+3168>:	lea    -0x22d(%rbp),%rax
   0x000000000041e09d <+3175>:	mov    %rax,%rsi
   0x000000000041e0a0 <+3178>:	mov    %rdx,%rdi
   0x000000000041e0a3 <+3181>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041e0a8 <+3186>:	mov    -0x278(%rbp),%rax
   0x000000000041e0af <+3193>:	mov    %rax,%rdi
   0x000000000041e0b2 <+3196>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041e0b7 <+3201>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041e0bc <+3206>:	mov    -0x268(%rbp),%edi
   0x000000000041e0c2 <+3212>:	mov    -0x264(%rbp),%ecx
   0x000000000041e0c8 <+3218>:	mov    -0x258(%rbp),%eax
   0x000000000041e0ce <+3224>:	mov    -0x24(%rbp),%esi
   0x000000000041e0d1 <+3227>:	mov    -0x20(%rbp),%edx
   0x000000000041e0d4 <+3230>:	mov    %edi,%r9d
   0x000000000041e0d7 <+3233>:	mov    %esi,%r8d
   0x000000000041e0da <+3236>:	mov    %eax,%esi
   0x000000000041e0dc <+3238>:	mov    $0x42a1d1,%edi
   0x000000000041e0e1 <+3243>:	mov    $0x0,%eax
   0x000000000041e0e6 <+3248>:	callq  0x407810 <printf@plt>
   0x000000000041e0eb <+3253>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041e0f0 <+3258>:	mov    %rax,%rbx
   0x000000000041e0f3 <+3261>:	mov    $0x42a17f,%esi
   0x000000000041e0f8 <+3266>:	mov    $0x636740,%edi
   0x000000000041e0fd <+3271>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041e102 <+3276>:	mov    %rbx,%rsi
   0x000000000041e105 <+3279>:	mov    %rax,%rdi
   0x000000000041e108 <+3282>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041e10d <+3287>:	mov    $0x407a20,%esi
   0x000000000041e112 <+3292>:	mov    %rax,%rdi
   0x000000000041e115 <+3295>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041e11a <+3300>:	mov    $0x429fc8,%esi
   0x000000000041e11f <+3305>:	mov    $0x636740,%edi
   0x000000000041e124 <+3310>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041e129 <+3315>:	mov    $0x407a20,%esi
   0x000000000041e12e <+3320>:	mov    %rax,%rdi
   0x000000000041e131 <+3323>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041e136 <+3328>:	mov    -0x278(%rbp),%rax
   0x000000000041e13d <+3335>:	lea    0x11c0(%rax),%rdx
   0x000000000041e144 <+3342>:	lea    -0x264(%rbp),%rax
   0x000000000041e14b <+3349>:	mov    %rax,%rsi
   0x000000000041e14e <+3352>:	mov    %rdx,%rdi
   0x000000000041e151 <+3355>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e156 <+3360>:	mov    -0x278(%rbp),%rax
   0x000000000041e15d <+3367>:	lea    0x1258(%rax),%rdx
   0x000000000041e164 <+3374>:	lea    -0x268(%rbp),%rax
   0x000000000041e16b <+3381>:	mov    %rax,%rsi
   0x000000000041e16e <+3384>:	mov    %rdx,%rdi
   0x000000000041e171 <+3387>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e176 <+3392>:	mov    -0x278(%rbp),%rax
   0x000000000041e17d <+3399>:	lea    0x1080(%rax),%rdx
   0x000000000041e184 <+3406>:	lea    -0x258(%rbp),%rax
   0x000000000041e18b <+3413>:	mov    %rax,%rsi
   0x000000000041e18e <+3416>:	mov    %rdx,%rdi
   0x000000000041e191 <+3419>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041e196 <+3424>:	movl   $0x4,-0x22c(%rbp)
   0x000000000041e1a0 <+3434>:	mov    -0x278(%rbp),%rax
   0x000000000041e1a7 <+3441>:	lea    0xf40(%rax),%rdx
   0x000000000041e1ae <+3448>:	lea    -0x22c(%rbp),%rax
   0x000000000041e1b5 <+3455>:	mov    %rax,%rsi
   0x000000000041e1b8 <+3458>:	mov    %rdx,%rdi
   0x000000000041e1bb <+3461>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e1c0 <+3466>:	movb   $0x1,-0x226(%rbp)
   0x000000000041e1c7 <+3473>:	mov    -0x278(%rbp),%rax
   0x000000000041e1ce <+3480>:	lea    0x14e8(%rax),%rdx
   0x000000000041e1d5 <+3487>:	lea    -0x226(%rbp),%rax
   0x000000000041e1dc <+3494>:	mov    %rax,%rsi
   0x000000000041e1df <+3497>:	mov    %rdx,%rdi
   0x000000000041e1e2 <+3500>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041e1e7 <+3505>:	mov    -0x278(%rbp),%rax
   0x000000000041e1ee <+3512>:	mov    %rax,%rdi
   0x000000000041e1f1 <+3515>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041e1f6 <+3520>:	movb   $0x0,-0x225(%rbp)
   0x000000000041e1fd <+3527>:	mov    -0x278(%rbp),%rax
   0x000000000041e204 <+3534>:	lea    0x14e8(%rax),%rdx
   0x000000000041e20b <+3541>:	lea    -0x225(%rbp),%rax
   0x000000000041e212 <+3548>:	mov    %rax,%rsi
   0x000000000041e215 <+3551>:	mov    %rdx,%rdi
   0x000000000041e218 <+3554>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041e21d <+3559>:	mov    -0x278(%rbp),%rax
   0x000000000041e224 <+3566>:	mov    %rax,%rdi
   0x000000000041e227 <+3569>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041e22c <+3574>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041e231 <+3579>:	mov    -0x264(%rbp),%ecx
   0x000000000041e237 <+3585>:	mov    -0x258(%rbp),%eax
   0x000000000041e23d <+3591>:	mov    -0x28(%rbp),%esi
   0x000000000041e240 <+3594>:	mov    -0x20(%rbp),%edx
   0x000000000041e243 <+3597>:	mov    %esi,%r8d
   0x000000000041e246 <+3600>:	mov    %eax,%esi
   0x000000000041e248 <+3602>:	mov    $0x42a1ee,%edi
   0x000000000041e24d <+3607>:	mov    $0x0,%eax
   0x000000000041e252 <+3612>:	callq  0x407810 <printf@plt>
   0x000000000041e257 <+3617>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041e25c <+3622>:	mov    %rax,%rbx
   0x000000000041e25f <+3625>:	mov    $0x42a17f,%esi
   0x000000000041e264 <+3630>:	mov    $0x636740,%edi
   0x000000000041e269 <+3635>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041e26e <+3640>:	mov    %rbx,%rsi
   0x000000000041e271 <+3643>:	mov    %rax,%rdi
   0x000000000041e274 <+3646>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041e279 <+3651>:	mov    $0x407a20,%esi
   0x000000000041e27e <+3656>:	mov    %rax,%rdi
   0x000000000041e281 <+3659>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041e286 <+3664>:	mov    $0x429fc8,%esi
   0x000000000041e28b <+3669>:	mov    $0x636740,%edi
   0x000000000041e290 <+3674>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041e295 <+3679>:	mov    $0x407a20,%esi
   0x000000000041e29a <+3684>:	mov    %rax,%rdi
   0x000000000041e29d <+3687>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041e2a2 <+3692>:	mov    -0x278(%rbp),%rax
   0x000000000041e2a9 <+3699>:	lea    0x11c0(%rax),%rdx
   0x000000000041e2b0 <+3706>:	lea    -0x264(%rbp),%rax
   0x000000000041e2b7 <+3713>:	mov    %rax,%rsi
   0x000000000041e2ba <+3716>:	mov    %rdx,%rdi
   0x000000000041e2bd <+3719>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e2c2 <+3724>:	mov    -0x28(%rbp),%eax
   0x000000000041e2c5 <+3727>:	mov    %eax,-0x224(%rbp)
   0x000000000041e2cb <+3733>:	mov    -0x278(%rbp),%rax
   0x000000000041e2d2 <+3740>:	lea    0x1258(%rax),%rdx
   0x000000000041e2d9 <+3747>:	lea    -0x224(%rbp),%rax
   0x000000000041e2e0 <+3754>:	mov    %rax,%rsi
   0x000000000041e2e3 <+3757>:	mov    %rdx,%rdi
   0x000000000041e2e6 <+3760>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e2eb <+3765>:	mov    -0x278(%rbp),%rax
   0x000000000041e2f2 <+3772>:	lea    0x1080(%rax),%rdx
   0x000000000041e2f9 <+3779>:	lea    -0x258(%rbp),%rax
   0x000000000041e300 <+3786>:	mov    %rax,%rsi
   0x000000000041e303 <+3789>:	mov    %rdx,%rdi
   0x000000000041e306 <+3792>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041e30b <+3797>:	movl   $0x4,-0x220(%rbp)
   0x000000000041e315 <+3807>:	mov    -0x278(%rbp),%rax
   0x000000000041e31c <+3814>:	lea    0xf40(%rax),%rdx
   0x000000000041e323 <+3821>:	lea    -0x220(%rbp),%rax
   0x000000000041e32a <+3828>:	mov    %rax,%rsi
   0x000000000041e32d <+3831>:	mov    %rdx,%rdi
   0x000000000041e330 <+3834>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e335 <+3839>:	movb   $0x1,-0x21a(%rbp)
   0x000000000041e33c <+3846>:	mov    -0x278(%rbp),%rax
   0x000000000041e343 <+3853>:	lea    0x14e8(%rax),%rdx
   0x000000000041e34a <+3860>:	lea    -0x21a(%rbp),%rax
   0x000000000041e351 <+3867>:	mov    %rax,%rsi
   0x000000000041e354 <+3870>:	mov    %rdx,%rdi
   0x000000000041e357 <+3873>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041e35c <+3878>:	mov    -0x278(%rbp),%rax
   0x000000000041e363 <+3885>:	mov    %rax,%rdi
   0x000000000041e366 <+3888>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041e36b <+3893>:	movb   $0x0,-0x219(%rbp)
   0x000000000041e372 <+3900>:	mov    -0x278(%rbp),%rax
   0x000000000041e379 <+3907>:	lea    0x14e8(%rax),%rdx
   0x000000000041e380 <+3914>:	lea    -0x219(%rbp),%rax
   0x000000000041e387 <+3921>:	mov    %rax,%rsi
   0x000000000041e38a <+3924>:	mov    %rdx,%rdi
   0x000000000041e38d <+3927>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041e392 <+3932>:	mov    -0x278(%rbp),%rax
   0x000000000041e399 <+3939>:	mov    %rax,%rdi
   0x000000000041e39c <+3942>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041e3a1 <+3947>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041e3a6 <+3952>:	mov    -0x268(%rbp),%edi
   0x000000000041e3ac <+3958>:	mov    -0x264(%rbp),%ecx
   0x000000000041e3b2 <+3964>:	mov    -0x258(%rbp),%eax
   0x000000000041e3b8 <+3970>:	mov    -0x24(%rbp),%esi
   0x000000000041e3bb <+3973>:	mov    -0x20(%rbp),%edx
   0x000000000041e3be <+3976>:	mov    %edi,%r9d
   0x000000000041e3c1 <+3979>:	mov    %esi,%r8d
   0x000000000041e3c4 <+3982>:	mov    %eax,%esi
   0x000000000041e3c6 <+3984>:	mov    $0x42a208,%edi
   0x000000000041e3cb <+3989>:	mov    $0x0,%eax
   0x000000000041e3d0 <+3994>:	callq  0x407810 <printf@plt>
   0x000000000041e3d5 <+3999>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041e3da <+4004>:	mov    %rax,%rbx
   0x000000000041e3dd <+4007>:	mov    $0x42a17f,%esi
   0x000000000041e3e2 <+4012>:	mov    $0x636740,%edi
   0x000000000041e3e7 <+4017>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041e3ec <+4022>:	mov    %rbx,%rsi
   0x000000000041e3ef <+4025>:	mov    %rax,%rdi
   0x000000000041e3f2 <+4028>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041e3f7 <+4033>:	mov    $0x407a20,%esi
   0x000000000041e3fc <+4038>:	mov    %rax,%rdi
   0x000000000041e3ff <+4041>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041e404 <+4046>:	mov    $0x429fc8,%esi
   0x000000000041e409 <+4051>:	mov    $0x636740,%edi
   0x000000000041e40e <+4056>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041e413 <+4061>:	mov    $0x407a20,%esi
   0x000000000041e418 <+4066>:	mov    %rax,%rdi
   0x000000000041e41b <+4069>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041e420 <+4074>:	mov    -0x278(%rbp),%rax
   0x000000000041e427 <+4081>:	lea    0x11c0(%rax),%rdx
   0x000000000041e42e <+4088>:	lea    -0x264(%rbp),%rax
   0x000000000041e435 <+4095>:	mov    %rax,%rsi
   0x000000000041e438 <+4098>:	mov    %rdx,%rdi
   0x000000000041e43b <+4101>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e440 <+4106>:	mov    -0x278(%rbp),%rax
   0x000000000041e447 <+4113>:	lea    0x1258(%rax),%rdx
   0x000000000041e44e <+4120>:	lea    -0x268(%rbp),%rax
   0x000000000041e455 <+4127>:	mov    %rax,%rsi
   0x000000000041e458 <+4130>:	mov    %rdx,%rdi
   0x000000000041e45b <+4133>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e460 <+4138>:	mov    -0x278(%rbp),%rax
   0x000000000041e467 <+4145>:	lea    0x1080(%rax),%rdx
   0x000000000041e46e <+4152>:	lea    -0x258(%rbp),%rax
   0x000000000041e475 <+4159>:	mov    %rax,%rsi
   0x000000000041e478 <+4162>:	mov    %rdx,%rdi
   0x000000000041e47b <+4165>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041e480 <+4170>:	movl   $0x2,-0x218(%rbp)
   0x000000000041e48a <+4180>:	mov    -0x278(%rbp),%rax
   0x000000000041e491 <+4187>:	lea    0xf40(%rax),%rdx
   0x000000000041e498 <+4194>:	lea    -0x218(%rbp),%rax
   0x000000000041e49f <+4201>:	mov    %rax,%rsi
   0x000000000041e4a2 <+4204>:	mov    %rdx,%rdi
   0x000000000041e4a5 <+4207>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e4aa <+4212>:	movb   $0x1,-0x212(%rbp)
   0x000000000041e4b1 <+4219>:	mov    -0x278(%rbp),%rax
   0x000000000041e4b8 <+4226>:	lea    0x14e8(%rax),%rdx
   0x000000000041e4bf <+4233>:	lea    -0x212(%rbp),%rax
   0x000000000041e4c6 <+4240>:	mov    %rax,%rsi
   0x000000000041e4c9 <+4243>:	mov    %rdx,%rdi
   0x000000000041e4cc <+4246>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041e4d1 <+4251>:	mov    -0x278(%rbp),%rax
   0x000000000041e4d8 <+4258>:	mov    %rax,%rdi
   0x000000000041e4db <+4261>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041e4e0 <+4266>:	movb   $0x0,-0x211(%rbp)
   0x000000000041e4e7 <+4273>:	mov    -0x278(%rbp),%rax
   0x000000000041e4ee <+4280>:	lea    0x14e8(%rax),%rdx
   0x000000000041e4f5 <+4287>:	lea    -0x211(%rbp),%rax
   0x000000000041e4fc <+4294>:	mov    %rax,%rsi
   0x000000000041e4ff <+4297>:	mov    %rdx,%rdi
   0x000000000041e502 <+4300>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041e507 <+4305>:	mov    -0x278(%rbp),%rax
   0x000000000041e50e <+4312>:	mov    %rax,%rdi
   0x000000000041e511 <+4315>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041e516 <+4320>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041e51b <+4325>:	mov    -0x268(%rbp),%edi
   0x000000000041e521 <+4331>:	mov    -0x264(%rbp),%ecx
   0x000000000041e527 <+4337>:	mov    -0x258(%rbp),%eax
   0x000000000041e52d <+4343>:	mov    -0x24(%rbp),%esi
   0x000000000041e530 <+4346>:	mov    -0x20(%rbp),%edx
   0x000000000041e533 <+4349>:	mov    %edi,%r9d
   0x000000000041e536 <+4352>:	mov    %esi,%r8d
   0x000000000041e539 <+4355>:	mov    %eax,%esi
   0x000000000041e53b <+4357>:	mov    $0x42a227,%edi
   0x000000000041e540 <+4362>:	mov    $0x0,%eax
   0x000000000041e545 <+4367>:	callq  0x407810 <printf@plt>
   0x000000000041e54a <+4372>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041e54f <+4377>:	mov    %rax,%rbx
   0x000000000041e552 <+4380>:	mov    $0x42a17f,%esi
   0x000000000041e557 <+4385>:	mov    $0x636740,%edi
   0x000000000041e55c <+4390>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041e561 <+4395>:	mov    %rbx,%rsi
   0x000000000041e564 <+4398>:	mov    %rax,%rdi
   0x000000000041e567 <+4401>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041e56c <+4406>:	mov    $0x407a20,%esi
   0x000000000041e571 <+4411>:	mov    %rax,%rdi
   0x000000000041e574 <+4414>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041e579 <+4419>:	mov    $0x429fc8,%esi
   0x000000000041e57e <+4424>:	mov    $0x636740,%edi
   0x000000000041e583 <+4429>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041e588 <+4434>:	mov    $0x407a20,%esi
   0x000000000041e58d <+4439>:	mov    %rax,%rdi
   0x000000000041e590 <+4442>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041e595 <+4447>:	mov    -0x278(%rbp),%rax
   0x000000000041e59c <+4454>:	lea    0x11c0(%rax),%rdx
   0x000000000041e5a3 <+4461>:	lea    -0x264(%rbp),%rax
   0x000000000041e5aa <+4468>:	mov    %rax,%rsi
   0x000000000041e5ad <+4471>:	mov    %rdx,%rdi
   0x000000000041e5b0 <+4474>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e5b5 <+4479>:	mov    -0x278(%rbp),%rax
   0x000000000041e5bc <+4486>:	lea    0x1258(%rax),%rdx
   0x000000000041e5c3 <+4493>:	lea    -0x268(%rbp),%rax
   0x000000000041e5ca <+4500>:	mov    %rax,%rsi
   0x000000000041e5cd <+4503>:	mov    %rdx,%rdi
   0x000000000041e5d0 <+4506>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e5d5 <+4511>:	mov    -0x278(%rbp),%rax
   0x000000000041e5dc <+4518>:	lea    0x1080(%rax),%rdx
   0x000000000041e5e3 <+4525>:	lea    -0x258(%rbp),%rax
   0x000000000041e5ea <+4532>:	mov    %rax,%rsi
   0x000000000041e5ed <+4535>:	mov    %rdx,%rdi
   0x000000000041e5f0 <+4538>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041e5f5 <+4543>:	movl   $0x5,-0x210(%rbp)
   0x000000000041e5ff <+4553>:	mov    -0x278(%rbp),%rax
   0x000000000041e606 <+4560>:	lea    0xf40(%rax),%rdx
   0x000000000041e60d <+4567>:	lea    -0x210(%rbp),%rax
   0x000000000041e614 <+4574>:	mov    %rax,%rsi
   0x000000000041e617 <+4577>:	mov    %rdx,%rdi
   0x000000000041e61a <+4580>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e61f <+4585>:	movb   $0x1,-0x20a(%rbp)
   0x000000000041e626 <+4592>:	mov    -0x278(%rbp),%rax
   0x000000000041e62d <+4599>:	lea    0x14e8(%rax),%rdx
   0x000000000041e634 <+4606>:	lea    -0x20a(%rbp),%rax
   0x000000000041e63b <+4613>:	mov    %rax,%rsi
   0x000000000041e63e <+4616>:	mov    %rdx,%rdi
   0x000000000041e641 <+4619>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041e646 <+4624>:	mov    -0x278(%rbp),%rax
   0x000000000041e64d <+4631>:	mov    %rax,%rdi
   0x000000000041e650 <+4634>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041e655 <+4639>:	movb   $0x0,-0x209(%rbp)
   0x000000000041e65c <+4646>:	mov    -0x278(%rbp),%rax
   0x000000000041e663 <+4653>:	lea    0x14e8(%rax),%rdx
   0x000000000041e66a <+4660>:	lea    -0x209(%rbp),%rax
   0x000000000041e671 <+4667>:	mov    %rax,%rsi
   0x000000000041e674 <+4670>:	mov    %rdx,%rdi
   0x000000000041e677 <+4673>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041e67c <+4678>:	mov    -0x278(%rbp),%rax
   0x000000000041e683 <+4685>:	mov    %rax,%rdi
   0x000000000041e686 <+4688>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041e68b <+4693>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041e690 <+4698>:	mov    -0x268(%rbp),%edi
   0x000000000041e696 <+4704>:	mov    -0x264(%rbp),%ecx
   0x000000000041e69c <+4710>:	mov    -0x258(%rbp),%eax
   0x000000000041e6a2 <+4716>:	mov    -0x24(%rbp),%esi
   0x000000000041e6a5 <+4719>:	mov    -0x20(%rbp),%edx
   0x000000000041e6a8 <+4722>:	mov    %edi,%r9d
   0x000000000041e6ab <+4725>:	mov    %esi,%r8d
   0x000000000041e6ae <+4728>:	mov    %eax,%esi
   0x000000000041e6b0 <+4730>:	mov    $0x42a244,%edi
   0x000000000041e6b5 <+4735>:	mov    $0x0,%eax
   0x000000000041e6ba <+4740>:	callq  0x407810 <printf@plt>
   0x000000000041e6bf <+4745>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041e6c4 <+4750>:	mov    %rax,%rbx
   0x000000000041e6c7 <+4753>:	mov    $0x42a17f,%esi
   0x000000000041e6cc <+4758>:	mov    $0x636740,%edi
   0x000000000041e6d1 <+4763>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041e6d6 <+4768>:	mov    %rbx,%rsi
   0x000000000041e6d9 <+4771>:	mov    %rax,%rdi
   0x000000000041e6dc <+4774>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041e6e1 <+4779>:	mov    $0x407a20,%esi
   0x000000000041e6e6 <+4784>:	mov    %rax,%rdi
   0x000000000041e6e9 <+4787>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041e6ee <+4792>:	mov    $0x429fc8,%esi
   0x000000000041e6f3 <+4797>:	mov    $0x636740,%edi
   0x000000000041e6f8 <+4802>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041e6fd <+4807>:	mov    $0x407a20,%esi
   0x000000000041e702 <+4812>:	mov    %rax,%rdi
   0x000000000041e705 <+4815>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041e70a <+4820>:	mov    -0x278(%rbp),%rax
   0x000000000041e711 <+4827>:	lea    0x11c0(%rax),%rdx
   0x000000000041e718 <+4834>:	lea    -0x264(%rbp),%rax
   0x000000000041e71f <+4841>:	mov    %rax,%rsi
   0x000000000041e722 <+4844>:	mov    %rdx,%rdi
   0x000000000041e725 <+4847>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e72a <+4852>:	mov    -0x278(%rbp),%rax
   0x000000000041e731 <+4859>:	lea    0x1258(%rax),%rdx
   0x000000000041e738 <+4866>:	lea    -0x268(%rbp),%rax
   0x000000000041e73f <+4873>:	mov    %rax,%rsi
   0x000000000041e742 <+4876>:	mov    %rdx,%rdi
   0x000000000041e745 <+4879>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e74a <+4884>:	mov    -0x278(%rbp),%rax
   0x000000000041e751 <+4891>:	lea    0x1080(%rax),%rdx
   0x000000000041e758 <+4898>:	lea    -0x258(%rbp),%rax
   0x000000000041e75f <+4905>:	mov    %rax,%rsi
   0x000000000041e762 <+4908>:	mov    %rdx,%rdi
   0x000000000041e765 <+4911>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041e76a <+4916>:	movl   $0x6,-0x208(%rbp)
   0x000000000041e774 <+4926>:	mov    -0x278(%rbp),%rax
   0x000000000041e77b <+4933>:	lea    0xf40(%rax),%rdx
   0x000000000041e782 <+4940>:	lea    -0x208(%rbp),%rax
   0x000000000041e789 <+4947>:	mov    %rax,%rsi
   0x000000000041e78c <+4950>:	mov    %rdx,%rdi
   0x000000000041e78f <+4953>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e794 <+4958>:	movb   $0x1,-0x202(%rbp)
   0x000000000041e79b <+4965>:	mov    -0x278(%rbp),%rax
   0x000000000041e7a2 <+4972>:	lea    0x14e8(%rax),%rdx
   0x000000000041e7a9 <+4979>:	lea    -0x202(%rbp),%rax
   0x000000000041e7b0 <+4986>:	mov    %rax,%rsi
   0x000000000041e7b3 <+4989>:	mov    %rdx,%rdi
   0x000000000041e7b6 <+4992>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041e7bb <+4997>:	mov    -0x278(%rbp),%rax
   0x000000000041e7c2 <+5004>:	mov    %rax,%rdi
   0x000000000041e7c5 <+5007>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041e7ca <+5012>:	movb   $0x0,-0x201(%rbp)
   0x000000000041e7d1 <+5019>:	mov    -0x278(%rbp),%rax
   0x000000000041e7d8 <+5026>:	lea    0x14e8(%rax),%rdx
   0x000000000041e7df <+5033>:	lea    -0x201(%rbp),%rax
   0x000000000041e7e6 <+5040>:	mov    %rax,%rsi
   0x000000000041e7e9 <+5043>:	mov    %rdx,%rdi
   0x000000000041e7ec <+5046>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041e7f1 <+5051>:	mov    -0x278(%rbp),%rax
   0x000000000041e7f8 <+5058>:	mov    %rax,%rdi
   0x000000000041e7fb <+5061>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041e800 <+5066>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041e805 <+5071>:	mov    -0x268(%rbp),%edi
   0x000000000041e80b <+5077>:	mov    -0x264(%rbp),%ecx
   0x000000000041e811 <+5083>:	mov    -0x258(%rbp),%eax
   0x000000000041e817 <+5089>:	mov    -0x24(%rbp),%esi
   0x000000000041e81a <+5092>:	mov    -0x20(%rbp),%edx
   0x000000000041e81d <+5095>:	mov    %edi,%r9d
   0x000000000041e820 <+5098>:	mov    %esi,%r8d
   0x000000000041e823 <+5101>:	mov    %eax,%esi
   0x000000000041e825 <+5103>:	mov    $0x42a268,%edi
   0x000000000041e82a <+5108>:	mov    $0x0,%eax
   0x000000000041e82f <+5113>:	callq  0x407810 <printf@plt>
   0x000000000041e834 <+5118>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041e839 <+5123>:	mov    %rax,%rbx
   0x000000000041e83c <+5126>:	mov    $0x42a17f,%esi
   0x000000000041e841 <+5131>:	mov    $0x636740,%edi
   0x000000000041e846 <+5136>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041e84b <+5141>:	mov    %rbx,%rsi
   0x000000000041e84e <+5144>:	mov    %rax,%rdi
   0x000000000041e851 <+5147>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041e856 <+5152>:	mov    $0x407a20,%esi
   0x000000000041e85b <+5157>:	mov    %rax,%rdi
   0x000000000041e85e <+5160>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041e863 <+5165>:	mov    $0x429fc8,%esi
   0x000000000041e868 <+5170>:	mov    $0x636740,%edi
   0x000000000041e86d <+5175>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041e872 <+5180>:	mov    $0x407a20,%esi
   0x000000000041e877 <+5185>:	mov    %rax,%rdi
   0x000000000041e87a <+5188>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041e87f <+5193>:	mov    -0x278(%rbp),%rax
   0x000000000041e886 <+5200>:	lea    0x11c0(%rax),%rdx
   0x000000000041e88d <+5207>:	lea    -0x264(%rbp),%rax
   0x000000000041e894 <+5214>:	mov    %rax,%rsi
   0x000000000041e897 <+5217>:	mov    %rdx,%rdi
   0x000000000041e89a <+5220>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e89f <+5225>:	mov    -0x278(%rbp),%rax
   0x000000000041e8a6 <+5232>:	lea    0x1258(%rax),%rdx
   0x000000000041e8ad <+5239>:	lea    -0x268(%rbp),%rax
   0x000000000041e8b4 <+5246>:	mov    %rax,%rsi
   0x000000000041e8b7 <+5249>:	mov    %rdx,%rdi
   0x000000000041e8ba <+5252>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e8bf <+5257>:	mov    -0x278(%rbp),%rax
   0x000000000041e8c6 <+5264>:	lea    0x1080(%rax),%rdx
   0x000000000041e8cd <+5271>:	lea    -0x258(%rbp),%rax
   0x000000000041e8d4 <+5278>:	mov    %rax,%rsi
   0x000000000041e8d7 <+5281>:	mov    %rdx,%rdi
   0x000000000041e8da <+5284>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041e8df <+5289>:	movl   $0x7,-0x200(%rbp)
   0x000000000041e8e9 <+5299>:	mov    -0x278(%rbp),%rax
   0x000000000041e8f0 <+5306>:	lea    0xf40(%rax),%rdx
   0x000000000041e8f7 <+5313>:	lea    -0x200(%rbp),%rax
   0x000000000041e8fe <+5320>:	mov    %rax,%rsi
   0x000000000041e901 <+5323>:	mov    %rdx,%rdi
   0x000000000041e904 <+5326>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041e909 <+5331>:	movb   $0x1,-0x1fa(%rbp)
   0x000000000041e910 <+5338>:	mov    -0x278(%rbp),%rax
   0x000000000041e917 <+5345>:	lea    0x14e8(%rax),%rdx
   0x000000000041e91e <+5352>:	lea    -0x1fa(%rbp),%rax
   0x000000000041e925 <+5359>:	mov    %rax,%rsi
   0x000000000041e928 <+5362>:	mov    %rdx,%rdi
   0x000000000041e92b <+5365>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041e930 <+5370>:	mov    -0x278(%rbp),%rax
   0x000000000041e937 <+5377>:	mov    %rax,%rdi
   0x000000000041e93a <+5380>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041e93f <+5385>:	movb   $0x0,-0x1f9(%rbp)
   0x000000000041e946 <+5392>:	mov    -0x278(%rbp),%rax
   0x000000000041e94d <+5399>:	lea    0x14e8(%rax),%rdx
   0x000000000041e954 <+5406>:	lea    -0x1f9(%rbp),%rax
   0x000000000041e95b <+5413>:	mov    %rax,%rsi
   0x000000000041e95e <+5416>:	mov    %rdx,%rdi
   0x000000000041e961 <+5419>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041e966 <+5424>:	mov    -0x278(%rbp),%rax
   0x000000000041e96d <+5431>:	mov    %rax,%rdi
   0x000000000041e970 <+5434>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041e975 <+5439>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041e97a <+5444>:	mov    -0x268(%rbp),%edi
   0x000000000041e980 <+5450>:	mov    -0x264(%rbp),%ecx
   0x000000000041e986 <+5456>:	mov    -0x258(%rbp),%eax
   0x000000000041e98c <+5462>:	mov    -0x24(%rbp),%esi
   0x000000000041e98f <+5465>:	mov    -0x20(%rbp),%edx
   0x000000000041e992 <+5468>:	mov    %edi,%r9d
   0x000000000041e995 <+5471>:	mov    %esi,%r8d
   0x000000000041e998 <+5474>:	mov    %eax,%esi
   0x000000000041e99a <+5476>:	mov    $0x42a290,%edi
   0x000000000041e99f <+5481>:	mov    $0x0,%eax
   0x000000000041e9a4 <+5486>:	callq  0x407810 <printf@plt>
   0x000000000041e9a9 <+5491>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041e9ae <+5496>:	mov    %rax,%rbx
   0x000000000041e9b1 <+5499>:	mov    $0x42a17f,%esi
   0x000000000041e9b6 <+5504>:	mov    $0x636740,%edi
   0x000000000041e9bb <+5509>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041e9c0 <+5514>:	mov    %rbx,%rsi
   0x000000000041e9c3 <+5517>:	mov    %rax,%rdi
   0x000000000041e9c6 <+5520>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041e9cb <+5525>:	mov    $0x407a20,%esi
   0x000000000041e9d0 <+5530>:	mov    %rax,%rdi
   0x000000000041e9d3 <+5533>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041e9d8 <+5538>:	mov    $0x429fc8,%esi
   0x000000000041e9dd <+5543>:	mov    $0x636740,%edi
   0x000000000041e9e2 <+5548>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041e9e7 <+5553>:	mov    $0x407a20,%esi
   0x000000000041e9ec <+5558>:	mov    %rax,%rdi
   0x000000000041e9ef <+5561>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041e9f4 <+5566>:	mov    -0x278(%rbp),%rax
   0x000000000041e9fb <+5573>:	lea    0x11c0(%rax),%rdx
   0x000000000041ea02 <+5580>:	lea    -0x264(%rbp),%rax
   0x000000000041ea09 <+5587>:	mov    %rax,%rsi
   0x000000000041ea0c <+5590>:	mov    %rdx,%rdi
   0x000000000041ea0f <+5593>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041ea14 <+5598>:	mov    -0x278(%rbp),%rax
   0x000000000041ea1b <+5605>:	lea    0x1258(%rax),%rdx
   0x000000000041ea22 <+5612>:	lea    -0x268(%rbp),%rax
   0x000000000041ea29 <+5619>:	mov    %rax,%rsi
   0x000000000041ea2c <+5622>:	mov    %rdx,%rdi
   0x000000000041ea2f <+5625>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041ea34 <+5630>:	mov    -0x278(%rbp),%rax
   0x000000000041ea3b <+5637>:	lea    0x1080(%rax),%rdx
   0x000000000041ea42 <+5644>:	lea    -0x258(%rbp),%rax
   0x000000000041ea49 <+5651>:	mov    %rax,%rsi
   0x000000000041ea4c <+5654>:	mov    %rdx,%rdi
   0x000000000041ea4f <+5657>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041ea54 <+5662>:	movl   $0x8,-0x1f8(%rbp)
   0x000000000041ea5e <+5672>:	mov    -0x278(%rbp),%rax
   0x000000000041ea65 <+5679>:	lea    0xf40(%rax),%rdx
   0x000000000041ea6c <+5686>:	lea    -0x1f8(%rbp),%rax
   0x000000000041ea73 <+5693>:	mov    %rax,%rsi
   0x000000000041ea76 <+5696>:	mov    %rdx,%rdi
   0x000000000041ea79 <+5699>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041ea7e <+5704>:	movb   $0x1,-0x1f2(%rbp)
   0x000000000041ea85 <+5711>:	mov    -0x278(%rbp),%rax
   0x000000000041ea8c <+5718>:	lea    0x14e8(%rax),%rdx
   0x000000000041ea93 <+5725>:	lea    -0x1f2(%rbp),%rax
   0x000000000041ea9a <+5732>:	mov    %rax,%rsi
   0x000000000041ea9d <+5735>:	mov    %rdx,%rdi
   0x000000000041eaa0 <+5738>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041eaa5 <+5743>:	mov    -0x278(%rbp),%rax
   0x000000000041eaac <+5750>:	mov    %rax,%rdi
   0x000000000041eaaf <+5753>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041eab4 <+5758>:	movb   $0x0,-0x1f1(%rbp)
   0x000000000041eabb <+5765>:	mov    -0x278(%rbp),%rax
   0x000000000041eac2 <+5772>:	lea    0x14e8(%rax),%rdx
   0x000000000041eac9 <+5779>:	lea    -0x1f1(%rbp),%rax
   0x000000000041ead0 <+5786>:	mov    %rax,%rsi
   0x000000000041ead3 <+5789>:	mov    %rdx,%rdi
   0x000000000041ead6 <+5792>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041eadb <+5797>:	mov    -0x278(%rbp),%rax
   0x000000000041eae2 <+5804>:	mov    %rax,%rdi
   0x000000000041eae5 <+5807>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041eaea <+5812>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041eaef <+5817>:	mov    -0x268(%rbp),%edi
   0x000000000041eaf5 <+5823>:	mov    -0x264(%rbp),%ecx
   0x000000000041eafb <+5829>:	mov    -0x258(%rbp),%eax
   0x000000000041eb01 <+5835>:	mov    -0x24(%rbp),%esi
   0x000000000041eb04 <+5838>:	mov    -0x20(%rbp),%edx
   0x000000000041eb07 <+5841>:	mov    %edi,%r9d
   0x000000000041eb0a <+5844>:	mov    %esi,%r8d
   0x000000000041eb0d <+5847>:	mov    %eax,%esi
   0x000000000041eb0f <+5849>:	mov    $0x42a2b8,%edi
   0x000000000041eb14 <+5854>:	mov    $0x0,%eax
   0x000000000041eb19 <+5859>:	callq  0x407810 <printf@plt>
   0x000000000041eb1e <+5864>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041eb23 <+5869>:	mov    %rax,%rbx
   0x000000000041eb26 <+5872>:	mov    $0x42a17f,%esi
   0x000000000041eb2b <+5877>:	mov    $0x636740,%edi
   0x000000000041eb30 <+5882>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041eb35 <+5887>:	mov    %rbx,%rsi
   0x000000000041eb38 <+5890>:	mov    %rax,%rdi
   0x000000000041eb3b <+5893>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041eb40 <+5898>:	mov    $0x407a20,%esi
   0x000000000041eb45 <+5903>:	mov    %rax,%rdi
   0x000000000041eb48 <+5906>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041eb4d <+5911>:	mov    $0x429fc8,%esi
   0x000000000041eb52 <+5916>:	mov    $0x636740,%edi
   0x000000000041eb57 <+5921>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041eb5c <+5926>:	mov    $0x407a20,%esi
   0x000000000041eb61 <+5931>:	mov    %rax,%rdi
   0x000000000041eb64 <+5934>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041eb69 <+5939>:	mov    -0x278(%rbp),%rax
   0x000000000041eb70 <+5946>:	lea    0x11c0(%rax),%rdx
   0x000000000041eb77 <+5953>:	lea    -0x264(%rbp),%rax
   0x000000000041eb7e <+5960>:	mov    %rax,%rsi
   0x000000000041eb81 <+5963>:	mov    %rdx,%rdi
   0x000000000041eb84 <+5966>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041eb89 <+5971>:	mov    -0x278(%rbp),%rax
   0x000000000041eb90 <+5978>:	lea    0x1258(%rax),%rdx
   0x000000000041eb97 <+5985>:	lea    -0x268(%rbp),%rax
   0x000000000041eb9e <+5992>:	mov    %rax,%rsi
   0x000000000041eba1 <+5995>:	mov    %rdx,%rdi
   0x000000000041eba4 <+5998>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041eba9 <+6003>:	mov    -0x278(%rbp),%rax
   0x000000000041ebb0 <+6010>:	lea    0x1080(%rax),%rdx
   0x000000000041ebb7 <+6017>:	lea    -0x258(%rbp),%rax
   0x000000000041ebbe <+6024>:	mov    %rax,%rsi
   0x000000000041ebc1 <+6027>:	mov    %rdx,%rdi
   0x000000000041ebc4 <+6030>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041ebc9 <+6035>:	movl   $0x9,-0x1f0(%rbp)
   0x000000000041ebd3 <+6045>:	mov    -0x278(%rbp),%rax
   0x000000000041ebda <+6052>:	lea    0xf40(%rax),%rdx
   0x000000000041ebe1 <+6059>:	lea    -0x1f0(%rbp),%rax
   0x000000000041ebe8 <+6066>:	mov    %rax,%rsi
   0x000000000041ebeb <+6069>:	mov    %rdx,%rdi
   0x000000000041ebee <+6072>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041ebf3 <+6077>:	movb   $0x1,-0x1ea(%rbp)
   0x000000000041ebfa <+6084>:	mov    -0x278(%rbp),%rax
   0x000000000041ec01 <+6091>:	lea    0x14e8(%rax),%rdx
   0x000000000041ec08 <+6098>:	lea    -0x1ea(%rbp),%rax
   0x000000000041ec0f <+6105>:	mov    %rax,%rsi
   0x000000000041ec12 <+6108>:	mov    %rdx,%rdi
   0x000000000041ec15 <+6111>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041ec1a <+6116>:	mov    -0x278(%rbp),%rax
   0x000000000041ec21 <+6123>:	mov    %rax,%rdi
   0x000000000041ec24 <+6126>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041ec29 <+6131>:	movb   $0x0,-0x1e9(%rbp)
   0x000000000041ec30 <+6138>:	mov    -0x278(%rbp),%rax
   0x000000000041ec37 <+6145>:	lea    0x14e8(%rax),%rdx
   0x000000000041ec3e <+6152>:	lea    -0x1e9(%rbp),%rax
   0x000000000041ec45 <+6159>:	mov    %rax,%rsi
   0x000000000041ec48 <+6162>:	mov    %rdx,%rdi
   0x000000000041ec4b <+6165>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041ec50 <+6170>:	mov    -0x278(%rbp),%rax
   0x000000000041ec57 <+6177>:	mov    %rax,%rdi
   0x000000000041ec5a <+6180>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041ec5f <+6185>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041ec64 <+6190>:	mov    -0x268(%rbp),%edi
   0x000000000041ec6a <+6196>:	mov    -0x264(%rbp),%ecx
   0x000000000041ec70 <+6202>:	mov    -0x258(%rbp),%eax
   0x000000000041ec76 <+6208>:	mov    -0x24(%rbp),%esi
   0x000000000041ec79 <+6211>:	mov    -0x20(%rbp),%edx
   0x000000000041ec7c <+6214>:	mov    %edi,%r9d
   0x000000000041ec7f <+6217>:	mov    %esi,%r8d
   0x000000000041ec82 <+6220>:	mov    %eax,%esi
   0x000000000041ec84 <+6222>:	mov    $0x42a2d8,%edi
   0x000000000041ec89 <+6227>:	mov    $0x0,%eax
   0x000000000041ec8e <+6232>:	callq  0x407810 <printf@plt>
   0x000000000041ec93 <+6237>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041ec98 <+6242>:	mov    %rax,%rbx
   0x000000000041ec9b <+6245>:	mov    $0x42a17f,%esi
   0x000000000041eca0 <+6250>:	mov    $0x636740,%edi
   0x000000000041eca5 <+6255>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041ecaa <+6260>:	mov    %rbx,%rsi
   0x000000000041ecad <+6263>:	mov    %rax,%rdi
   0x000000000041ecb0 <+6266>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041ecb5 <+6271>:	mov    $0x407a20,%esi
   0x000000000041ecba <+6276>:	mov    %rax,%rdi
   0x000000000041ecbd <+6279>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041ecc2 <+6284>:	mov    $0x429fc8,%esi
   0x000000000041ecc7 <+6289>:	mov    $0x636740,%edi
   0x000000000041eccc <+6294>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041ecd1 <+6299>:	mov    $0x407a20,%esi
   0x000000000041ecd6 <+6304>:	mov    %rax,%rdi
   0x000000000041ecd9 <+6307>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041ecde <+6312>:	mov    -0x278(%rbp),%rax
   0x000000000041ece5 <+6319>:	lea    0x11c0(%rax),%rdx
   0x000000000041ecec <+6326>:	lea    -0x264(%rbp),%rax
   0x000000000041ecf3 <+6333>:	mov    %rax,%rsi
   0x000000000041ecf6 <+6336>:	mov    %rdx,%rdi
   0x000000000041ecf9 <+6339>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041ecfe <+6344>:	mov    -0x278(%rbp),%rax
   0x000000000041ed05 <+6351>:	lea    0x1258(%rax),%rdx
   0x000000000041ed0c <+6358>:	lea    -0x268(%rbp),%rax
   0x000000000041ed13 <+6365>:	mov    %rax,%rsi
   0x000000000041ed16 <+6368>:	mov    %rdx,%rdi
   0x000000000041ed19 <+6371>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041ed1e <+6376>:	mov    -0x278(%rbp),%rax
   0x000000000041ed25 <+6383>:	lea    0x1080(%rax),%rdx
   0x000000000041ed2c <+6390>:	lea    -0x258(%rbp),%rax
   0x000000000041ed33 <+6397>:	mov    %rax,%rsi
   0x000000000041ed36 <+6400>:	mov    %rdx,%rdi
   0x000000000041ed39 <+6403>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041ed3e <+6408>:	movl   $0xa,-0x1e8(%rbp)
   0x000000000041ed48 <+6418>:	mov    -0x278(%rbp),%rax
   0x000000000041ed4f <+6425>:	lea    0xf40(%rax),%rdx
   0x000000000041ed56 <+6432>:	lea    -0x1e8(%rbp),%rax
   0x000000000041ed5d <+6439>:	mov    %rax,%rsi
   0x000000000041ed60 <+6442>:	mov    %rdx,%rdi
   0x000000000041ed63 <+6445>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041ed68 <+6450>:	movb   $0x1,-0x1e2(%rbp)
   0x000000000041ed6f <+6457>:	mov    -0x278(%rbp),%rax
   0x000000000041ed76 <+6464>:	lea    0x14e8(%rax),%rdx
   0x000000000041ed7d <+6471>:	lea    -0x1e2(%rbp),%rax
   0x000000000041ed84 <+6478>:	mov    %rax,%rsi
   0x000000000041ed87 <+6481>:	mov    %rdx,%rdi
   0x000000000041ed8a <+6484>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041ed8f <+6489>:	mov    -0x278(%rbp),%rax
   0x000000000041ed96 <+6496>:	mov    %rax,%rdi
   0x000000000041ed99 <+6499>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041ed9e <+6504>:	movb   $0x0,-0x1e1(%rbp)
   0x000000000041eda5 <+6511>:	mov    -0x278(%rbp),%rax
   0x000000000041edac <+6518>:	lea    0x14e8(%rax),%rdx
   0x000000000041edb3 <+6525>:	lea    -0x1e1(%rbp),%rax
   0x000000000041edba <+6532>:	mov    %rax,%rsi
   0x000000000041edbd <+6535>:	mov    %rdx,%rdi
   0x000000000041edc0 <+6538>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041edc5 <+6543>:	mov    -0x278(%rbp),%rax
   0x000000000041edcc <+6550>:	mov    %rax,%rdi
   0x000000000041edcf <+6553>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041edd4 <+6558>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041edd9 <+6563>:	mov    -0x264(%rbp),%ecx
   0x000000000041eddf <+6569>:	mov    -0x258(%rbp),%eax
   0x000000000041ede5 <+6575>:	mov    -0x20(%rbp),%edx
   0x000000000041ede8 <+6578>:	mov    %eax,%esi
   0x000000000041edea <+6580>:	mov    $0x42a2f9,%edi
   0x000000000041edef <+6585>:	mov    $0x0,%eax
   0x000000000041edf4 <+6590>:	callq  0x407810 <printf@plt>
   0x000000000041edf9 <+6595>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041edfe <+6600>:	mov    %rax,%rbx
   0x000000000041ee01 <+6603>:	mov    $0x42a17f,%esi
   0x000000000041ee06 <+6608>:	mov    $0x636740,%edi
   0x000000000041ee0b <+6613>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041ee10 <+6618>:	mov    %rbx,%rsi
   0x000000000041ee13 <+6621>:	mov    %rax,%rdi
   0x000000000041ee16 <+6624>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041ee1b <+6629>:	mov    $0x407a20,%esi
   0x000000000041ee20 <+6634>:	mov    %rax,%rdi
   0x000000000041ee23 <+6637>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041ee28 <+6642>:	mov    $0x429fc8,%esi
   0x000000000041ee2d <+6647>:	mov    $0x636740,%edi
   0x000000000041ee32 <+6652>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041ee37 <+6657>:	mov    $0x407a20,%esi
   0x000000000041ee3c <+6662>:	mov    %rax,%rdi
   0x000000000041ee3f <+6665>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041ee44 <+6670>:	mov    -0x278(%rbp),%rax
   0x000000000041ee4b <+6677>:	lea    0x11c0(%rax),%rdx
   0x000000000041ee52 <+6684>:	lea    -0x264(%rbp),%rax
   0x000000000041ee59 <+6691>:	mov    %rax,%rsi
   0x000000000041ee5c <+6694>:	mov    %rdx,%rdi
   0x000000000041ee5f <+6697>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041ee64 <+6702>:	movl   $0x0,-0x1e0(%rbp)
   0x000000000041ee6e <+6712>:	mov    -0x278(%rbp),%rax
   0x000000000041ee75 <+6719>:	lea    0x1258(%rax),%rdx
   0x000000000041ee7c <+6726>:	lea    -0x1e0(%rbp),%rax
   0x000000000041ee83 <+6733>:	mov    %rax,%rsi
   0x000000000041ee86 <+6736>:	mov    %rdx,%rdi
   0x000000000041ee89 <+6739>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041ee8e <+6744>:	mov    -0x278(%rbp),%rax
   0x000000000041ee95 <+6751>:	lea    0x1080(%rax),%rdx
   0x000000000041ee9c <+6758>:	lea    -0x258(%rbp),%rax
   0x000000000041eea3 <+6765>:	mov    %rax,%rsi
   0x000000000041eea6 <+6768>:	mov    %rdx,%rdi
   0x000000000041eea9 <+6771>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041eeae <+6776>:	movl   $0xb,-0x1dc(%rbp)
   0x000000000041eeb8 <+6786>:	mov    -0x278(%rbp),%rax
   0x000000000041eebf <+6793>:	lea    0xf40(%rax),%rdx
   0x000000000041eec6 <+6800>:	lea    -0x1dc(%rbp),%rax
   0x000000000041eecd <+6807>:	mov    %rax,%rsi
   0x000000000041eed0 <+6810>:	mov    %rdx,%rdi
   0x000000000041eed3 <+6813>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041eed8 <+6818>:	movb   $0x1,-0x1d6(%rbp)
   0x000000000041eedf <+6825>:	mov    -0x278(%rbp),%rax
   0x000000000041eee6 <+6832>:	lea    0x14e8(%rax),%rdx
   0x000000000041eeed <+6839>:	lea    -0x1d6(%rbp),%rax
   0x000000000041eef4 <+6846>:	mov    %rax,%rsi
   0x000000000041eef7 <+6849>:	mov    %rdx,%rdi
   0x000000000041eefa <+6852>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041eeff <+6857>:	mov    -0x278(%rbp),%rax
   0x000000000041ef06 <+6864>:	mov    %rax,%rdi
   0x000000000041ef09 <+6867>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041ef0e <+6872>:	movb   $0x0,-0x1d5(%rbp)
   0x000000000041ef15 <+6879>:	mov    -0x278(%rbp),%rax
   0x000000000041ef1c <+6886>:	lea    0x14e8(%rax),%rdx
   0x000000000041ef23 <+6893>:	lea    -0x1d5(%rbp),%rax
   0x000000000041ef2a <+6900>:	mov    %rax,%rsi
   0x000000000041ef2d <+6903>:	mov    %rdx,%rdi
   0x000000000041ef30 <+6906>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041ef35 <+6911>:	mov    -0x278(%rbp),%rax
   0x000000000041ef3c <+6918>:	mov    %rax,%rdi
   0x000000000041ef3f <+6921>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041ef44 <+6926>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041ef49 <+6931>:	mov    -0x268(%rbp),%edi
   0x000000000041ef4f <+6937>:	mov    -0x264(%rbp),%ecx
   0x000000000041ef55 <+6943>:	mov    -0x258(%rbp),%eax
   0x000000000041ef5b <+6949>:	mov    -0x24(%rbp),%esi
   0x000000000041ef5e <+6952>:	mov    -0x20(%rbp),%edx
   0x000000000041ef61 <+6955>:	mov    %edi,%r9d
   0x000000000041ef64 <+6958>:	mov    %esi,%r8d
   0x000000000041ef67 <+6961>:	mov    %eax,%esi
   0x000000000041ef69 <+6963>:	mov    $0x42a318,%edi
   0x000000000041ef6e <+6968>:	mov    $0x0,%eax
   0x000000000041ef73 <+6973>:	callq  0x407810 <printf@plt>
   0x000000000041ef78 <+6978>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041ef7d <+6983>:	mov    %rax,%rbx
   0x000000000041ef80 <+6986>:	mov    $0x42a17f,%esi
   0x000000000041ef85 <+6991>:	mov    $0x636740,%edi
   0x000000000041ef8a <+6996>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041ef8f <+7001>:	mov    %rbx,%rsi
   0x000000000041ef92 <+7004>:	mov    %rax,%rdi
   0x000000000041ef95 <+7007>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041ef9a <+7012>:	mov    $0x407a20,%esi
   0x000000000041ef9f <+7017>:	mov    %rax,%rdi
   0x000000000041efa2 <+7020>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041efa7 <+7025>:	mov    $0x429fc8,%esi
   0x000000000041efac <+7030>:	mov    $0x636740,%edi
   0x000000000041efb1 <+7035>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041efb6 <+7040>:	mov    $0x407a20,%esi
   0x000000000041efbb <+7045>:	mov    %rax,%rdi
   0x000000000041efbe <+7048>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041efc3 <+7053>:	mov    -0x278(%rbp),%rax
   0x000000000041efca <+7060>:	lea    0x11c0(%rax),%rdx
   0x000000000041efd1 <+7067>:	lea    -0x264(%rbp),%rax
   0x000000000041efd8 <+7074>:	mov    %rax,%rsi
   0x000000000041efdb <+7077>:	mov    %rdx,%rdi
   0x000000000041efde <+7080>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041efe3 <+7085>:	mov    -0x278(%rbp),%rax
   0x000000000041efea <+7092>:	lea    0x1258(%rax),%rdx
   0x000000000041eff1 <+7099>:	lea    -0x268(%rbp),%rax
   0x000000000041eff8 <+7106>:	mov    %rax,%rsi
   0x000000000041effb <+7109>:	mov    %rdx,%rdi
   0x000000000041effe <+7112>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041f003 <+7117>:	mov    -0x278(%rbp),%rax
   0x000000000041f00a <+7124>:	lea    0x1080(%rax),%rdx
   0x000000000041f011 <+7131>:	lea    -0x258(%rbp),%rax
   0x000000000041f018 <+7138>:	mov    %rax,%rsi
   0x000000000041f01b <+7141>:	mov    %rdx,%rdi
   0x000000000041f01e <+7144>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041f023 <+7149>:	movl   $0xe,-0x1d4(%rbp)
   0x000000000041f02d <+7159>:	mov    -0x278(%rbp),%rax
   0x000000000041f034 <+7166>:	lea    0xf40(%rax),%rdx
   0x000000000041f03b <+7173>:	lea    -0x1d4(%rbp),%rax
   0x000000000041f042 <+7180>:	mov    %rax,%rsi
   0x000000000041f045 <+7183>:	mov    %rdx,%rdi
   0x000000000041f048 <+7186>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041f04d <+7191>:	movb   $0x1,-0x1cd(%rbp)
   0x000000000041f054 <+7198>:	mov    -0x278(%rbp),%rax
   0x000000000041f05b <+7205>:	lea    0x14e8(%rax),%rdx
   0x000000000041f062 <+7212>:	lea    -0x1cd(%rbp),%rax
   0x000000000041f069 <+7219>:	mov    %rax,%rsi
   0x000000000041f06c <+7222>:	mov    %rdx,%rdi
   0x000000000041f06f <+7225>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f074 <+7230>:	mov    -0x278(%rbp),%rax
   0x000000000041f07b <+7237>:	mov    %rax,%rdi
   0x000000000041f07e <+7240>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041f083 <+7245>:	movb   $0x0,-0x1cc(%rbp)
   0x000000000041f08a <+7252>:	mov    -0x278(%rbp),%rax
   0x000000000041f091 <+7259>:	lea    0x14e8(%rax),%rdx
   0x000000000041f098 <+7266>:	lea    -0x1cc(%rbp),%rax
   0x000000000041f09f <+7273>:	mov    %rax,%rsi
   0x000000000041f0a2 <+7276>:	mov    %rdx,%rdi
   0x000000000041f0a5 <+7279>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f0aa <+7284>:	mov    -0x278(%rbp),%rax
   0x000000000041f0b1 <+7291>:	mov    %rax,%rdi
   0x000000000041f0b4 <+7294>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041f0b9 <+7299>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041f0be <+7304>:	mov    -0x25c(%rbp),%esi
   0x000000000041f0c4 <+7310>:	mov    -0x264(%rbp),%ecx
   0x000000000041f0ca <+7316>:	mov    -0x258(%rbp),%eax
   0x000000000041f0d0 <+7322>:	mov    -0x20(%rbp),%edx
   0x000000000041f0d3 <+7325>:	mov    %esi,%r8d
   0x000000000041f0d6 <+7328>:	mov    %eax,%esi
   0x000000000041f0d8 <+7330>:	mov    $0x42a33a,%edi
   0x000000000041f0dd <+7335>:	mov    $0x0,%eax
   0x000000000041f0e2 <+7340>:	callq  0x407810 <printf@plt>
   0x000000000041f0e7 <+7345>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041f0ec <+7350>:	mov    %rax,%rbx
   0x000000000041f0ef <+7353>:	mov    $0x42a17f,%esi
   0x000000000041f0f4 <+7358>:	mov    $0x636740,%edi
   0x000000000041f0f9 <+7363>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041f0fe <+7368>:	mov    %rbx,%rsi
   0x000000000041f101 <+7371>:	mov    %rax,%rdi
   0x000000000041f104 <+7374>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041f109 <+7379>:	mov    $0x407a20,%esi
   0x000000000041f10e <+7384>:	mov    %rax,%rdi
   0x000000000041f111 <+7387>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041f116 <+7392>:	mov    $0x429fc8,%esi
   0x000000000041f11b <+7397>:	mov    $0x636740,%edi
   0x000000000041f120 <+7402>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041f125 <+7407>:	mov    $0x407a20,%esi
   0x000000000041f12a <+7412>:	mov    %rax,%rdi
   0x000000000041f12d <+7415>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041f132 <+7420>:	movb   $0x1,-0x1cb(%rbp)
   0x000000000041f139 <+7427>:	mov    -0x278(%rbp),%rax
   0x000000000041f140 <+7434>:	lea    0xe00(%rax),%rdx
   0x000000000041f147 <+7441>:	lea    -0x1cb(%rbp),%rax
   0x000000000041f14e <+7448>:	mov    %rax,%rsi
   0x000000000041f151 <+7451>:	mov    %rdx,%rdi
   0x000000000041f154 <+7454>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f159 <+7459>:	movb   $0x0,-0x1ca(%rbp)
   0x000000000041f160 <+7466>:	mov    -0x278(%rbp),%rax
   0x000000000041f167 <+7473>:	lea    0xfd8(%rax),%rdx
   0x000000000041f16e <+7480>:	lea    -0x1ca(%rbp),%rax
   0x000000000041f175 <+7487>:	mov    %rax,%rsi
   0x000000000041f178 <+7490>:	mov    %rdx,%rdi
   0x000000000041f17b <+7493>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f180 <+7498>:	mov    -0x278(%rbp),%rax
   0x000000000041f187 <+7505>:	lea    0x1080(%rax),%rdx
   0x000000000041f18e <+7512>:	lea    -0x258(%rbp),%rax
   0x000000000041f195 <+7519>:	mov    %rax,%rsi
   0x000000000041f198 <+7522>:	mov    %rdx,%rdi
   0x000000000041f19b <+7525>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041f1a0 <+7530>:	mov    -0x25c(%rbp),%eax
   0x000000000041f1a6 <+7536>:	mov    -0x264(%rbp),%edx
   0x000000000041f1ac <+7542>:	add    %edx,%eax
   0x000000000041f1ae <+7544>:	mov    %eax,-0x25c(%rbp)
   0x000000000041f1b4 <+7550>:	mov    -0x278(%rbp),%rax
   0x000000000041f1bb <+7557>:	lea    0xea8(%rax),%rdx
   0x000000000041f1c2 <+7564>:	lea    -0x25c(%rbp),%rax
   0x000000000041f1c9 <+7571>:	mov    %rax,%rsi
   0x000000000041f1cc <+7574>:	mov    %rdx,%rdi
   0x000000000041f1cf <+7577>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041f1d4 <+7582>:	mov    -0x278(%rbp),%rax
   0x000000000041f1db <+7589>:	mov    %rax,%rdi
   0x000000000041f1de <+7592>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041f1e3 <+7597>:	movb   $0x0,-0x1c9(%rbp)
   0x000000000041f1ea <+7604>:	mov    -0x278(%rbp),%rax
   0x000000000041f1f1 <+7611>:	lea    0xe00(%rax),%rdx
   0x000000000041f1f8 <+7618>:	lea    -0x1c9(%rbp),%rax
   0x000000000041f1ff <+7625>:	mov    %rax,%rsi
   0x000000000041f202 <+7628>:	mov    %rdx,%rdi
   0x000000000041f205 <+7631>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f20a <+7636>:	mov    -0x278(%rbp),%rax
   0x000000000041f211 <+7643>:	mov    %rax,%rdi
   0x000000000041f214 <+7646>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041f219 <+7651>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041f21e <+7656>:	mov    -0x25c(%rbp),%esi
   0x000000000041f224 <+7662>:	mov    -0x264(%rbp),%ecx
   0x000000000041f22a <+7668>:	mov    -0x258(%rbp),%eax
   0x000000000041f230 <+7674>:	mov    -0x20(%rbp),%edx
   0x000000000041f233 <+7677>:	mov    %esi,%r8d
   0x000000000041f236 <+7680>:	mov    %eax,%esi
   0x000000000041f238 <+7682>:	mov    $0x42a358,%edi
   0x000000000041f23d <+7687>:	mov    $0x0,%eax
   0x000000000041f242 <+7692>:	callq  0x407810 <printf@plt>
   0x000000000041f247 <+7697>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041f24c <+7702>:	mov    %rax,%rbx
   0x000000000041f24f <+7705>:	mov    $0x42a17f,%esi
   0x000000000041f254 <+7710>:	mov    $0x636740,%edi
   0x000000000041f259 <+7715>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041f25e <+7720>:	mov    %rbx,%rsi
   0x000000000041f261 <+7723>:	mov    %rax,%rdi
   0x000000000041f264 <+7726>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041f269 <+7731>:	mov    $0x407a20,%esi
   0x000000000041f26e <+7736>:	mov    %rax,%rdi
   0x000000000041f271 <+7739>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041f276 <+7744>:	mov    $0x429fc8,%esi
   0x000000000041f27b <+7749>:	mov    $0x636740,%edi
   0x000000000041f280 <+7754>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041f285 <+7759>:	mov    $0x407a20,%esi
   0x000000000041f28a <+7764>:	mov    %rax,%rdi
   0x000000000041f28d <+7767>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041f292 <+7772>:	movb   $0x1,-0x1c8(%rbp)
   0x000000000041f299 <+7779>:	mov    -0x278(%rbp),%rax
   0x000000000041f2a0 <+7786>:	lea    0xe00(%rax),%rdx
   0x000000000041f2a7 <+7793>:	lea    -0x1c8(%rbp),%rax
   0x000000000041f2ae <+7800>:	mov    %rax,%rsi
   0x000000000041f2b1 <+7803>:	mov    %rdx,%rdi
   0x000000000041f2b4 <+7806>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f2b9 <+7811>:	movb   $0x1,-0x1c7(%rbp)
   0x000000000041f2c0 <+7818>:	mov    -0x278(%rbp),%rax
   0x000000000041f2c7 <+7825>:	lea    0xfd8(%rax),%rdx
   0x000000000041f2ce <+7832>:	lea    -0x1c7(%rbp),%rax
   0x000000000041f2d5 <+7839>:	mov    %rax,%rsi
   0x000000000041f2d8 <+7842>:	mov    %rdx,%rdi
   0x000000000041f2db <+7845>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f2e0 <+7850>:	mov    -0x25c(%rbp),%eax
   0x000000000041f2e6 <+7856>:	mov    -0x264(%rbp),%edx
   0x000000000041f2ec <+7862>:	add    %edx,%eax
   0x000000000041f2ee <+7864>:	mov    %eax,-0x25c(%rbp)
   0x000000000041f2f4 <+7870>:	mov    -0x278(%rbp),%rax
   0x000000000041f2fb <+7877>:	lea    0xea8(%rax),%rdx
   0x000000000041f302 <+7884>:	lea    -0x25c(%rbp),%rax
   0x000000000041f309 <+7891>:	mov    %rax,%rsi
   0x000000000041f30c <+7894>:	mov    %rdx,%rdi
   0x000000000041f30f <+7897>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041f314 <+7902>:	mov    -0x278(%rbp),%rax
   0x000000000041f31b <+7909>:	mov    %rax,%rdi
   0x000000000041f31e <+7912>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041f323 <+7917>:	movb   $0x0,-0x1c6(%rbp)
   0x000000000041f32a <+7924>:	mov    -0x278(%rbp),%rax
   0x000000000041f331 <+7931>:	lea    0xe00(%rax),%rdx
   0x000000000041f338 <+7938>:	lea    -0x1c6(%rbp),%rax
   0x000000000041f33f <+7945>:	mov    %rax,%rsi
   0x000000000041f342 <+7948>:	mov    %rdx,%rdi
   0x000000000041f345 <+7951>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f34a <+7956>:	movb   $0x0,-0x1c5(%rbp)
   0x000000000041f351 <+7963>:	mov    -0x278(%rbp),%rax
   0x000000000041f358 <+7970>:	lea    0xfd8(%rax),%rdx
   0x000000000041f35f <+7977>:	lea    -0x1c5(%rbp),%rax
   0x000000000041f366 <+7984>:	mov    %rax,%rsi
   0x000000000041f369 <+7987>:	mov    %rdx,%rdi
   0x000000000041f36c <+7990>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f371 <+7995>:	mov    -0x278(%rbp),%rax
   0x000000000041f378 <+8002>:	mov    %rax,%rdi
   0x000000000041f37b <+8005>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041f380 <+8010>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041f385 <+8015>:	mov    -0x264(%rbp),%ecx
   0x000000000041f38b <+8021>:	mov    -0x258(%rbp),%eax
   0x000000000041f391 <+8027>:	mov    -0x20(%rbp),%edx
   0x000000000041f394 <+8030>:	mov    %eax,%esi
   0x000000000041f396 <+8032>:	mov    $0x42a377,%edi
   0x000000000041f39b <+8037>:	mov    $0x0,%eax
   0x000000000041f3a0 <+8042>:	callq  0x407810 <printf@plt>
   0x000000000041f3a5 <+8047>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041f3aa <+8052>:	mov    %rax,%rbx
   0x000000000041f3ad <+8055>:	mov    $0x42a17f,%esi
   0x000000000041f3b2 <+8060>:	mov    $0x636740,%edi
   0x000000000041f3b7 <+8065>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041f3bc <+8070>:	mov    %rbx,%rsi
   0x000000000041f3bf <+8073>:	mov    %rax,%rdi
   0x000000000041f3c2 <+8076>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041f3c7 <+8081>:	mov    $0x407a20,%esi
   0x000000000041f3cc <+8086>:	mov    %rax,%rdi
   0x000000000041f3cf <+8089>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041f3d4 <+8094>:	mov    $0x429fc8,%esi
   0x000000000041f3d9 <+8099>:	mov    $0x636740,%edi
   0x000000000041f3de <+8104>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041f3e3 <+8109>:	mov    $0x407a20,%esi
   0x000000000041f3e8 <+8114>:	mov    %rax,%rdi
   0x000000000041f3eb <+8117>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041f3f0 <+8122>:	mov    -0x278(%rbp),%rax
   0x000000000041f3f7 <+8129>:	lea    0x11c0(%rax),%rdx
   0x000000000041f3fe <+8136>:	lea    -0x264(%rbp),%rax
   0x000000000041f405 <+8143>:	mov    %rax,%rsi
   0x000000000041f408 <+8146>:	mov    %rdx,%rdi
   0x000000000041f40b <+8149>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041f410 <+8154>:	movl   $0x0,-0x1c4(%rbp)
   0x000000000041f41a <+8164>:	mov    -0x278(%rbp),%rax
   0x000000000041f421 <+8171>:	lea    0x1258(%rax),%rdx
   0x000000000041f428 <+8178>:	lea    -0x1c4(%rbp),%rax
   0x000000000041f42f <+8185>:	mov    %rax,%rsi
   0x000000000041f432 <+8188>:	mov    %rdx,%rdi
   0x000000000041f435 <+8191>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041f43a <+8196>:	mov    -0x278(%rbp),%rax
   0x000000000041f441 <+8203>:	lea    0x1080(%rax),%rdx
   0x000000000041f448 <+8210>:	lea    -0x258(%rbp),%rax
   0x000000000041f44f <+8217>:	mov    %rax,%rsi
   0x000000000041f452 <+8220>:	mov    %rdx,%rdi
   0x000000000041f455 <+8223>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041f45a <+8228>:	movl   $0x3,-0x1c0(%rbp)
   0x000000000041f464 <+8238>:	mov    -0x278(%rbp),%rax
   0x000000000041f46b <+8245>:	lea    0xf40(%rax),%rdx
   0x000000000041f472 <+8252>:	lea    -0x1c0(%rbp),%rax
   0x000000000041f479 <+8259>:	mov    %rax,%rsi
   0x000000000041f47c <+8262>:	mov    %rdx,%rdi
   0x000000000041f47f <+8265>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041f484 <+8270>:	movb   $0x1,-0x1ba(%rbp)
   0x000000000041f48b <+8277>:	mov    -0x278(%rbp),%rax
   0x000000000041f492 <+8284>:	lea    0x14e8(%rax),%rdx
   0x000000000041f499 <+8291>:	lea    -0x1ba(%rbp),%rax
   0x000000000041f4a0 <+8298>:	mov    %rax,%rsi
   0x000000000041f4a3 <+8301>:	mov    %rdx,%rdi
   0x000000000041f4a6 <+8304>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f4ab <+8309>:	mov    -0x278(%rbp),%rax
   0x000000000041f4b2 <+8316>:	mov    %rax,%rdi
   0x000000000041f4b5 <+8319>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041f4ba <+8324>:	movb   $0x0,-0x1b9(%rbp)
   0x000000000041f4c1 <+8331>:	mov    -0x278(%rbp),%rax
   0x000000000041f4c8 <+8338>:	lea    0x14e8(%rax),%rdx
   0x000000000041f4cf <+8345>:	lea    -0x1b9(%rbp),%rax
   0x000000000041f4d6 <+8352>:	mov    %rax,%rsi
   0x000000000041f4d9 <+8355>:	mov    %rdx,%rdi
   0x000000000041f4dc <+8358>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f4e1 <+8363>:	mov    -0x278(%rbp),%rax
   0x000000000041f4e8 <+8370>:	mov    %rax,%rdi
   0x000000000041f4eb <+8373>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041f4f0 <+8378>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041f4f5 <+8383>:	movl   $0x0,-0x1b8(%rbp)
   0x000000000041f4ff <+8393>:	mov    -0x278(%rbp),%rax
   0x000000000041f506 <+8400>:	lea    0x11c0(%rax),%rdx
   0x000000000041f50d <+8407>:	lea    -0x1b8(%rbp),%rax
   0x000000000041f514 <+8414>:	mov    %rax,%rsi
   0x000000000041f517 <+8417>:	mov    %rdx,%rdi
   0x000000000041f51a <+8420>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041f51f <+8425>:	movl   $0x0,-0x1b4(%rbp)
   0x000000000041f529 <+8435>:	mov    -0x278(%rbp),%rax
   0x000000000041f530 <+8442>:	lea    0x1258(%rax),%rdx
   0x000000000041f537 <+8449>:	lea    -0x1b4(%rbp),%rax
   0x000000000041f53e <+8456>:	mov    %rax,%rsi
   0x000000000041f541 <+8459>:	mov    %rdx,%rdi
   0x000000000041f544 <+8462>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041f549 <+8467>:	movl   $0x0,-0x1b0(%rbp)
   0x000000000041f553 <+8477>:	mov    -0x278(%rbp),%rax
   0x000000000041f55a <+8484>:	lea    0x1080(%rax),%rdx
   0x000000000041f561 <+8491>:	lea    -0x1b0(%rbp),%rax
   0x000000000041f568 <+8498>:	mov    %rax,%rsi
   0x000000000041f56b <+8501>:	mov    %rdx,%rdi
   0x000000000041f56e <+8504>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041f573 <+8509>:	movl   $0x3,-0x1ac(%rbp)
   0x000000000041f57d <+8519>:	mov    -0x278(%rbp),%rax
   0x000000000041f584 <+8526>:	lea    0xf40(%rax),%rdx
   0x000000000041f58b <+8533>:	lea    -0x1ac(%rbp),%rax
   0x000000000041f592 <+8540>:	mov    %rax,%rsi
   0x000000000041f595 <+8543>:	mov    %rdx,%rdi
   0x000000000041f598 <+8546>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041f59d <+8551>:	movb   $0x1,-0x1a5(%rbp)
   0x000000000041f5a4 <+8558>:	mov    -0x278(%rbp),%rax
   0x000000000041f5ab <+8565>:	lea    0x14e8(%rax),%rdx
   0x000000000041f5b2 <+8572>:	lea    -0x1a5(%rbp),%rax
   0x000000000041f5b9 <+8579>:	mov    %rax,%rsi
   0x000000000041f5bc <+8582>:	mov    %rdx,%rdi
   0x000000000041f5bf <+8585>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f5c4 <+8590>:	mov    -0x264(%rbp),%eax
   0x000000000041f5ca <+8596>:	cmp    %eax,-0x2c(%rbp)
   0x000000000041f5cd <+8599>:	jne    0x41f680 <decode::entry()+8778>
   0x000000000041f5d3 <+8605>:	mov    -0x278(%rbp),%rax
   0x000000000041f5da <+8612>:	mov    0x19e0(%rax),%edx
   0x000000000041f5e0 <+8618>:	mov    -0x14(%rbp),%eax
   0x000000000041f5e3 <+8621>:	add    %edx,%eax
   0x000000000041f5e5 <+8623>:	mov    %eax,-0x1a4(%rbp)
   0x000000000041f5eb <+8629>:	mov    -0x278(%rbp),%rax
   0x000000000041f5f2 <+8636>:	lea    0xd68(%rax),%rdx
   0x000000000041f5f9 <+8643>:	lea    -0x1a4(%rbp),%rax
   0x000000000041f600 <+8650>:	mov    %rax,%rsi
   0x000000000041f603 <+8653>:	mov    %rdx,%rdi
   0x000000000041f606 <+8656>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041f60b <+8661>:	mov    -0x278(%rbp),%rax
   0x000000000041f612 <+8668>:	lea    0xb80(%rax),%rdx
   0x000000000041f619 <+8675>:	lea    -0x254(%rbp),%rax
   0x000000000041f620 <+8682>:	mov    %rax,%rsi
   0x000000000041f623 <+8685>:	mov    %rdx,%rdi
   0x000000000041f626 <+8688>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041f62b <+8693>:	movb   $0x1,-0x19d(%rbp)
   0x000000000041f632 <+8700>:	mov    -0x278(%rbp),%rax
   0x000000000041f639 <+8707>:	lea    0xcc0(%rax),%rdx
   0x000000000041f640 <+8714>:	lea    -0x19d(%rbp),%rax
   0x000000000041f647 <+8721>:	mov    %rax,%rsi
   0x000000000041f64a <+8724>:	mov    %rdx,%rdi
   0x000000000041f64d <+8727>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f652 <+8732>:	mov    -0x264(%rbp),%esi
   0x000000000041f658 <+8738>:	mov    -0x258(%rbp),%eax
   0x000000000041f65e <+8744>:	mov    -0x14(%rbp),%edi
   0x000000000041f661 <+8747>:	mov    -0x20(%rbp),%ecx
   0x000000000041f664 <+8750>:	mov    -0x2c(%rbp),%edx
   0x000000000041f667 <+8753>:	mov    %edi,%r9d
   0x000000000041f66a <+8756>:	mov    %esi,%r8d
   0x000000000041f66d <+8759>:	mov    %eax,%esi
   0x000000000041f66f <+8761>:	mov    $0x42a390,%edi
   0x000000000041f674 <+8766>:	mov    $0x0,%eax
   0x000000000041f679 <+8771>:	callq  0x407810 <printf@plt>
   0x000000000041f67e <+8776>:	jmp    0x41f6a6 <decode::entry()+8816>
   0x000000000041f680 <+8778>:	mov    -0x264(%rbp),%esi
   0x000000000041f686 <+8784>:	mov    -0x258(%rbp),%eax
   0x000000000041f68c <+8790>:	mov    -0x20(%rbp),%ecx
   0x000000000041f68f <+8793>:	mov    -0x2c(%rbp),%edx
   0x000000000041f692 <+8796>:	mov    %esi,%r8d
   0x000000000041f695 <+8799>:	mov    %eax,%esi
   0x000000000041f697 <+8801>:	mov    $0x42a3c0,%edi
   0x000000000041f69c <+8806>:	mov    $0x0,%eax
   0x000000000041f6a1 <+8811>:	callq  0x407810 <printf@plt>
   0x000000000041f6a6 <+8816>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041f6ab <+8821>:	mov    %rax,%rbx
   0x000000000041f6ae <+8824>:	mov    $0x42a3e7,%esi
   0x000000000041f6b3 <+8829>:	mov    $0x636740,%edi
   0x000000000041f6b8 <+8834>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041f6bd <+8839>:	mov    %rbx,%rsi
   0x000000000041f6c0 <+8842>:	mov    %rax,%rdi
   0x000000000041f6c3 <+8845>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041f6c8 <+8850>:	mov    $0x407a20,%esi
   0x000000000041f6cd <+8855>:	mov    %rax,%rdi
   0x000000000041f6d0 <+8858>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041f6d5 <+8863>:	mov    $0x429fc8,%esi
   0x000000000041f6da <+8868>:	mov    $0x636740,%edi
   0x000000000041f6df <+8873>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041f6e4 <+8878>:	mov    $0x407a20,%esi
   0x000000000041f6e9 <+8883>:	mov    %rax,%rdi
   0x000000000041f6ec <+8886>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041f6f1 <+8891>:	mov    -0x278(%rbp),%rax
   0x000000000041f6f8 <+8898>:	mov    %rax,%rdi
   0x000000000041f6fb <+8901>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041f700 <+8906>:	mov    -0x278(%rbp),%rax
   0x000000000041f707 <+8913>:	mov    0x19e0(%rax),%eax
   0x000000000041f70d <+8919>:	add    $0x1,%eax
   0x000000000041f710 <+8922>:	mov    %eax,-0x19c(%rbp)
   0x000000000041f716 <+8928>:	mov    -0x278(%rbp),%rax
   0x000000000041f71d <+8935>:	lea    0xd68(%rax),%rdx
   0x000000000041f724 <+8942>:	lea    -0x19c(%rbp),%rax
   0x000000000041f72b <+8949>:	mov    %rax,%rsi
   0x000000000041f72e <+8952>:	mov    %rdx,%rdi
   0x000000000041f731 <+8955>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041f736 <+8960>:	movb   $0x0,-0x195(%rbp)
   0x000000000041f73d <+8967>:	mov    -0x278(%rbp),%rax
   0x000000000041f744 <+8974>:	lea    0x14e8(%rax),%rdx
   0x000000000041f74b <+8981>:	lea    -0x195(%rbp),%rax
   0x000000000041f752 <+8988>:	mov    %rax,%rsi
   0x000000000041f755 <+8991>:	mov    %rdx,%rdi
   0x000000000041f758 <+8994>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f75d <+8999>:	mov    -0x278(%rbp),%rax
   0x000000000041f764 <+9006>:	mov    %rax,%rdi
   0x000000000041f767 <+9009>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041f76c <+9014>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041f771 <+9019>:	movl   $0x0,-0x194(%rbp)
   0x000000000041f77b <+9029>:	mov    -0x278(%rbp),%rax
   0x000000000041f782 <+9036>:	lea    0x11c0(%rax),%rdx
   0x000000000041f789 <+9043>:	lea    -0x194(%rbp),%rax
   0x000000000041f790 <+9050>:	mov    %rax,%rsi
   0x000000000041f793 <+9053>:	mov    %rdx,%rdi
   0x000000000041f796 <+9056>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041f79b <+9061>:	movl   $0x0,-0x190(%rbp)
   0x000000000041f7a5 <+9071>:	mov    -0x278(%rbp),%rax
   0x000000000041f7ac <+9078>:	lea    0x1258(%rax),%rdx
   0x000000000041f7b3 <+9085>:	lea    -0x190(%rbp),%rax
   0x000000000041f7ba <+9092>:	mov    %rax,%rsi
   0x000000000041f7bd <+9095>:	mov    %rdx,%rdi
   0x000000000041f7c0 <+9098>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041f7c5 <+9103>:	movl   $0x0,-0x18c(%rbp)
   0x000000000041f7cf <+9113>:	mov    -0x278(%rbp),%rax
   0x000000000041f7d6 <+9120>:	lea    0x1080(%rax),%rdx
   0x000000000041f7dd <+9127>:	lea    -0x18c(%rbp),%rax
   0x000000000041f7e4 <+9134>:	mov    %rax,%rsi
   0x000000000041f7e7 <+9137>:	mov    %rdx,%rdi
   0x000000000041f7ea <+9140>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041f7ef <+9145>:	movl   $0x3,-0x188(%rbp)
   0x000000000041f7f9 <+9155>:	mov    -0x278(%rbp),%rax
   0x000000000041f800 <+9162>:	lea    0xf40(%rax),%rdx
   0x000000000041f807 <+9169>:	lea    -0x188(%rbp),%rax
   0x000000000041f80e <+9176>:	mov    %rax,%rsi
   0x000000000041f811 <+9179>:	mov    %rdx,%rdi
   0x000000000041f814 <+9182>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041f819 <+9187>:	movb   $0x1,-0x181(%rbp)
   0x000000000041f820 <+9194>:	mov    -0x278(%rbp),%rax
   0x000000000041f827 <+9201>:	lea    0x14e8(%rax),%rdx
   0x000000000041f82e <+9208>:	lea    -0x181(%rbp),%rax
   0x000000000041f835 <+9215>:	mov    %rax,%rsi
   0x000000000041f838 <+9218>:	mov    %rdx,%rdi
   0x000000000041f83b <+9221>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f840 <+9226>:	mov    -0x264(%rbp),%eax
   0x000000000041f846 <+9232>:	cmp    %eax,-0x2c(%rbp)
   0x000000000041f849 <+9235>:	je     0x41f8fc <decode::entry()+9414>
   0x000000000041f84f <+9241>:	mov    -0x278(%rbp),%rax
   0x000000000041f856 <+9248>:	mov    0x19e0(%rax),%edx
   0x000000000041f85c <+9254>:	mov    -0x14(%rbp),%eax
   0x000000000041f85f <+9257>:	add    %edx,%eax
   0x000000000041f861 <+9259>:	mov    %eax,-0x180(%rbp)
   0x000000000041f867 <+9265>:	mov    -0x278(%rbp),%rax
   0x000000000041f86e <+9272>:	lea    0xd68(%rax),%rdx
   0x000000000041f875 <+9279>:	lea    -0x180(%rbp),%rax
   0x000000000041f87c <+9286>:	mov    %rax,%rsi
   0x000000000041f87f <+9289>:	mov    %rdx,%rdi
   0x000000000041f882 <+9292>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041f887 <+9297>:	mov    -0x278(%rbp),%rax
   0x000000000041f88e <+9304>:	lea    0xb80(%rax),%rdx
   0x000000000041f895 <+9311>:	lea    -0x254(%rbp),%rax
   0x000000000041f89c <+9318>:	mov    %rax,%rsi
   0x000000000041f89f <+9321>:	mov    %rdx,%rdi
   0x000000000041f8a2 <+9324>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041f8a7 <+9329>:	movb   $0x1,-0x179(%rbp)
   0x000000000041f8ae <+9336>:	mov    -0x278(%rbp),%rax
   0x000000000041f8b5 <+9343>:	lea    0xcc0(%rax),%rdx
   0x000000000041f8bc <+9350>:	lea    -0x179(%rbp),%rax
   0x000000000041f8c3 <+9357>:	mov    %rax,%rsi
   0x000000000041f8c6 <+9360>:	mov    %rdx,%rdi
   0x000000000041f8c9 <+9363>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f8ce <+9368>:	mov    -0x264(%rbp),%esi
   0x000000000041f8d4 <+9374>:	mov    -0x258(%rbp),%eax
   0x000000000041f8da <+9380>:	mov    -0x14(%rbp),%edi
   0x000000000041f8dd <+9383>:	mov    -0x20(%rbp),%ecx
   0x000000000041f8e0 <+9386>:	mov    -0x2c(%rbp),%edx
   0x000000000041f8e3 <+9389>:	mov    %edi,%r9d
   0x000000000041f8e6 <+9392>:	mov    %esi,%r8d
   0x000000000041f8e9 <+9395>:	mov    %eax,%esi
   0x000000000041f8eb <+9397>:	mov    $0x42a3f8,%edi
   0x000000000041f8f0 <+9402>:	mov    $0x0,%eax
   0x000000000041f8f5 <+9407>:	callq  0x407810 <printf@plt>
   0x000000000041f8fa <+9412>:	jmp    0x41f922 <decode::entry()+9452>
   0x000000000041f8fc <+9414>:	mov    -0x264(%rbp),%esi
   0x000000000041f902 <+9420>:	mov    -0x258(%rbp),%eax
   0x000000000041f908 <+9426>:	mov    -0x20(%rbp),%ecx
   0x000000000041f90b <+9429>:	mov    -0x2c(%rbp),%edx
   0x000000000041f90e <+9432>:	mov    %esi,%r8d
   0x000000000041f911 <+9435>:	mov    %eax,%esi
   0x000000000041f913 <+9437>:	mov    $0x42a428,%edi
   0x000000000041f918 <+9442>:	mov    $0x0,%eax
   0x000000000041f91d <+9447>:	callq  0x407810 <printf@plt>
   0x000000000041f922 <+9452>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041f927 <+9457>:	mov    %rax,%rbx
   0x000000000041f92a <+9460>:	mov    $0x42a3e7,%esi
   0x000000000041f92f <+9465>:	mov    $0x636740,%edi
   0x000000000041f934 <+9470>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041f939 <+9475>:	mov    %rbx,%rsi
   0x000000000041f93c <+9478>:	mov    %rax,%rdi
   0x000000000041f93f <+9481>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041f944 <+9486>:	mov    $0x407a20,%esi
   0x000000000041f949 <+9491>:	mov    %rax,%rdi
   0x000000000041f94c <+9494>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041f951 <+9499>:	mov    $0x429fc8,%esi
   0x000000000041f956 <+9504>:	mov    $0x636740,%edi
   0x000000000041f95b <+9509>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041f960 <+9514>:	mov    $0x407a20,%esi
   0x000000000041f965 <+9519>:	mov    %rax,%rdi
   0x000000000041f968 <+9522>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041f96d <+9527>:	mov    -0x278(%rbp),%rax
   0x000000000041f974 <+9534>:	mov    %rax,%rdi
   0x000000000041f977 <+9537>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041f97c <+9542>:	mov    -0x278(%rbp),%rax
   0x000000000041f983 <+9549>:	mov    0x19e0(%rax),%eax
   0x000000000041f989 <+9555>:	add    $0x1,%eax
   0x000000000041f98c <+9558>:	mov    %eax,-0x178(%rbp)
   0x000000000041f992 <+9564>:	mov    -0x278(%rbp),%rax
   0x000000000041f999 <+9571>:	lea    0xd68(%rax),%rdx
   0x000000000041f9a0 <+9578>:	lea    -0x178(%rbp),%rax
   0x000000000041f9a7 <+9585>:	mov    %rax,%rsi
   0x000000000041f9aa <+9588>:	mov    %rdx,%rdi
   0x000000000041f9ad <+9591>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041f9b2 <+9596>:	movb   $0x0,-0x171(%rbp)
   0x000000000041f9b9 <+9603>:	mov    -0x278(%rbp),%rax
   0x000000000041f9c0 <+9610>:	lea    0x14e8(%rax),%rdx
   0x000000000041f9c7 <+9617>:	lea    -0x171(%rbp),%rax
   0x000000000041f9ce <+9624>:	mov    %rax,%rsi
   0x000000000041f9d1 <+9627>:	mov    %rdx,%rdi
   0x000000000041f9d4 <+9630>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041f9d9 <+9635>:	mov    -0x278(%rbp),%rax
   0x000000000041f9e0 <+9642>:	mov    %rax,%rdi
   0x000000000041f9e3 <+9645>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041f9e8 <+9650>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041f9ed <+9655>:	movl   $0x0,-0x170(%rbp)
   0x000000000041f9f7 <+9665>:	mov    -0x278(%rbp),%rax
   0x000000000041f9fe <+9672>:	lea    0x11c0(%rax),%rdx
   0x000000000041fa05 <+9679>:	lea    -0x170(%rbp),%rax
   0x000000000041fa0c <+9686>:	mov    %rax,%rsi
   0x000000000041fa0f <+9689>:	mov    %rdx,%rdi
   0x000000000041fa12 <+9692>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041fa17 <+9697>:	movl   $0x0,-0x16c(%rbp)
   0x000000000041fa21 <+9707>:	mov    -0x278(%rbp),%rax
   0x000000000041fa28 <+9714>:	lea    0x1258(%rax),%rdx
   0x000000000041fa2f <+9721>:	lea    -0x16c(%rbp),%rax
   0x000000000041fa36 <+9728>:	mov    %rax,%rsi
   0x000000000041fa39 <+9731>:	mov    %rdx,%rdi
   0x000000000041fa3c <+9734>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041fa41 <+9739>:	movl   $0x0,-0x168(%rbp)
   0x000000000041fa4b <+9749>:	mov    -0x278(%rbp),%rax
   0x000000000041fa52 <+9756>:	lea    0x1080(%rax),%rdx
   0x000000000041fa59 <+9763>:	lea    -0x168(%rbp),%rax
   0x000000000041fa60 <+9770>:	mov    %rax,%rsi
   0x000000000041fa63 <+9773>:	mov    %rdx,%rdi
   0x000000000041fa66 <+9776>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041fa6b <+9781>:	movl   $0x3,-0x164(%rbp)
   0x000000000041fa75 <+9791>:	mov    -0x278(%rbp),%rax
   0x000000000041fa7c <+9798>:	lea    0xf40(%rax),%rdx
   0x000000000041fa83 <+9805>:	lea    -0x164(%rbp),%rax
   0x000000000041fa8a <+9812>:	mov    %rax,%rsi
   0x000000000041fa8d <+9815>:	mov    %rdx,%rdi
   0x000000000041fa90 <+9818>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041fa95 <+9823>:	movb   $0x1,-0x15d(%rbp)
   0x000000000041fa9c <+9830>:	mov    -0x278(%rbp),%rax
   0x000000000041faa3 <+9837>:	lea    0x14e8(%rax),%rdx
   0x000000000041faaa <+9844>:	lea    -0x15d(%rbp),%rax
   0x000000000041fab1 <+9851>:	mov    %rax,%rsi
   0x000000000041fab4 <+9854>:	mov    %rdx,%rdi
   0x000000000041fab7 <+9857>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041fabc <+9862>:	mov    -0x264(%rbp),%eax
   0x000000000041fac2 <+9868>:	cmp    %eax,-0x2c(%rbp)
   0x000000000041fac5 <+9871>:	jle    0x41fb78 <decode::entry()+10050>
   0x000000000041facb <+9877>:	mov    -0x278(%rbp),%rax
   0x000000000041fad2 <+9884>:	mov    0x19e0(%rax),%edx
   0x000000000041fad8 <+9890>:	mov    -0x14(%rbp),%eax
   0x000000000041fadb <+9893>:	add    %edx,%eax
   0x000000000041fadd <+9895>:	mov    %eax,-0x15c(%rbp)
   0x000000000041fae3 <+9901>:	mov    -0x278(%rbp),%rax
   0x000000000041faea <+9908>:	lea    0xd68(%rax),%rdx
   0x000000000041faf1 <+9915>:	lea    -0x15c(%rbp),%rax
   0x000000000041faf8 <+9922>:	mov    %rax,%rsi
   0x000000000041fafb <+9925>:	mov    %rdx,%rdi
   0x000000000041fafe <+9928>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041fb03 <+9933>:	mov    -0x278(%rbp),%rax
   0x000000000041fb0a <+9940>:	lea    0xb80(%rax),%rdx
   0x000000000041fb11 <+9947>:	lea    -0x254(%rbp),%rax
   0x000000000041fb18 <+9954>:	mov    %rax,%rsi
   0x000000000041fb1b <+9957>:	mov    %rdx,%rdi
   0x000000000041fb1e <+9960>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041fb23 <+9965>:	movb   $0x1,-0x155(%rbp)
   0x000000000041fb2a <+9972>:	mov    -0x278(%rbp),%rax
   0x000000000041fb31 <+9979>:	lea    0xcc0(%rax),%rdx
   0x000000000041fb38 <+9986>:	lea    -0x155(%rbp),%rax
   0x000000000041fb3f <+9993>:	mov    %rax,%rsi
   0x000000000041fb42 <+9996>:	mov    %rdx,%rdi
   0x000000000041fb45 <+9999>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041fb4a <+10004>:	mov    -0x264(%rbp),%esi
   0x000000000041fb50 <+10010>:	mov    -0x258(%rbp),%eax
   0x000000000041fb56 <+10016>:	mov    -0x14(%rbp),%edi
   0x000000000041fb59 <+10019>:	mov    -0x20(%rbp),%ecx
   0x000000000041fb5c <+10022>:	mov    -0x2c(%rbp),%edx
   0x000000000041fb5f <+10025>:	mov    %edi,%r9d
   0x000000000041fb62 <+10028>:	mov    %esi,%r8d
   0x000000000041fb65 <+10031>:	mov    %eax,%esi
   0x000000000041fb67 <+10033>:	mov    $0x42a450,%edi
   0x000000000041fb6c <+10038>:	mov    $0x0,%eax
   0x000000000041fb71 <+10043>:	callq  0x407810 <printf@plt>
   0x000000000041fb76 <+10048>:	jmp    0x41fb9e <decode::entry()+10088>
   0x000000000041fb78 <+10050>:	mov    -0x264(%rbp),%esi
   0x000000000041fb7e <+10056>:	mov    -0x258(%rbp),%eax
   0x000000000041fb84 <+10062>:	mov    -0x20(%rbp),%ecx
   0x000000000041fb87 <+10065>:	mov    -0x2c(%rbp),%edx
   0x000000000041fb8a <+10068>:	mov    %esi,%r8d
   0x000000000041fb8d <+10071>:	mov    %eax,%esi
   0x000000000041fb8f <+10073>:	mov    $0x42a480,%edi
   0x000000000041fb94 <+10078>:	mov    $0x0,%eax
   0x000000000041fb99 <+10083>:	callq  0x407810 <printf@plt>
   0x000000000041fb9e <+10088>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041fba3 <+10093>:	mov    %rax,%rbx
   0x000000000041fba6 <+10096>:	mov    $0x42a3e7,%esi
   0x000000000041fbab <+10101>:	mov    $0x636740,%edi
   0x000000000041fbb0 <+10106>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041fbb5 <+10111>:	mov    %rbx,%rsi
   0x000000000041fbb8 <+10114>:	mov    %rax,%rdi
   0x000000000041fbbb <+10117>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041fbc0 <+10122>:	mov    $0x407a20,%esi
   0x000000000041fbc5 <+10127>:	mov    %rax,%rdi
   0x000000000041fbc8 <+10130>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041fbcd <+10135>:	mov    $0x429fc8,%esi
   0x000000000041fbd2 <+10140>:	mov    $0x636740,%edi
   0x000000000041fbd7 <+10145>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041fbdc <+10150>:	mov    $0x407a20,%esi
   0x000000000041fbe1 <+10155>:	mov    %rax,%rdi
   0x000000000041fbe4 <+10158>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041fbe9 <+10163>:	mov    -0x278(%rbp),%rax
   0x000000000041fbf0 <+10170>:	mov    %rax,%rdi
   0x000000000041fbf3 <+10173>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041fbf8 <+10178>:	mov    -0x278(%rbp),%rax
   0x000000000041fbff <+10185>:	mov    0x19e0(%rax),%eax
   0x000000000041fc05 <+10191>:	add    $0x1,%eax
   0x000000000041fc08 <+10194>:	mov    %eax,-0x154(%rbp)
   0x000000000041fc0e <+10200>:	mov    -0x278(%rbp),%rax
   0x000000000041fc15 <+10207>:	lea    0xd68(%rax),%rdx
   0x000000000041fc1c <+10214>:	lea    -0x154(%rbp),%rax
   0x000000000041fc23 <+10221>:	mov    %rax,%rsi
   0x000000000041fc26 <+10224>:	mov    %rdx,%rdi
   0x000000000041fc29 <+10227>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041fc2e <+10232>:	movb   $0x0,-0x14d(%rbp)
   0x000000000041fc35 <+10239>:	mov    -0x278(%rbp),%rax
   0x000000000041fc3c <+10246>:	lea    0x14e8(%rax),%rdx
   0x000000000041fc43 <+10253>:	lea    -0x14d(%rbp),%rax
   0x000000000041fc4a <+10260>:	mov    %rax,%rsi
   0x000000000041fc4d <+10263>:	mov    %rdx,%rdi
   0x000000000041fc50 <+10266>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041fc55 <+10271>:	mov    -0x278(%rbp),%rax
   0x000000000041fc5c <+10278>:	mov    %rax,%rdi
   0x000000000041fc5f <+10281>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041fc64 <+10286>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041fc69 <+10291>:	movl   $0x0,-0x14c(%rbp)
   0x000000000041fc73 <+10301>:	mov    -0x278(%rbp),%rax
   0x000000000041fc7a <+10308>:	lea    0x11c0(%rax),%rdx
   0x000000000041fc81 <+10315>:	lea    -0x14c(%rbp),%rax
   0x000000000041fc88 <+10322>:	mov    %rax,%rsi
   0x000000000041fc8b <+10325>:	mov    %rdx,%rdi
   0x000000000041fc8e <+10328>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041fc93 <+10333>:	movl   $0x0,-0x148(%rbp)
   0x000000000041fc9d <+10343>:	mov    -0x278(%rbp),%rax
   0x000000000041fca4 <+10350>:	lea    0x1258(%rax),%rdx
   0x000000000041fcab <+10357>:	lea    -0x148(%rbp),%rax
   0x000000000041fcb2 <+10364>:	mov    %rax,%rsi
   0x000000000041fcb5 <+10367>:	mov    %rdx,%rdi
   0x000000000041fcb8 <+10370>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041fcbd <+10375>:	movl   $0x0,-0x144(%rbp)
   0x000000000041fcc7 <+10385>:	mov    -0x278(%rbp),%rax
   0x000000000041fcce <+10392>:	lea    0x1080(%rax),%rdx
   0x000000000041fcd5 <+10399>:	lea    -0x144(%rbp),%rax
   0x000000000041fcdc <+10406>:	mov    %rax,%rsi
   0x000000000041fcdf <+10409>:	mov    %rdx,%rdi
   0x000000000041fce2 <+10412>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041fce7 <+10417>:	movl   $0x3,-0x140(%rbp)
   0x000000000041fcf1 <+10427>:	mov    -0x278(%rbp),%rax
   0x000000000041fcf8 <+10434>:	lea    0xf40(%rax),%rdx
   0x000000000041fcff <+10441>:	lea    -0x140(%rbp),%rax
   0x000000000041fd06 <+10448>:	mov    %rax,%rsi
   0x000000000041fd09 <+10451>:	mov    %rdx,%rdi
   0x000000000041fd0c <+10454>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041fd11 <+10459>:	movb   $0x1,-0x139(%rbp)
   0x000000000041fd18 <+10466>:	mov    -0x278(%rbp),%rax
   0x000000000041fd1f <+10473>:	lea    0x14e8(%rax),%rdx
   0x000000000041fd26 <+10480>:	lea    -0x139(%rbp),%rax
   0x000000000041fd2d <+10487>:	mov    %rax,%rsi
   0x000000000041fd30 <+10490>:	mov    %rdx,%rdi
   0x000000000041fd33 <+10493>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041fd38 <+10498>:	mov    -0x264(%rbp),%eax
   0x000000000041fd3e <+10504>:	cmp    %eax,-0x2c(%rbp)
   0x000000000041fd41 <+10507>:	jl     0x41fdf4 <decode::entry()+10686>
   0x000000000041fd47 <+10513>:	mov    -0x278(%rbp),%rax
   0x000000000041fd4e <+10520>:	mov    0x19e0(%rax),%edx
   0x000000000041fd54 <+10526>:	mov    -0x14(%rbp),%eax
   0x000000000041fd57 <+10529>:	add    %edx,%eax
   0x000000000041fd59 <+10531>:	mov    %eax,-0x138(%rbp)
   0x000000000041fd5f <+10537>:	mov    -0x278(%rbp),%rax
   0x000000000041fd66 <+10544>:	lea    0xd68(%rax),%rdx
   0x000000000041fd6d <+10551>:	lea    -0x138(%rbp),%rax
   0x000000000041fd74 <+10558>:	mov    %rax,%rsi
   0x000000000041fd77 <+10561>:	mov    %rdx,%rdi
   0x000000000041fd7a <+10564>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041fd7f <+10569>:	mov    -0x278(%rbp),%rax
   0x000000000041fd86 <+10576>:	lea    0xb80(%rax),%rdx
   0x000000000041fd8d <+10583>:	lea    -0x254(%rbp),%rax
   0x000000000041fd94 <+10590>:	mov    %rax,%rsi
   0x000000000041fd97 <+10593>:	mov    %rdx,%rdi
   0x000000000041fd9a <+10596>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041fd9f <+10601>:	movb   $0x1,-0x131(%rbp)
   0x000000000041fda6 <+10608>:	mov    -0x278(%rbp),%rax
   0x000000000041fdad <+10615>:	lea    0xcc0(%rax),%rdx
   0x000000000041fdb4 <+10622>:	lea    -0x131(%rbp),%rax
   0x000000000041fdbb <+10629>:	mov    %rax,%rsi
   0x000000000041fdbe <+10632>:	mov    %rdx,%rdi
   0x000000000041fdc1 <+10635>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041fdc6 <+10640>:	mov    -0x264(%rbp),%esi
   0x000000000041fdcc <+10646>:	mov    -0x258(%rbp),%eax
   0x000000000041fdd2 <+10652>:	mov    -0x14(%rbp),%edi
   0x000000000041fdd5 <+10655>:	mov    -0x20(%rbp),%ecx
   0x000000000041fdd8 <+10658>:	mov    -0x2c(%rbp),%edx
   0x000000000041fddb <+10661>:	mov    %edi,%r9d
   0x000000000041fdde <+10664>:	mov    %esi,%r8d
   0x000000000041fde1 <+10667>:	mov    %eax,%esi
   0x000000000041fde3 <+10669>:	mov    $0x42a4a8,%edi
   0x000000000041fde8 <+10674>:	mov    $0x0,%eax
   0x000000000041fded <+10679>:	callq  0x407810 <printf@plt>
   0x000000000041fdf2 <+10684>:	jmp    0x41fe1a <decode::entry()+10724>
   0x000000000041fdf4 <+10686>:	mov    -0x264(%rbp),%esi
   0x000000000041fdfa <+10692>:	mov    -0x258(%rbp),%eax
   0x000000000041fe00 <+10698>:	mov    -0x20(%rbp),%ecx
   0x000000000041fe03 <+10701>:	mov    -0x2c(%rbp),%edx
   0x000000000041fe06 <+10704>:	mov    %esi,%r8d
   0x000000000041fe09 <+10707>:	mov    %eax,%esi
   0x000000000041fe0b <+10709>:	mov    $0x42a4d8,%edi
   0x000000000041fe10 <+10714>:	mov    $0x0,%eax
   0x000000000041fe15 <+10719>:	callq  0x407810 <printf@plt>
   0x000000000041fe1a <+10724>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041fe1f <+10729>:	mov    %rax,%rbx
   0x000000000041fe22 <+10732>:	mov    $0x42a3e7,%esi
   0x000000000041fe27 <+10737>:	mov    $0x636740,%edi
   0x000000000041fe2c <+10742>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041fe31 <+10747>:	mov    %rbx,%rsi
   0x000000000041fe34 <+10750>:	mov    %rax,%rdi
   0x000000000041fe37 <+10753>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041fe3c <+10758>:	mov    $0x407a20,%esi
   0x000000000041fe41 <+10763>:	mov    %rax,%rdi
   0x000000000041fe44 <+10766>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041fe49 <+10771>:	mov    $0x429fc8,%esi
   0x000000000041fe4e <+10776>:	mov    $0x636740,%edi
   0x000000000041fe53 <+10781>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041fe58 <+10786>:	mov    $0x407a20,%esi
   0x000000000041fe5d <+10791>:	mov    %rax,%rdi
   0x000000000041fe60 <+10794>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041fe65 <+10799>:	mov    -0x278(%rbp),%rax
   0x000000000041fe6c <+10806>:	mov    %rax,%rdi
   0x000000000041fe6f <+10809>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041fe74 <+10814>:	mov    -0x278(%rbp),%rax
   0x000000000041fe7b <+10821>:	mov    0x19e0(%rax),%eax
   0x000000000041fe81 <+10827>:	add    $0x1,%eax
   0x000000000041fe84 <+10830>:	mov    %eax,-0x130(%rbp)
   0x000000000041fe8a <+10836>:	mov    -0x278(%rbp),%rax
   0x000000000041fe91 <+10843>:	lea    0xd68(%rax),%rdx
   0x000000000041fe98 <+10850>:	lea    -0x130(%rbp),%rax
   0x000000000041fe9f <+10857>:	mov    %rax,%rsi
   0x000000000041fea2 <+10860>:	mov    %rdx,%rdi
   0x000000000041fea5 <+10863>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041feaa <+10868>:	movb   $0x0,-0x129(%rbp)
   0x000000000041feb1 <+10875>:	mov    -0x278(%rbp),%rax
   0x000000000041feb8 <+10882>:	lea    0x14e8(%rax),%rdx
   0x000000000041febf <+10889>:	lea    -0x129(%rbp),%rax
   0x000000000041fec6 <+10896>:	mov    %rax,%rsi
   0x000000000041fec9 <+10899>:	mov    %rdx,%rdi
   0x000000000041fecc <+10902>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041fed1 <+10907>:	mov    -0x278(%rbp),%rax
   0x000000000041fed8 <+10914>:	mov    %rax,%rdi
   0x000000000041fedb <+10917>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041fee0 <+10922>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000041fee5 <+10927>:	movl   $0x0,-0x128(%rbp)
   0x000000000041feef <+10937>:	mov    -0x278(%rbp),%rax
   0x000000000041fef6 <+10944>:	lea    0x11c0(%rax),%rdx
   0x000000000041fefd <+10951>:	lea    -0x128(%rbp),%rax
   0x000000000041ff04 <+10958>:	mov    %rax,%rsi
   0x000000000041ff07 <+10961>:	mov    %rdx,%rdi
   0x000000000041ff0a <+10964>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041ff0f <+10969>:	movl   $0x0,-0x124(%rbp)
   0x000000000041ff19 <+10979>:	mov    -0x278(%rbp),%rax
   0x000000000041ff20 <+10986>:	lea    0x1258(%rax),%rdx
   0x000000000041ff27 <+10993>:	lea    -0x124(%rbp),%rax
   0x000000000041ff2e <+11000>:	mov    %rax,%rsi
   0x000000000041ff31 <+11003>:	mov    %rdx,%rdi
   0x000000000041ff34 <+11006>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041ff39 <+11011>:	movl   $0x0,-0x120(%rbp)
   0x000000000041ff43 <+11021>:	mov    -0x278(%rbp),%rax
   0x000000000041ff4a <+11028>:	lea    0x1080(%rax),%rdx
   0x000000000041ff51 <+11035>:	lea    -0x120(%rbp),%rax
   0x000000000041ff58 <+11042>:	mov    %rax,%rsi
   0x000000000041ff5b <+11045>:	mov    %rdx,%rdi
   0x000000000041ff5e <+11048>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041ff63 <+11053>:	movl   $0x3,-0x11c(%rbp)
   0x000000000041ff6d <+11063>:	mov    -0x278(%rbp),%rax
   0x000000000041ff74 <+11070>:	lea    0xf40(%rax),%rdx
   0x000000000041ff7b <+11077>:	lea    -0x11c(%rbp),%rax
   0x000000000041ff82 <+11084>:	mov    %rax,%rsi
   0x000000000041ff85 <+11087>:	mov    %rdx,%rdi
   0x000000000041ff88 <+11090>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000041ff8d <+11095>:	movb   $0x1,-0x115(%rbp)
   0x000000000041ff94 <+11102>:	mov    -0x278(%rbp),%rax
   0x000000000041ff9b <+11109>:	lea    0x14e8(%rax),%rdx
   0x000000000041ffa2 <+11116>:	lea    -0x115(%rbp),%rax
   0x000000000041ffa9 <+11123>:	mov    %rax,%rsi
   0x000000000041ffac <+11126>:	mov    %rdx,%rdi
   0x000000000041ffaf <+11129>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041ffb4 <+11134>:	mov    -0x264(%rbp),%eax
   0x000000000041ffba <+11140>:	cmp    %eax,-0x2c(%rbp)
   0x000000000041ffbd <+11143>:	jge    0x420070 <decode::entry()+11322>
   0x000000000041ffc3 <+11149>:	mov    -0x278(%rbp),%rax
   0x000000000041ffca <+11156>:	mov    0x19e0(%rax),%edx
   0x000000000041ffd0 <+11162>:	mov    -0x14(%rbp),%eax
   0x000000000041ffd3 <+11165>:	add    %edx,%eax
   0x000000000041ffd5 <+11167>:	mov    %eax,-0x114(%rbp)
   0x000000000041ffdb <+11173>:	mov    -0x278(%rbp),%rax
   0x000000000041ffe2 <+11180>:	lea    0xd68(%rax),%rdx
   0x000000000041ffe9 <+11187>:	lea    -0x114(%rbp),%rax
   0x000000000041fff0 <+11194>:	mov    %rax,%rsi
   0x000000000041fff3 <+11197>:	mov    %rdx,%rdi
   0x000000000041fff6 <+11200>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041fffb <+11205>:	mov    -0x278(%rbp),%rax
   0x0000000000420002 <+11212>:	lea    0xb80(%rax),%rdx
   0x0000000000420009 <+11219>:	lea    -0x254(%rbp),%rax
   0x0000000000420010 <+11226>:	mov    %rax,%rsi
   0x0000000000420013 <+11229>:	mov    %rdx,%rdi
   0x0000000000420016 <+11232>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000042001b <+11237>:	movb   $0x1,-0x10d(%rbp)
   0x0000000000420022 <+11244>:	mov    -0x278(%rbp),%rax
   0x0000000000420029 <+11251>:	lea    0xcc0(%rax),%rdx
   0x0000000000420030 <+11258>:	lea    -0x10d(%rbp),%rax
   0x0000000000420037 <+11265>:	mov    %rax,%rsi
   0x000000000042003a <+11268>:	mov    %rdx,%rdi
   0x000000000042003d <+11271>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000420042 <+11276>:	mov    -0x264(%rbp),%esi
   0x0000000000420048 <+11282>:	mov    -0x258(%rbp),%eax
   0x000000000042004e <+11288>:	mov    -0x14(%rbp),%edi
   0x0000000000420051 <+11291>:	mov    -0x20(%rbp),%ecx
   0x0000000000420054 <+11294>:	mov    -0x2c(%rbp),%edx
   0x0000000000420057 <+11297>:	mov    %edi,%r9d
   0x000000000042005a <+11300>:	mov    %esi,%r8d
   0x000000000042005d <+11303>:	mov    %eax,%esi
   0x000000000042005f <+11305>:	mov    $0x42a500,%edi
   0x0000000000420064 <+11310>:	mov    $0x0,%eax
   0x0000000000420069 <+11315>:	callq  0x407810 <printf@plt>
   0x000000000042006e <+11320>:	jmp    0x420096 <decode::entry()+11360>
   0x0000000000420070 <+11322>:	mov    -0x264(%rbp),%esi
   0x0000000000420076 <+11328>:	mov    -0x258(%rbp),%eax
   0x000000000042007c <+11334>:	mov    -0x20(%rbp),%ecx
   0x000000000042007f <+11337>:	mov    -0x2c(%rbp),%edx
   0x0000000000420082 <+11340>:	mov    %esi,%r8d
   0x0000000000420085 <+11343>:	mov    %eax,%esi
   0x0000000000420087 <+11345>:	mov    $0x42a530,%edi
   0x000000000042008c <+11350>:	mov    $0x0,%eax
   0x0000000000420091 <+11355>:	callq  0x407810 <printf@plt>
   0x0000000000420096 <+11360>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000042009b <+11365>:	mov    %rax,%rbx
   0x000000000042009e <+11368>:	mov    $0x42a3e7,%esi
   0x00000000004200a3 <+11373>:	mov    $0x636740,%edi
   0x00000000004200a8 <+11378>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004200ad <+11383>:	mov    %rbx,%rsi
   0x00000000004200b0 <+11386>:	mov    %rax,%rdi
   0x00000000004200b3 <+11389>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x00000000004200b8 <+11394>:	mov    $0x407a20,%esi
   0x00000000004200bd <+11399>:	mov    %rax,%rdi
   0x00000000004200c0 <+11402>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x00000000004200c5 <+11407>:	mov    $0x429fc8,%esi
   0x00000000004200ca <+11412>:	mov    $0x636740,%edi
   0x00000000004200cf <+11417>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004200d4 <+11422>:	mov    $0x407a20,%esi
   0x00000000004200d9 <+11427>:	mov    %rax,%rdi
   0x00000000004200dc <+11430>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x00000000004200e1 <+11435>:	mov    -0x278(%rbp),%rax
   0x00000000004200e8 <+11442>:	mov    %rax,%rdi
   0x00000000004200eb <+11445>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004200f0 <+11450>:	mov    -0x278(%rbp),%rax
   0x00000000004200f7 <+11457>:	mov    0x19e0(%rax),%eax
   0x00000000004200fd <+11463>:	add    $0x1,%eax
   0x0000000000420100 <+11466>:	mov    %eax,-0x10c(%rbp)
   0x0000000000420106 <+11472>:	mov    -0x278(%rbp),%rax
   0x000000000042010d <+11479>:	lea    0xd68(%rax),%rdx
   0x0000000000420114 <+11486>:	lea    -0x10c(%rbp),%rax
   0x000000000042011b <+11493>:	mov    %rax,%rsi
   0x000000000042011e <+11496>:	mov    %rdx,%rdi
   0x0000000000420121 <+11499>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x0000000000420126 <+11504>:	movb   $0x0,-0x105(%rbp)
   0x000000000042012d <+11511>:	mov    -0x278(%rbp),%rax
   0x0000000000420134 <+11518>:	lea    0x14e8(%rax),%rdx
   0x000000000042013b <+11525>:	lea    -0x105(%rbp),%rax
   0x0000000000420142 <+11532>:	mov    %rax,%rsi
   0x0000000000420145 <+11535>:	mov    %rdx,%rdi
   0x0000000000420148 <+11538>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000042014d <+11543>:	mov    -0x278(%rbp),%rax
   0x0000000000420154 <+11550>:	mov    %rax,%rdi
   0x0000000000420157 <+11553>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000042015c <+11558>:	jmpq   0x421c8c <decode::entry()+18518>
   0x0000000000420161 <+11563>:	movl   $0x0,-0x104(%rbp)
   0x000000000042016b <+11573>:	mov    -0x278(%rbp),%rax
   0x0000000000420172 <+11580>:	lea    0x11c0(%rax),%rdx
   0x0000000000420179 <+11587>:	lea    -0x104(%rbp),%rax
   0x0000000000420180 <+11594>:	mov    %rax,%rsi
   0x0000000000420183 <+11597>:	mov    %rdx,%rdi
   0x0000000000420186 <+11600>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000042018b <+11605>:	movl   $0x0,-0x100(%rbp)
   0x0000000000420195 <+11615>:	mov    -0x278(%rbp),%rax
   0x000000000042019c <+11622>:	lea    0x1258(%rax),%rdx
   0x00000000004201a3 <+11629>:	lea    -0x100(%rbp),%rax
   0x00000000004201aa <+11636>:	mov    %rax,%rsi
   0x00000000004201ad <+11639>:	mov    %rdx,%rdi
   0x00000000004201b0 <+11642>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x00000000004201b5 <+11647>:	movl   $0x0,-0xfc(%rbp)
   0x00000000004201bf <+11657>:	mov    -0x278(%rbp),%rax
   0x00000000004201c6 <+11664>:	lea    0x1080(%rax),%rdx
   0x00000000004201cd <+11671>:	lea    -0xfc(%rbp),%rax
   0x00000000004201d4 <+11678>:	mov    %rax,%rsi
   0x00000000004201d7 <+11681>:	mov    %rdx,%rdi
   0x00000000004201da <+11684>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x00000000004201df <+11689>:	movl   $0x3,-0xf8(%rbp)
   0x00000000004201e9 <+11699>:	mov    -0x278(%rbp),%rax
   0x00000000004201f0 <+11706>:	lea    0xf40(%rax),%rdx
   0x00000000004201f7 <+11713>:	lea    -0xf8(%rbp),%rax
   0x00000000004201fe <+11720>:	mov    %rax,%rsi
   0x0000000000420201 <+11723>:	mov    %rdx,%rdi
   0x0000000000420204 <+11726>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420209 <+11731>:	movb   $0x1,-0xf1(%rbp)
   0x0000000000420210 <+11738>:	mov    -0x278(%rbp),%rax
   0x0000000000420217 <+11745>:	lea    0x14e8(%rax),%rdx
   0x000000000042021e <+11752>:	lea    -0xf1(%rbp),%rax
   0x0000000000420225 <+11759>:	mov    %rax,%rsi
   0x0000000000420228 <+11762>:	mov    %rdx,%rdi
   0x000000000042022b <+11765>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000420230 <+11770>:	mov    -0x264(%rbp),%eax
   0x0000000000420236 <+11776>:	cmp    %eax,-0x2c(%rbp)
   0x0000000000420239 <+11779>:	jg     0x4202ec <decode::entry()+11958>
   0x000000000042023f <+11785>:	mov    -0x278(%rbp),%rax
   0x0000000000420246 <+11792>:	mov    0x19e0(%rax),%edx
   0x000000000042024c <+11798>:	mov    -0x14(%rbp),%eax
   0x000000000042024f <+11801>:	add    %edx,%eax
   0x0000000000420251 <+11803>:	mov    %eax,-0xf0(%rbp)
   0x0000000000420257 <+11809>:	mov    -0x278(%rbp),%rax
   0x000000000042025e <+11816>:	lea    0xd68(%rax),%rdx
   0x0000000000420265 <+11823>:	lea    -0xf0(%rbp),%rax
   0x000000000042026c <+11830>:	mov    %rax,%rsi
   0x000000000042026f <+11833>:	mov    %rdx,%rdi
   0x0000000000420272 <+11836>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x0000000000420277 <+11841>:	mov    -0x278(%rbp),%rax
   0x000000000042027e <+11848>:	lea    0xb80(%rax),%rdx
   0x0000000000420285 <+11855>:	lea    -0x254(%rbp),%rax
   0x000000000042028c <+11862>:	mov    %rax,%rsi
   0x000000000042028f <+11865>:	mov    %rdx,%rdi
   0x0000000000420292 <+11868>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x0000000000420297 <+11873>:	movb   $0x1,-0xe9(%rbp)
   0x000000000042029e <+11880>:	mov    -0x278(%rbp),%rax
   0x00000000004202a5 <+11887>:	lea    0xcc0(%rax),%rdx
   0x00000000004202ac <+11894>:	lea    -0xe9(%rbp),%rax
   0x00000000004202b3 <+11901>:	mov    %rax,%rsi
   0x00000000004202b6 <+11904>:	mov    %rdx,%rdi
   0x00000000004202b9 <+11907>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x00000000004202be <+11912>:	mov    -0x264(%rbp),%esi
   0x00000000004202c4 <+11918>:	mov    -0x258(%rbp),%eax
   0x00000000004202ca <+11924>:	mov    -0x14(%rbp),%edi
   0x00000000004202cd <+11927>:	mov    -0x20(%rbp),%ecx
   0x00000000004202d0 <+11930>:	mov    -0x2c(%rbp),%edx
   0x00000000004202d3 <+11933>:	mov    %edi,%r9d
   0x00000000004202d6 <+11936>:	mov    %esi,%r8d
   0x00000000004202d9 <+11939>:	mov    %eax,%esi
   0x00000000004202db <+11941>:	mov    $0x42a558,%edi
   0x00000000004202e0 <+11946>:	mov    $0x0,%eax
   0x00000000004202e5 <+11951>:	callq  0x407810 <printf@plt>
   0x00000000004202ea <+11956>:	jmp    0x420312 <decode::entry()+11996>
   0x00000000004202ec <+11958>:	mov    -0x264(%rbp),%esi
   0x00000000004202f2 <+11964>:	mov    -0x258(%rbp),%eax
   0x00000000004202f8 <+11970>:	mov    -0x20(%rbp),%ecx
   0x00000000004202fb <+11973>:	mov    -0x2c(%rbp),%edx
   0x00000000004202fe <+11976>:	mov    %esi,%r8d
   0x0000000000420301 <+11979>:	mov    %eax,%esi
   0x0000000000420303 <+11981>:	mov    $0x42a588,%edi
   0x0000000000420308 <+11986>:	mov    $0x0,%eax
   0x000000000042030d <+11991>:	callq  0x407810 <printf@plt>
   0x0000000000420312 <+11996>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000420317 <+12001>:	mov    %rax,%rbx
   0x000000000042031a <+12004>:	mov    $0x42a3e7,%esi
   0x000000000042031f <+12009>:	mov    $0x636740,%edi
   0x0000000000420324 <+12014>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000420329 <+12019>:	mov    %rbx,%rsi
   0x000000000042032c <+12022>:	mov    %rax,%rdi
   0x000000000042032f <+12025>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x0000000000420334 <+12030>:	mov    $0x407a20,%esi
   0x0000000000420339 <+12035>:	mov    %rax,%rdi
   0x000000000042033c <+12038>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000420341 <+12043>:	mov    $0x429fc8,%esi
   0x0000000000420346 <+12048>:	mov    $0x636740,%edi
   0x000000000042034b <+12053>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000420350 <+12058>:	mov    $0x407a20,%esi
   0x0000000000420355 <+12063>:	mov    %rax,%rdi
   0x0000000000420358 <+12066>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000042035d <+12071>:	mov    -0x278(%rbp),%rax
   0x0000000000420364 <+12078>:	mov    %rax,%rdi
   0x0000000000420367 <+12081>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000042036c <+12086>:	mov    -0x278(%rbp),%rax
   0x0000000000420373 <+12093>:	mov    0x19e0(%rax),%eax
   0x0000000000420379 <+12099>:	add    $0x1,%eax
   0x000000000042037c <+12102>:	mov    %eax,-0xe8(%rbp)
   0x0000000000420382 <+12108>:	mov    -0x278(%rbp),%rax
   0x0000000000420389 <+12115>:	lea    0xd68(%rax),%rdx
   0x0000000000420390 <+12122>:	lea    -0xe8(%rbp),%rax
   0x0000000000420397 <+12129>:	mov    %rax,%rsi
   0x000000000042039a <+12132>:	mov    %rdx,%rdi
   0x000000000042039d <+12135>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x00000000004203a2 <+12140>:	movb   $0x0,-0xe1(%rbp)
   0x00000000004203a9 <+12147>:	mov    -0x278(%rbp),%rax
   0x00000000004203b0 <+12154>:	lea    0x14e8(%rax),%rdx
   0x00000000004203b7 <+12161>:	lea    -0xe1(%rbp),%rax
   0x00000000004203be <+12168>:	mov    %rax,%rsi
   0x00000000004203c1 <+12171>:	mov    %rdx,%rdi
   0x00000000004203c4 <+12174>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x00000000004203c9 <+12179>:	mov    -0x278(%rbp),%rax
   0x00000000004203d0 <+12186>:	mov    %rax,%rdi
   0x00000000004203d3 <+12189>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004203d8 <+12194>:	jmpq   0x421c8c <decode::entry()+18518>
   0x00000000004203dd <+12199>:	movl   $0x0,-0xe0(%rbp)
   0x00000000004203e7 <+12209>:	mov    -0x278(%rbp),%rax
   0x00000000004203ee <+12216>:	lea    0x11c0(%rax),%rdx
   0x00000000004203f5 <+12223>:	lea    -0xe0(%rbp),%rax
   0x00000000004203fc <+12230>:	mov    %rax,%rsi
   0x00000000004203ff <+12233>:	mov    %rdx,%rdi
   0x0000000000420402 <+12236>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420407 <+12241>:	movl   $0x0,-0xdc(%rbp)
   0x0000000000420411 <+12251>:	mov    -0x278(%rbp),%rax
   0x0000000000420418 <+12258>:	lea    0x1258(%rax),%rdx
   0x000000000042041f <+12265>:	lea    -0xdc(%rbp),%rax
   0x0000000000420426 <+12272>:	mov    %rax,%rsi
   0x0000000000420429 <+12275>:	mov    %rdx,%rdi
   0x000000000042042c <+12278>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420431 <+12283>:	movl   $0x0,-0xd8(%rbp)
   0x000000000042043b <+12293>:	mov    -0x278(%rbp),%rax
   0x0000000000420442 <+12300>:	lea    0x1080(%rax),%rdx
   0x0000000000420449 <+12307>:	lea    -0xd8(%rbp),%rax
   0x0000000000420450 <+12314>:	mov    %rax,%rsi
   0x0000000000420453 <+12317>:	mov    %rdx,%rdi
   0x0000000000420456 <+12320>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000042045b <+12325>:	movl   $0x3,-0xd4(%rbp)
   0x0000000000420465 <+12335>:	mov    -0x278(%rbp),%rax
   0x000000000042046c <+12342>:	lea    0xf40(%rax),%rdx
   0x0000000000420473 <+12349>:	lea    -0xd4(%rbp),%rax
   0x000000000042047a <+12356>:	mov    %rax,%rsi
   0x000000000042047d <+12359>:	mov    %rdx,%rdi
   0x0000000000420480 <+12362>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420485 <+12367>:	movb   $0x1,-0xce(%rbp)
   0x000000000042048c <+12374>:	mov    -0x278(%rbp),%rax
   0x0000000000420493 <+12381>:	lea    0x14e8(%rax),%rdx
   0x000000000042049a <+12388>:	lea    -0xce(%rbp),%rax
   0x00000000004204a1 <+12395>:	mov    %rax,%rsi
   0x00000000004204a4 <+12398>:	mov    %rdx,%rdi
   0x00000000004204a7 <+12401>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x00000000004204ac <+12406>:	mov    -0x278(%rbp),%rax
   0x00000000004204b3 <+12413>:	lea    0xd68(%rax),%rdx
   0x00000000004204ba <+12420>:	lea    -0x260(%rbp),%rax
   0x00000000004204c1 <+12427>:	mov    %rax,%rsi
   0x00000000004204c4 <+12430>:	mov    %rdx,%rdi
   0x00000000004204c7 <+12433>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x00000000004204cc <+12438>:	mov    -0x278(%rbp),%rax
   0x00000000004204d3 <+12445>:	lea    0xb80(%rax),%rdx
   0x00000000004204da <+12452>:	lea    -0x254(%rbp),%rax
   0x00000000004204e1 <+12459>:	mov    %rax,%rsi
   0x00000000004204e4 <+12462>:	mov    %rdx,%rdi
   0x00000000004204e7 <+12465>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x00000000004204ec <+12470>:	movb   $0x1,-0xcd(%rbp)
   0x00000000004204f3 <+12477>:	mov    -0x278(%rbp),%rax
   0x00000000004204fa <+12484>:	lea    0xcc0(%rax),%rdx
   0x0000000000420501 <+12491>:	lea    -0xcd(%rbp),%rax
   0x0000000000420508 <+12498>:	mov    %rax,%rsi
   0x000000000042050b <+12501>:	mov    %rdx,%rdi
   0x000000000042050e <+12504>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000420513 <+12509>:	mov    -0x260(%rbp),%eax
   0x0000000000420519 <+12515>:	mov    %eax,%esi
   0x000000000042051b <+12517>:	mov    $0x42a5ad,%edi
   0x0000000000420520 <+12522>:	mov    $0x0,%eax
   0x0000000000420525 <+12527>:	callq  0x407810 <printf@plt>
   0x000000000042052a <+12532>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000042052f <+12537>:	mov    %rax,%rbx
   0x0000000000420532 <+12540>:	mov    $0x42a17f,%esi
   0x0000000000420537 <+12545>:	mov    $0x636740,%edi
   0x000000000042053c <+12550>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000420541 <+12555>:	mov    %rbx,%rsi
   0x0000000000420544 <+12558>:	mov    %rax,%rdi
   0x0000000000420547 <+12561>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000042054c <+12566>:	mov    $0x407a20,%esi
   0x0000000000420551 <+12571>:	mov    %rax,%rdi
   0x0000000000420554 <+12574>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000420559 <+12579>:	mov    $0x429fc8,%esi
   0x000000000042055e <+12584>:	mov    $0x636740,%edi
   0x0000000000420563 <+12589>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000420568 <+12594>:	mov    $0x407a20,%esi
   0x000000000042056d <+12599>:	mov    %rax,%rdi
   0x0000000000420570 <+12602>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000420575 <+12607>:	mov    -0x278(%rbp),%rax
   0x000000000042057c <+12614>:	mov    %rax,%rdi
   0x000000000042057f <+12617>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000420584 <+12622>:	mov    -0x278(%rbp),%rax
   0x000000000042058b <+12629>:	mov    0x19e0(%rax),%eax
   0x0000000000420591 <+12635>:	add    $0x1,%eax
   0x0000000000420594 <+12638>:	mov    %eax,-0xcc(%rbp)
   0x000000000042059a <+12644>:	mov    -0x278(%rbp),%rax
   0x00000000004205a1 <+12651>:	lea    0xd68(%rax),%rdx
   0x00000000004205a8 <+12658>:	lea    -0xcc(%rbp),%rax
   0x00000000004205af <+12665>:	mov    %rax,%rsi
   0x00000000004205b2 <+12668>:	mov    %rdx,%rdi
   0x00000000004205b5 <+12671>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x00000000004205ba <+12676>:	movb   $0x0,-0xc5(%rbp)
   0x00000000004205c1 <+12683>:	mov    -0x278(%rbp),%rax
   0x00000000004205c8 <+12690>:	lea    0x14e8(%rax),%rdx
   0x00000000004205cf <+12697>:	lea    -0xc5(%rbp),%rax
   0x00000000004205d6 <+12704>:	mov    %rax,%rsi
   0x00000000004205d9 <+12707>:	mov    %rdx,%rdi
   0x00000000004205dc <+12710>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x00000000004205e1 <+12715>:	mov    -0x278(%rbp),%rax
   0x00000000004205e8 <+12722>:	mov    %rax,%rdi
   0x00000000004205eb <+12725>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004205f0 <+12730>:	jmpq   0x421c8c <decode::entry()+18518>
   0x00000000004205f5 <+12735>:	mov    -0x260(%rbp),%eax
   0x00000000004205fb <+12741>:	mov    %eax,%esi
   0x00000000004205fd <+12743>:	mov    $0x42a5c8,%edi
   0x0000000000420602 <+12748>:	mov    $0x0,%eax
   0x0000000000420607 <+12753>:	callq  0x407810 <printf@plt>
   0x000000000042060c <+12758>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000420611 <+12763>:	mov    %rax,%rbx
   0x0000000000420614 <+12766>:	mov    $0x42a006,%esi
   0x0000000000420619 <+12771>:	mov    $0x636740,%edi
   0x000000000042061e <+12776>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000420623 <+12781>:	mov    %rbx,%rsi
   0x0000000000420626 <+12784>:	mov    %rax,%rdi
   0x0000000000420629 <+12787>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000042062e <+12792>:	mov    $0x407a20,%esi
   0x0000000000420633 <+12797>:	mov    %rax,%rdi
   0x0000000000420636 <+12800>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000042063b <+12805>:	mov    $0x429fc8,%esi
   0x0000000000420640 <+12810>:	mov    $0x636740,%edi
   0x0000000000420645 <+12815>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000042064a <+12820>:	mov    $0x407a20,%esi
   0x000000000042064f <+12825>:	mov    %rax,%rdi
   0x0000000000420652 <+12828>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000420657 <+12833>:	mov    -0x278(%rbp),%rax
   0x000000000042065e <+12840>:	mov    %rax,%rdi
   0x0000000000420661 <+12843>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000420666 <+12848>:	mov    -0x278(%rbp),%rax
   0x000000000042066d <+12855>:	mov    %rax,%rdi
   0x0000000000420670 <+12858>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000420675 <+12863>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000042067a <+12868>:	mov    $0x42a5e5,%edi
   0x000000000042067f <+12873>:	callq  0x407f50 <puts@plt>
   0x0000000000420684 <+12878>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000420689 <+12883>:	mov    %rax,%rbx
   0x000000000042068c <+12886>:	mov    $0x42a006,%esi
   0x0000000000420691 <+12891>:	mov    $0x636740,%edi
   0x0000000000420696 <+12896>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000042069b <+12901>:	mov    %rbx,%rsi
   0x000000000042069e <+12904>:	mov    %rax,%rdi
   0x00000000004206a1 <+12907>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x00000000004206a6 <+12912>:	mov    $0x407a20,%esi
   0x00000000004206ab <+12917>:	mov    %rax,%rdi
   0x00000000004206ae <+12920>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x00000000004206b3 <+12925>:	mov    $0x429fc8,%esi
   0x00000000004206b8 <+12930>:	mov    $0x636740,%edi
   0x00000000004206bd <+12935>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004206c2 <+12940>:	mov    $0x407a20,%esi
   0x00000000004206c7 <+12945>:	mov    %rax,%rdi
   0x00000000004206ca <+12948>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x00000000004206cf <+12953>:	mov    -0x278(%rbp),%rax
   0x00000000004206d6 <+12960>:	mov    %rax,%rdi
   0x00000000004206d9 <+12963>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004206de <+12968>:	mov    -0x278(%rbp),%rax
   0x00000000004206e5 <+12975>:	mov    %rax,%rdi
   0x00000000004206e8 <+12978>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004206ed <+12983>:	jmpq   0x421c8c <decode::entry()+18518>
   0x00000000004206f2 <+12988>:	mov    -0x268(%rbp),%edi
   0x00000000004206f8 <+12994>:	mov    -0x264(%rbp),%ecx
   0x00000000004206fe <+13000>:	mov    -0x258(%rbp),%eax
   0x0000000000420704 <+13006>:	mov    -0x24(%rbp),%esi
   0x0000000000420707 <+13009>:	mov    -0x20(%rbp),%edx
   0x000000000042070a <+13012>:	mov    %edi,%r9d
   0x000000000042070d <+13015>:	mov    %esi,%r8d
   0x0000000000420710 <+13018>:	mov    %eax,%esi
   0x0000000000420712 <+13020>:	mov    $0x42a600,%edi
   0x0000000000420717 <+13025>:	mov    $0x0,%eax
   0x000000000042071c <+13030>:	callq  0x407810 <printf@plt>
   0x0000000000420721 <+13035>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000420726 <+13040>:	mov    %rax,%rbx
   0x0000000000420729 <+13043>:	mov    $0x42a17f,%esi
   0x000000000042072e <+13048>:	mov    $0x636740,%edi
   0x0000000000420733 <+13053>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000420738 <+13058>:	mov    %rbx,%rsi
   0x000000000042073b <+13061>:	mov    %rax,%rdi
   0x000000000042073e <+13064>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x0000000000420743 <+13069>:	mov    $0x407a20,%esi
   0x0000000000420748 <+13074>:	mov    %rax,%rdi
   0x000000000042074b <+13077>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000420750 <+13082>:	mov    $0x429fc8,%esi
   0x0000000000420755 <+13087>:	mov    $0x636740,%edi
   0x000000000042075a <+13092>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000042075f <+13097>:	mov    $0x407a20,%esi
   0x0000000000420764 <+13102>:	mov    %rax,%rdi
   0x0000000000420767 <+13105>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000042076c <+13110>:	mov    -0x278(%rbp),%rax
   0x0000000000420773 <+13117>:	lea    0x11c0(%rax),%rdx
   0x000000000042077a <+13124>:	lea    -0x264(%rbp),%rax
   0x0000000000420781 <+13131>:	mov    %rax,%rsi
   0x0000000000420784 <+13134>:	mov    %rdx,%rdi
   0x0000000000420787 <+13137>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000042078c <+13142>:	mov    -0x278(%rbp),%rax
   0x0000000000420793 <+13149>:	lea    0x1258(%rax),%rdx
   0x000000000042079a <+13156>:	lea    -0x268(%rbp),%rax
   0x00000000004207a1 <+13163>:	mov    %rax,%rsi
   0x00000000004207a4 <+13166>:	mov    %rdx,%rdi
   0x00000000004207a7 <+13169>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x00000000004207ac <+13174>:	mov    -0x278(%rbp),%rax
   0x00000000004207b3 <+13181>:	lea    0x1080(%rax),%rdx
   0x00000000004207ba <+13188>:	lea    -0x258(%rbp),%rax
   0x00000000004207c1 <+13195>:	mov    %rax,%rsi
   0x00000000004207c4 <+13198>:	mov    %rdx,%rdi
   0x00000000004207c7 <+13201>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x00000000004207cc <+13206>:	movl   $0x3,-0xc4(%rbp)
   0x00000000004207d6 <+13216>:	mov    -0x278(%rbp),%rax
   0x00000000004207dd <+13223>:	lea    0xf40(%rax),%rdx
   0x00000000004207e4 <+13230>:	lea    -0xc4(%rbp),%rax
   0x00000000004207eb <+13237>:	mov    %rax,%rsi
   0x00000000004207ee <+13240>:	mov    %rdx,%rdi
   0x00000000004207f1 <+13243>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x00000000004207f6 <+13248>:	movb   $0x1,-0xbe(%rbp)
   0x00000000004207fd <+13255>:	mov    -0x278(%rbp),%rax
   0x0000000000420804 <+13262>:	lea    0x1590(%rax),%rdx
   0x000000000042080b <+13269>:	lea    -0xbe(%rbp),%rax
   0x0000000000420812 <+13276>:	mov    %rax,%rsi
   0x0000000000420815 <+13279>:	mov    %rdx,%rdi
   0x0000000000420818 <+13282>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000042081d <+13287>:	mov    -0x278(%rbp),%rax
   0x0000000000420824 <+13294>:	mov    %rax,%rdi
   0x0000000000420827 <+13297>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000042082c <+13302>:	movb   $0x0,-0xbd(%rbp)
   0x0000000000420833 <+13309>:	mov    -0x278(%rbp),%rax
   0x000000000042083a <+13316>:	lea    0x1590(%rax),%rdx
   0x0000000000420841 <+13323>:	lea    -0xbd(%rbp),%rax
   0x0000000000420848 <+13330>:	mov    %rax,%rsi
   0x000000000042084b <+13333>:	mov    %rdx,%rdi
   0x000000000042084e <+13336>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000420853 <+13341>:	mov    -0x278(%rbp),%rax
   0x000000000042085a <+13348>:	mov    %rax,%rdi
   0x000000000042085d <+13351>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000420862 <+13356>:	jmpq   0x421c8c <decode::entry()+18518>
   0x0000000000420867 <+13361>:	mov    -0x268(%rbp),%edi
   0x000000000042086d <+13367>:	mov    -0x264(%rbp),%ecx
   0x0000000000420873 <+13373>:	mov    -0x258(%rbp),%eax
   0x0000000000420879 <+13379>:	mov    -0x24(%rbp),%esi
   0x000000000042087c <+13382>:	mov    -0x20(%rbp),%edx
   0x000000000042087f <+13385>:	mov    %edi,%r9d
   0x0000000000420882 <+13388>:	mov    %esi,%r8d
   0x0000000000420885 <+13391>:	mov    %eax,%esi
   0x0000000000420887 <+13393>:	mov    $0x42a620,%edi
   0x000000000042088c <+13398>:	mov    $0x0,%eax
   0x0000000000420891 <+13403>:	callq  0x407810 <printf@plt>
   0x0000000000420896 <+13408>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000042089b <+13413>:	mov    %rax,%rbx
   0x000000000042089e <+13416>:	mov    $0x42a17f,%esi
   0x00000000004208a3 <+13421>:	mov    $0x636740,%edi
   0x00000000004208a8 <+13426>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004208ad <+13431>:	mov    %rbx,%rsi
   0x00000000004208b0 <+13434>:	mov    %rax,%rdi
   0x00000000004208b3 <+13437>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x00000000004208b8 <+13442>:	mov    $0x407a20,%esi
   0x00000000004208bd <+13447>:	mov    %rax,%rdi
   0x00000000004208c0 <+13450>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x00000000004208c5 <+13455>:	mov    $0x429fc8,%esi
   0x00000000004208ca <+13460>:	mov    $0x636740,%edi
   0x00000000004208cf <+13465>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004208d4 <+13470>:	mov    $0x407a20,%esi
   0x00000000004208d9 <+13475>:	mov    %rax,%rdi
   0x00000000004208dc <+13478>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x00000000004208e1 <+13483>:	mov    -0x278(%rbp),%rax
   0x00000000004208e8 <+13490>:	lea    0x11c0(%rax),%rdx
   0x00000000004208ef <+13497>:	lea    -0x264(%rbp),%rax
   0x00000000004208f6 <+13504>:	mov    %rax,%rsi
   0x00000000004208f9 <+13507>:	mov    %rdx,%rdi
   0x00000000004208fc <+13510>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420901 <+13515>:	mov    -0x278(%rbp),%rax
   0x0000000000420908 <+13522>:	lea    0x1258(%rax),%rdx
   0x000000000042090f <+13529>:	lea    -0x268(%rbp),%rax
   0x0000000000420916 <+13536>:	mov    %rax,%rsi
   0x0000000000420919 <+13539>:	mov    %rdx,%rdi
   0x000000000042091c <+13542>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420921 <+13547>:	mov    -0x278(%rbp),%rax
   0x0000000000420928 <+13554>:	lea    0x1080(%rax),%rdx
   0x000000000042092f <+13561>:	lea    -0x258(%rbp),%rax
   0x0000000000420936 <+13568>:	mov    %rax,%rsi
   0x0000000000420939 <+13571>:	mov    %rdx,%rdi
   0x000000000042093c <+13574>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x0000000000420941 <+13579>:	movl   $0x4,-0xbc(%rbp)
   0x000000000042094b <+13589>:	mov    -0x278(%rbp),%rax
   0x0000000000420952 <+13596>:	lea    0xf40(%rax),%rdx
   0x0000000000420959 <+13603>:	lea    -0xbc(%rbp),%rax
   0x0000000000420960 <+13610>:	mov    %rax,%rsi
   0x0000000000420963 <+13613>:	mov    %rdx,%rdi
   0x0000000000420966 <+13616>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000042096b <+13621>:	movb   $0x1,-0xb6(%rbp)
   0x0000000000420972 <+13628>:	mov    -0x278(%rbp),%rax
   0x0000000000420979 <+13635>:	lea    0x1590(%rax),%rdx
   0x0000000000420980 <+13642>:	lea    -0xb6(%rbp),%rax
   0x0000000000420987 <+13649>:	mov    %rax,%rsi
   0x000000000042098a <+13652>:	mov    %rdx,%rdi
   0x000000000042098d <+13655>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000420992 <+13660>:	mov    -0x278(%rbp),%rax
   0x0000000000420999 <+13667>:	mov    %rax,%rdi
   0x000000000042099c <+13670>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004209a1 <+13675>:	movb   $0x0,-0xb5(%rbp)
   0x00000000004209a8 <+13682>:	mov    -0x278(%rbp),%rax
   0x00000000004209af <+13689>:	lea    0x1590(%rax),%rdx
   0x00000000004209b6 <+13696>:	lea    -0xb5(%rbp),%rax
   0x00000000004209bd <+13703>:	mov    %rax,%rsi
   0x00000000004209c0 <+13706>:	mov    %rdx,%rdi
   0x00000000004209c3 <+13709>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x00000000004209c8 <+13714>:	mov    -0x278(%rbp),%rax
   0x00000000004209cf <+13721>:	mov    %rax,%rdi
   0x00000000004209d2 <+13724>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004209d7 <+13729>:	jmpq   0x421c8c <decode::entry()+18518>
   0x00000000004209dc <+13734>:	mov    -0x268(%rbp),%edi
   0x00000000004209e2 <+13740>:	mov    -0x264(%rbp),%ecx
   0x00000000004209e8 <+13746>:	mov    -0x258(%rbp),%eax
   0x00000000004209ee <+13752>:	mov    -0x24(%rbp),%esi
   0x00000000004209f1 <+13755>:	mov    -0x20(%rbp),%edx
   0x00000000004209f4 <+13758>:	mov    %edi,%r9d
   0x00000000004209f7 <+13761>:	mov    %esi,%r8d
   0x00000000004209fa <+13764>:	mov    %eax,%esi
   0x00000000004209fc <+13766>:	mov    $0x42a640,%edi
   0x0000000000420a01 <+13771>:	mov    $0x0,%eax
   0x0000000000420a06 <+13776>:	callq  0x407810 <printf@plt>
   0x0000000000420a0b <+13781>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000420a10 <+13786>:	mov    %rax,%rbx
   0x0000000000420a13 <+13789>:	mov    $0x42a17f,%esi
   0x0000000000420a18 <+13794>:	mov    $0x636740,%edi
   0x0000000000420a1d <+13799>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000420a22 <+13804>:	mov    %rbx,%rsi
   0x0000000000420a25 <+13807>:	mov    %rax,%rdi
   0x0000000000420a28 <+13810>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x0000000000420a2d <+13815>:	mov    $0x407a20,%esi
   0x0000000000420a32 <+13820>:	mov    %rax,%rdi
   0x0000000000420a35 <+13823>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000420a3a <+13828>:	mov    $0x429fc8,%esi
   0x0000000000420a3f <+13833>:	mov    $0x636740,%edi
   0x0000000000420a44 <+13838>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000420a49 <+13843>:	mov    $0x407a20,%esi
   0x0000000000420a4e <+13848>:	mov    %rax,%rdi
   0x0000000000420a51 <+13851>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000420a56 <+13856>:	mov    -0x278(%rbp),%rax
   0x0000000000420a5d <+13863>:	lea    0x11c0(%rax),%rdx
   0x0000000000420a64 <+13870>:	lea    -0x264(%rbp),%rax
   0x0000000000420a6b <+13877>:	mov    %rax,%rsi
   0x0000000000420a6e <+13880>:	mov    %rdx,%rdi
   0x0000000000420a71 <+13883>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420a76 <+13888>:	mov    -0x278(%rbp),%rax
   0x0000000000420a7d <+13895>:	lea    0x1258(%rax),%rdx
   0x0000000000420a84 <+13902>:	lea    -0x268(%rbp),%rax
   0x0000000000420a8b <+13909>:	mov    %rax,%rsi
   0x0000000000420a8e <+13912>:	mov    %rdx,%rdi
   0x0000000000420a91 <+13915>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420a96 <+13920>:	mov    -0x278(%rbp),%rax
   0x0000000000420a9d <+13927>:	lea    0x1080(%rax),%rdx
   0x0000000000420aa4 <+13934>:	lea    -0x258(%rbp),%rax
   0x0000000000420aab <+13941>:	mov    %rax,%rsi
   0x0000000000420aae <+13944>:	mov    %rdx,%rdi
   0x0000000000420ab1 <+13947>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x0000000000420ab6 <+13952>:	movl   $0x5,-0xb4(%rbp)
   0x0000000000420ac0 <+13962>:	mov    -0x278(%rbp),%rax
   0x0000000000420ac7 <+13969>:	lea    0xf40(%rax),%rdx
   0x0000000000420ace <+13976>:	lea    -0xb4(%rbp),%rax
   0x0000000000420ad5 <+13983>:	mov    %rax,%rsi
   0x0000000000420ad8 <+13986>:	mov    %rdx,%rdi
   0x0000000000420adb <+13989>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420ae0 <+13994>:	movb   $0x1,-0xae(%rbp)
   0x0000000000420ae7 <+14001>:	mov    -0x278(%rbp),%rax
   0x0000000000420aee <+14008>:	lea    0x1590(%rax),%rdx
   0x0000000000420af5 <+14015>:	lea    -0xae(%rbp),%rax
   0x0000000000420afc <+14022>:	mov    %rax,%rsi
   0x0000000000420aff <+14025>:	mov    %rdx,%rdi
   0x0000000000420b02 <+14028>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000420b07 <+14033>:	mov    -0x278(%rbp),%rax
   0x0000000000420b0e <+14040>:	mov    %rax,%rdi
   0x0000000000420b11 <+14043>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000420b16 <+14048>:	movb   $0x0,-0xad(%rbp)
   0x0000000000420b1d <+14055>:	mov    -0x278(%rbp),%rax
   0x0000000000420b24 <+14062>:	lea    0x1590(%rax),%rdx
   0x0000000000420b2b <+14069>:	lea    -0xad(%rbp),%rax
   0x0000000000420b32 <+14076>:	mov    %rax,%rsi
   0x0000000000420b35 <+14079>:	mov    %rdx,%rdi
   0x0000000000420b38 <+14082>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000420b3d <+14087>:	mov    -0x278(%rbp),%rax
   0x0000000000420b44 <+14094>:	mov    %rax,%rdi
   0x0000000000420b47 <+14097>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000420b4c <+14102>:	jmpq   0x421c8c <decode::entry()+18518>
   0x0000000000420b51 <+14107>:	mov    -0x268(%rbp),%edi
   0x0000000000420b57 <+14113>:	mov    -0x264(%rbp),%ecx
   0x0000000000420b5d <+14119>:	mov    -0x258(%rbp),%eax
   0x0000000000420b63 <+14125>:	mov    -0x24(%rbp),%esi
   0x0000000000420b66 <+14128>:	mov    -0x20(%rbp),%edx
   0x0000000000420b69 <+14131>:	mov    %edi,%r9d
   0x0000000000420b6c <+14134>:	mov    %esi,%r8d
   0x0000000000420b6f <+14137>:	mov    %eax,%esi
   0x0000000000420b71 <+14139>:	mov    $0x42a660,%edi
   0x0000000000420b76 <+14144>:	mov    $0x0,%eax
   0x0000000000420b7b <+14149>:	callq  0x407810 <printf@plt>
   0x0000000000420b80 <+14154>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000420b85 <+14159>:	mov    %rax,%rbx
   0x0000000000420b88 <+14162>:	mov    $0x42a17f,%esi
   0x0000000000420b8d <+14167>:	mov    $0x636740,%edi
   0x0000000000420b92 <+14172>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000420b97 <+14177>:	mov    %rbx,%rsi
   0x0000000000420b9a <+14180>:	mov    %rax,%rdi
   0x0000000000420b9d <+14183>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x0000000000420ba2 <+14188>:	mov    $0x407a20,%esi
   0x0000000000420ba7 <+14193>:	mov    %rax,%rdi
   0x0000000000420baa <+14196>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000420baf <+14201>:	mov    $0x429fc8,%esi
   0x0000000000420bb4 <+14206>:	mov    $0x636740,%edi
   0x0000000000420bb9 <+14211>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000420bbe <+14216>:	mov    $0x407a20,%esi
   0x0000000000420bc3 <+14221>:	mov    %rax,%rdi
   0x0000000000420bc6 <+14224>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000420bcb <+14229>:	mov    -0x278(%rbp),%rax
   0x0000000000420bd2 <+14236>:	lea    0x11c0(%rax),%rdx
   0x0000000000420bd9 <+14243>:	lea    -0x264(%rbp),%rax
   0x0000000000420be0 <+14250>:	mov    %rax,%rsi
   0x0000000000420be3 <+14253>:	mov    %rdx,%rdi
   0x0000000000420be6 <+14256>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420beb <+14261>:	mov    -0x278(%rbp),%rax
   0x0000000000420bf2 <+14268>:	lea    0x1258(%rax),%rdx
   0x0000000000420bf9 <+14275>:	lea    -0x268(%rbp),%rax
   0x0000000000420c00 <+14282>:	mov    %rax,%rsi
   0x0000000000420c03 <+14285>:	mov    %rdx,%rdi
   0x0000000000420c06 <+14288>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420c0b <+14293>:	mov    -0x278(%rbp),%rax
   0x0000000000420c12 <+14300>:	lea    0x1080(%rax),%rdx
   0x0000000000420c19 <+14307>:	lea    -0x258(%rbp),%rax
   0x0000000000420c20 <+14314>:	mov    %rax,%rsi
   0x0000000000420c23 <+14317>:	mov    %rdx,%rdi
   0x0000000000420c26 <+14320>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x0000000000420c2b <+14325>:	movl   $0x6,-0xac(%rbp)
   0x0000000000420c35 <+14335>:	mov    -0x278(%rbp),%rax
   0x0000000000420c3c <+14342>:	lea    0xf40(%rax),%rdx
   0x0000000000420c43 <+14349>:	lea    -0xac(%rbp),%rax
   0x0000000000420c4a <+14356>:	mov    %rax,%rsi
   0x0000000000420c4d <+14359>:	mov    %rdx,%rdi
   0x0000000000420c50 <+14362>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420c55 <+14367>:	movb   $0x1,-0xa6(%rbp)
   0x0000000000420c5c <+14374>:	mov    -0x278(%rbp),%rax
   0x0000000000420c63 <+14381>:	lea    0x1590(%rax),%rdx
   0x0000000000420c6a <+14388>:	lea    -0xa6(%rbp),%rax
   0x0000000000420c71 <+14395>:	mov    %rax,%rsi
   0x0000000000420c74 <+14398>:	mov    %rdx,%rdi
   0x0000000000420c77 <+14401>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000420c7c <+14406>:	mov    -0x278(%rbp),%rax
   0x0000000000420c83 <+14413>:	mov    %rax,%rdi
   0x0000000000420c86 <+14416>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000420c8b <+14421>:	movb   $0x0,-0xa5(%rbp)
   0x0000000000420c92 <+14428>:	mov    -0x278(%rbp),%rax
   0x0000000000420c99 <+14435>:	lea    0x1590(%rax),%rdx
   0x0000000000420ca0 <+14442>:	lea    -0xa5(%rbp),%rax
   0x0000000000420ca7 <+14449>:	mov    %rax,%rsi
   0x0000000000420caa <+14452>:	mov    %rdx,%rdi
   0x0000000000420cad <+14455>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000420cb2 <+14460>:	mov    -0x278(%rbp),%rax
   0x0000000000420cb9 <+14467>:	mov    %rax,%rdi
   0x0000000000420cbc <+14470>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000420cc1 <+14475>:	jmpq   0x421c8c <decode::entry()+18518>
   0x0000000000420cc6 <+14480>:	mov    -0x268(%rbp),%edi
   0x0000000000420ccc <+14486>:	mov    -0x264(%rbp),%ecx
   0x0000000000420cd2 <+14492>:	mov    -0x258(%rbp),%eax
   0x0000000000420cd8 <+14498>:	mov    -0x24(%rbp),%esi
   0x0000000000420cdb <+14501>:	mov    -0x20(%rbp),%edx
   0x0000000000420cde <+14504>:	mov    %edi,%r9d
   0x0000000000420ce1 <+14507>:	mov    %esi,%r8d
   0x0000000000420ce4 <+14510>:	mov    %eax,%esi
   0x0000000000420ce6 <+14512>:	mov    $0x42a680,%edi
   0x0000000000420ceb <+14517>:	mov    $0x0,%eax
   0x0000000000420cf0 <+14522>:	callq  0x407810 <printf@plt>
   0x0000000000420cf5 <+14527>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000420cfa <+14532>:	mov    %rax,%rbx
   0x0000000000420cfd <+14535>:	mov    $0x42a17f,%esi
   0x0000000000420d02 <+14540>:	mov    $0x636740,%edi
   0x0000000000420d07 <+14545>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000420d0c <+14550>:	mov    %rbx,%rsi
   0x0000000000420d0f <+14553>:	mov    %rax,%rdi
   0x0000000000420d12 <+14556>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x0000000000420d17 <+14561>:	mov    $0x407a20,%esi
   0x0000000000420d1c <+14566>:	mov    %rax,%rdi
   0x0000000000420d1f <+14569>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000420d24 <+14574>:	mov    $0x429fc8,%esi
   0x0000000000420d29 <+14579>:	mov    $0x636740,%edi
   0x0000000000420d2e <+14584>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000420d33 <+14589>:	mov    $0x407a20,%esi
   0x0000000000420d38 <+14594>:	mov    %rax,%rdi
   0x0000000000420d3b <+14597>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000420d40 <+14602>:	mov    -0x278(%rbp),%rax
   0x0000000000420d47 <+14609>:	lea    0x11c0(%rax),%rdx
   0x0000000000420d4e <+14616>:	lea    -0x264(%rbp),%rax
   0x0000000000420d55 <+14623>:	mov    %rax,%rsi
   0x0000000000420d58 <+14626>:	mov    %rdx,%rdi
   0x0000000000420d5b <+14629>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420d60 <+14634>:	mov    -0x278(%rbp),%rax
   0x0000000000420d67 <+14641>:	lea    0x1258(%rax),%rdx
   0x0000000000420d6e <+14648>:	lea    -0x268(%rbp),%rax
   0x0000000000420d75 <+14655>:	mov    %rax,%rsi
   0x0000000000420d78 <+14658>:	mov    %rdx,%rdi
   0x0000000000420d7b <+14661>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420d80 <+14666>:	mov    -0x278(%rbp),%rax
   0x0000000000420d87 <+14673>:	lea    0x1080(%rax),%rdx
   0x0000000000420d8e <+14680>:	lea    -0x258(%rbp),%rax
   0x0000000000420d95 <+14687>:	mov    %rax,%rsi
   0x0000000000420d98 <+14690>:	mov    %rdx,%rdi
   0x0000000000420d9b <+14693>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x0000000000420da0 <+14698>:	movl   $0x3,-0xa4(%rbp)
   0x0000000000420daa <+14708>:	mov    -0x278(%rbp),%rax
   0x0000000000420db1 <+14715>:	lea    0xf40(%rax),%rdx
   0x0000000000420db8 <+14722>:	lea    -0xa4(%rbp),%rax
   0x0000000000420dbf <+14729>:	mov    %rax,%rsi
   0x0000000000420dc2 <+14732>:	mov    %rdx,%rdi
   0x0000000000420dc5 <+14735>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420dca <+14740>:	movb   $0x1,-0x9e(%rbp)
   0x0000000000420dd1 <+14747>:	mov    -0x278(%rbp),%rax
   0x0000000000420dd8 <+14754>:	lea    0x1638(%rax),%rdx
   0x0000000000420ddf <+14761>:	lea    -0x9e(%rbp),%rax
   0x0000000000420de6 <+14768>:	mov    %rax,%rsi
   0x0000000000420de9 <+14771>:	mov    %rdx,%rdi
   0x0000000000420dec <+14774>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000420df1 <+14779>:	mov    -0x278(%rbp),%rax
   0x0000000000420df8 <+14786>:	mov    %rax,%rdi
   0x0000000000420dfb <+14789>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000420e00 <+14794>:	movb   $0x0,-0x9d(%rbp)
   0x0000000000420e07 <+14801>:	mov    -0x278(%rbp),%rax
   0x0000000000420e0e <+14808>:	lea    0x1638(%rax),%rdx
   0x0000000000420e15 <+14815>:	lea    -0x9d(%rbp),%rax
   0x0000000000420e1c <+14822>:	mov    %rax,%rsi
   0x0000000000420e1f <+14825>:	mov    %rdx,%rdi
   0x0000000000420e22 <+14828>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000420e27 <+14833>:	mov    -0x278(%rbp),%rax
   0x0000000000420e2e <+14840>:	mov    %rax,%rdi
   0x0000000000420e31 <+14843>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000420e36 <+14848>:	jmpq   0x421c8c <decode::entry()+18518>
   0x0000000000420e3b <+14853>:	mov    -0x268(%rbp),%edi
   0x0000000000420e41 <+14859>:	mov    -0x264(%rbp),%ecx
   0x0000000000420e47 <+14865>:	mov    -0x258(%rbp),%eax
   0x0000000000420e4d <+14871>:	mov    -0x24(%rbp),%esi
   0x0000000000420e50 <+14874>:	mov    -0x20(%rbp),%edx
   0x0000000000420e53 <+14877>:	mov    %edi,%r9d
   0x0000000000420e56 <+14880>:	mov    %esi,%r8d
   0x0000000000420e59 <+14883>:	mov    %eax,%esi
   0x0000000000420e5b <+14885>:	mov    $0x42a6a0,%edi
   0x0000000000420e60 <+14890>:	mov    $0x0,%eax
   0x0000000000420e65 <+14895>:	callq  0x407810 <printf@plt>
   0x0000000000420e6a <+14900>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000420e6f <+14905>:	mov    %rax,%rbx
   0x0000000000420e72 <+14908>:	mov    $0x42a17f,%esi
   0x0000000000420e77 <+14913>:	mov    $0x636740,%edi
   0x0000000000420e7c <+14918>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000420e81 <+14923>:	mov    %rbx,%rsi
   0x0000000000420e84 <+14926>:	mov    %rax,%rdi
   0x0000000000420e87 <+14929>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x0000000000420e8c <+14934>:	mov    $0x407a20,%esi
   0x0000000000420e91 <+14939>:	mov    %rax,%rdi
   0x0000000000420e94 <+14942>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000420e99 <+14947>:	mov    $0x429fc8,%esi
   0x0000000000420e9e <+14952>:	mov    $0x636740,%edi
   0x0000000000420ea3 <+14957>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000420ea8 <+14962>:	mov    $0x407a20,%esi
   0x0000000000420ead <+14967>:	mov    %rax,%rdi
   0x0000000000420eb0 <+14970>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000420eb5 <+14975>:	mov    -0x278(%rbp),%rax
   0x0000000000420ebc <+14982>:	lea    0x11c0(%rax),%rdx
   0x0000000000420ec3 <+14989>:	lea    -0x264(%rbp),%rax
   0x0000000000420eca <+14996>:	mov    %rax,%rsi
   0x0000000000420ecd <+14999>:	mov    %rdx,%rdi
   0x0000000000420ed0 <+15002>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420ed5 <+15007>:	mov    -0x278(%rbp),%rax
   0x0000000000420edc <+15014>:	lea    0x1258(%rax),%rdx
   0x0000000000420ee3 <+15021>:	lea    -0x268(%rbp),%rax
   0x0000000000420eea <+15028>:	mov    %rax,%rsi
   0x0000000000420eed <+15031>:	mov    %rdx,%rdi
   0x0000000000420ef0 <+15034>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420ef5 <+15039>:	mov    -0x278(%rbp),%rax
   0x0000000000420efc <+15046>:	lea    0x1080(%rax),%rdx
   0x0000000000420f03 <+15053>:	lea    -0x258(%rbp),%rax
   0x0000000000420f0a <+15060>:	mov    %rax,%rsi
   0x0000000000420f0d <+15063>:	mov    %rdx,%rdi
   0x0000000000420f10 <+15066>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x0000000000420f15 <+15071>:	movl   $0x4,-0x9c(%rbp)
   0x0000000000420f1f <+15081>:	mov    -0x278(%rbp),%rax
   0x0000000000420f26 <+15088>:	lea    0xf40(%rax),%rdx
   0x0000000000420f2d <+15095>:	lea    -0x9c(%rbp),%rax
   0x0000000000420f34 <+15102>:	mov    %rax,%rsi
   0x0000000000420f37 <+15105>:	mov    %rdx,%rdi
   0x0000000000420f3a <+15108>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000420f3f <+15113>:	movb   $0x1,-0x96(%rbp)
   0x0000000000420f46 <+15120>:	mov    -0x278(%rbp),%rax
   0x0000000000420f4d <+15127>:	lea    0x1638(%rax),%rdx
   0x0000000000420f54 <+15134>:	lea    -0x96(%rbp),%rax
   0x0000000000420f5b <+15141>:	mov    %rax,%rsi
   0x0000000000420f5e <+15144>:	mov    %rdx,%rdi
   0x0000000000420f61 <+15147>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000420f66 <+15152>:	mov    -0x278(%rbp),%rax
   0x0000000000420f6d <+15159>:	mov    %rax,%rdi
   0x0000000000420f70 <+15162>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000420f75 <+15167>:	movb   $0x0,-0x95(%rbp)
   0x0000000000420f7c <+15174>:	mov    -0x278(%rbp),%rax
   0x0000000000420f83 <+15181>:	lea    0x1638(%rax),%rdx
   0x0000000000420f8a <+15188>:	lea    -0x95(%rbp),%rax
   0x0000000000420f91 <+15195>:	mov    %rax,%rsi
   0x0000000000420f94 <+15198>:	mov    %rdx,%rdi
   0x0000000000420f97 <+15201>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000420f9c <+15206>:	mov    -0x278(%rbp),%rax
   0x0000000000420fa3 <+15213>:	mov    %rax,%rdi
   0x0000000000420fa6 <+15216>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000420fab <+15221>:	jmpq   0x421c8c <decode::entry()+18518>
   0x0000000000420fb0 <+15226>:	mov    -0x268(%rbp),%edi
   0x0000000000420fb6 <+15232>:	mov    -0x264(%rbp),%ecx
   0x0000000000420fbc <+15238>:	mov    -0x258(%rbp),%eax
   0x0000000000420fc2 <+15244>:	mov    -0x24(%rbp),%esi
   0x0000000000420fc5 <+15247>:	mov    -0x20(%rbp),%edx
   0x0000000000420fc8 <+15250>:	mov    %edi,%r9d
   0x0000000000420fcb <+15253>:	mov    %esi,%r8d
   0x0000000000420fce <+15256>:	mov    %eax,%esi
   0x0000000000420fd0 <+15258>:	mov    $0x42a6c8,%edi
   0x0000000000420fd5 <+15263>:	mov    $0x0,%eax
   0x0000000000420fda <+15268>:	callq  0x407810 <printf@plt>
   0x0000000000420fdf <+15273>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000420fe4 <+15278>:	mov    %rax,%rbx
   0x0000000000420fe7 <+15281>:	mov    $0x42a17f,%esi
   0x0000000000420fec <+15286>:	mov    $0x636740,%edi
   0x0000000000420ff1 <+15291>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000420ff6 <+15296>:	mov    %rbx,%rsi
   0x0000000000420ff9 <+15299>:	mov    %rax,%rdi
   0x0000000000420ffc <+15302>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x0000000000421001 <+15307>:	mov    $0x407a20,%esi
   0x0000000000421006 <+15312>:	mov    %rax,%rdi
   0x0000000000421009 <+15315>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000042100e <+15320>:	mov    $0x429fc8,%esi
   0x0000000000421013 <+15325>:	mov    $0x636740,%edi
   0x0000000000421018 <+15330>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000042101d <+15335>:	mov    $0x407a20,%esi
   0x0000000000421022 <+15340>:	mov    %rax,%rdi
   0x0000000000421025 <+15343>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000042102a <+15348>:	mov    -0x278(%rbp),%rax
   0x0000000000421031 <+15355>:	lea    0x11c0(%rax),%rdx
   0x0000000000421038 <+15362>:	lea    -0x264(%rbp),%rax
   0x000000000042103f <+15369>:	mov    %rax,%rsi
   0x0000000000421042 <+15372>:	mov    %rdx,%rdi
   0x0000000000421045 <+15375>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000042104a <+15380>:	mov    -0x278(%rbp),%rax
   0x0000000000421051 <+15387>:	lea    0x1258(%rax),%rdx
   0x0000000000421058 <+15394>:	lea    -0x268(%rbp),%rax
   0x000000000042105f <+15401>:	mov    %rax,%rsi
   0x0000000000421062 <+15404>:	mov    %rdx,%rdi
   0x0000000000421065 <+15407>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000042106a <+15412>:	mov    -0x278(%rbp),%rax
   0x0000000000421071 <+15419>:	lea    0x1080(%rax),%rdx
   0x0000000000421078 <+15426>:	lea    -0x258(%rbp),%rax
   0x000000000042107f <+15433>:	mov    %rax,%rsi
   0x0000000000421082 <+15436>:	mov    %rdx,%rdi
   0x0000000000421085 <+15439>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000042108a <+15444>:	movl   $0x5,-0x94(%rbp)
   0x0000000000421094 <+15454>:	mov    -0x278(%rbp),%rax
   0x000000000042109b <+15461>:	lea    0xf40(%rax),%rdx
   0x00000000004210a2 <+15468>:	lea    -0x94(%rbp),%rax
   0x00000000004210a9 <+15475>:	mov    %rax,%rsi
   0x00000000004210ac <+15478>:	mov    %rdx,%rdi
   0x00000000004210af <+15481>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x00000000004210b4 <+15486>:	movb   $0x1,-0x8e(%rbp)
   0x00000000004210bb <+15493>:	mov    -0x278(%rbp),%rax
   0x00000000004210c2 <+15500>:	lea    0x1638(%rax),%rdx
   0x00000000004210c9 <+15507>:	lea    -0x8e(%rbp),%rax
   0x00000000004210d0 <+15514>:	mov    %rax,%rsi
   0x00000000004210d3 <+15517>:	mov    %rdx,%rdi
   0x00000000004210d6 <+15520>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x00000000004210db <+15525>:	mov    -0x278(%rbp),%rax
   0x00000000004210e2 <+15532>:	mov    %rax,%rdi
   0x00000000004210e5 <+15535>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004210ea <+15540>:	movb   $0x0,-0x8d(%rbp)
   0x00000000004210f1 <+15547>:	mov    -0x278(%rbp),%rax
   0x00000000004210f8 <+15554>:	lea    0x1638(%rax),%rdx
   0x00000000004210ff <+15561>:	lea    -0x8d(%rbp),%rax
   0x0000000000421106 <+15568>:	mov    %rax,%rsi
   0x0000000000421109 <+15571>:	mov    %rdx,%rdi
   0x000000000042110c <+15574>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421111 <+15579>:	mov    -0x278(%rbp),%rax
   0x0000000000421118 <+15586>:	mov    %rax,%rdi
   0x000000000042111b <+15589>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421120 <+15594>:	jmpq   0x421c8c <decode::entry()+18518>
   0x0000000000421125 <+15599>:	mov    -0x268(%rbp),%edi
   0x000000000042112b <+15605>:	mov    -0x264(%rbp),%ecx
   0x0000000000421131 <+15611>:	mov    -0x258(%rbp),%eax
   0x0000000000421137 <+15617>:	mov    -0x24(%rbp),%esi
   0x000000000042113a <+15620>:	mov    -0x20(%rbp),%edx
   0x000000000042113d <+15623>:	mov    %edi,%r9d
   0x0000000000421140 <+15626>:	mov    %esi,%r8d
   0x0000000000421143 <+15629>:	mov    %eax,%esi
   0x0000000000421145 <+15631>:	mov    $0x42a6e8,%edi
   0x000000000042114a <+15636>:	mov    $0x0,%eax
   0x000000000042114f <+15641>:	callq  0x407810 <printf@plt>
   0x0000000000421154 <+15646>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000421159 <+15651>:	mov    %rax,%rbx
   0x000000000042115c <+15654>:	mov    $0x42a17f,%esi
   0x0000000000421161 <+15659>:	mov    $0x636740,%edi
   0x0000000000421166 <+15664>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000042116b <+15669>:	mov    %rbx,%rsi
   0x000000000042116e <+15672>:	mov    %rax,%rdi
   0x0000000000421171 <+15675>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x0000000000421176 <+15680>:	mov    $0x407a20,%esi
   0x000000000042117b <+15685>:	mov    %rax,%rdi
   0x000000000042117e <+15688>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000421183 <+15693>:	mov    $0x429fc8,%esi
   0x0000000000421188 <+15698>:	mov    $0x636740,%edi
   0x000000000042118d <+15703>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000421192 <+15708>:	mov    $0x407a20,%esi
   0x0000000000421197 <+15713>:	mov    %rax,%rdi
   0x000000000042119a <+15716>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000042119f <+15721>:	mov    -0x278(%rbp),%rax
   0x00000000004211a6 <+15728>:	lea    0x11c0(%rax),%rdx
   0x00000000004211ad <+15735>:	lea    -0x264(%rbp),%rax
   0x00000000004211b4 <+15742>:	mov    %rax,%rsi
   0x00000000004211b7 <+15745>:	mov    %rdx,%rdi
   0x00000000004211ba <+15748>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x00000000004211bf <+15753>:	mov    -0x278(%rbp),%rax
   0x00000000004211c6 <+15760>:	lea    0x1258(%rax),%rdx
   0x00000000004211cd <+15767>:	lea    -0x268(%rbp),%rax
   0x00000000004211d4 <+15774>:	mov    %rax,%rsi
   0x00000000004211d7 <+15777>:	mov    %rdx,%rdi
   0x00000000004211da <+15780>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x00000000004211df <+15785>:	mov    -0x278(%rbp),%rax
   0x00000000004211e6 <+15792>:	lea    0x1080(%rax),%rdx
   0x00000000004211ed <+15799>:	lea    -0x258(%rbp),%rax
   0x00000000004211f4 <+15806>:	mov    %rax,%rsi
   0x00000000004211f7 <+15809>:	mov    %rdx,%rdi
   0x00000000004211fa <+15812>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x00000000004211ff <+15817>:	movl   $0x6,-0x8c(%rbp)
   0x0000000000421209 <+15827>:	mov    -0x278(%rbp),%rax
   0x0000000000421210 <+15834>:	lea    0xf40(%rax),%rdx
   0x0000000000421217 <+15841>:	lea    -0x8c(%rbp),%rax
   0x000000000042121e <+15848>:	mov    %rax,%rsi
   0x0000000000421221 <+15851>:	mov    %rdx,%rdi
   0x0000000000421224 <+15854>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000421229 <+15859>:	movb   $0x1,-0x86(%rbp)
   0x0000000000421230 <+15866>:	mov    -0x278(%rbp),%rax
   0x0000000000421237 <+15873>:	lea    0x1638(%rax),%rdx
   0x000000000042123e <+15880>:	lea    -0x86(%rbp),%rax
   0x0000000000421245 <+15887>:	mov    %rax,%rsi
   0x0000000000421248 <+15890>:	mov    %rdx,%rdi
   0x000000000042124b <+15893>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421250 <+15898>:	mov    -0x278(%rbp),%rax
   0x0000000000421257 <+15905>:	mov    %rax,%rdi
   0x000000000042125a <+15908>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000042125f <+15913>:	movb   $0x0,-0x85(%rbp)
   0x0000000000421266 <+15920>:	mov    -0x278(%rbp),%rax
   0x000000000042126d <+15927>:	lea    0x1638(%rax),%rdx
   0x0000000000421274 <+15934>:	lea    -0x85(%rbp),%rax
   0x000000000042127b <+15941>:	mov    %rax,%rsi
   0x000000000042127e <+15944>:	mov    %rdx,%rdi
   0x0000000000421281 <+15947>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421286 <+15952>:	mov    -0x278(%rbp),%rax
   0x000000000042128d <+15959>:	mov    %rax,%rdi
   0x0000000000421290 <+15962>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421295 <+15967>:	jmpq   0x421c8c <decode::entry()+18518>
   0x000000000042129a <+15972>:	mov    -0x268(%rbp),%edi
   0x00000000004212a0 <+15978>:	mov    -0x264(%rbp),%ecx
   0x00000000004212a6 <+15984>:	mov    -0x258(%rbp),%eax
   0x00000000004212ac <+15990>:	mov    -0x24(%rbp),%esi
   0x00000000004212af <+15993>:	mov    -0x20(%rbp),%edx
   0x00000000004212b2 <+15996>:	mov    %edi,%r9d
   0x00000000004212b5 <+15999>:	mov    %esi,%r8d
   0x00000000004212b8 <+16002>:	mov    %eax,%esi
   0x00000000004212ba <+16004>:	mov    $0x42a710,%edi
   0x00000000004212bf <+16009>:	mov    $0x0,%eax
   0x00000000004212c4 <+16014>:	callq  0x407810 <printf@plt>
   0x00000000004212c9 <+16019>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x00000000004212ce <+16024>:	mov    %rax,%rbx
   0x00000000004212d1 <+16027>:	mov    $0x42a17f,%esi
   0x00000000004212d6 <+16032>:	mov    $0x636740,%edi
   0x00000000004212db <+16037>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004212e0 <+16042>:	mov    %rbx,%rsi
   0x00000000004212e3 <+16045>:	mov    %rax,%rdi
   0x00000000004212e6 <+16048>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x00000000004212eb <+16053>:	mov    $0x407a20,%esi
   0x00000000004212f0 <+16058>:	mov    %rax,%rdi
   0x00000000004212f3 <+16061>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x00000000004212f8 <+16066>:	mov    $0x429fc8,%esi
   0x00000000004212fd <+16071>:	mov    $0x636740,%edi
   0x0000000000421302 <+16076>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000421307 <+16081>:	mov    $0x407a20,%esi
   0x000000000042130c <+16086>:	mov    %rax,%rdi
   0x000000000042130f <+16089>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000421314 <+16094>:	mov    -0x278(%rbp),%rax
   0x000000000042131b <+16101>:	lea    0x11c0(%rax),%rdx
   0x0000000000421322 <+16108>:	lea    -0x264(%rbp),%rax
   0x0000000000421329 <+16115>:	mov    %rax,%rsi
   0x000000000042132c <+16118>:	mov    %rdx,%rdi
   0x000000000042132f <+16121>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000421334 <+16126>:	mov    -0x278(%rbp),%rax
   0x000000000042133b <+16133>:	lea    0x1258(%rax),%rdx
   0x0000000000421342 <+16140>:	lea    -0x268(%rbp),%rax
   0x0000000000421349 <+16147>:	mov    %rax,%rsi
   0x000000000042134c <+16150>:	mov    %rdx,%rdi
   0x000000000042134f <+16153>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000421354 <+16158>:	mov    -0x278(%rbp),%rax
   0x000000000042135b <+16165>:	lea    0x1080(%rax),%rdx
   0x0000000000421362 <+16172>:	lea    -0x258(%rbp),%rax
   0x0000000000421369 <+16179>:	mov    %rax,%rsi
   0x000000000042136c <+16182>:	mov    %rdx,%rdi
   0x000000000042136f <+16185>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x0000000000421374 <+16190>:	movl   $0x7,-0x84(%rbp)
   0x000000000042137e <+16200>:	mov    -0x278(%rbp),%rax
   0x0000000000421385 <+16207>:	lea    0xf40(%rax),%rdx
   0x000000000042138c <+16214>:	lea    -0x84(%rbp),%rax
   0x0000000000421393 <+16221>:	mov    %rax,%rsi
   0x0000000000421396 <+16224>:	mov    %rdx,%rdi
   0x0000000000421399 <+16227>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000042139e <+16232>:	movb   $0x1,-0x7e(%rbp)
   0x00000000004213a2 <+16236>:	mov    -0x278(%rbp),%rax
   0x00000000004213a9 <+16243>:	lea    0x1638(%rax),%rdx
   0x00000000004213b0 <+16250>:	lea    -0x7e(%rbp),%rax
   0x00000000004213b4 <+16254>:	mov    %rax,%rsi
   0x00000000004213b7 <+16257>:	mov    %rdx,%rdi
   0x00000000004213ba <+16260>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x00000000004213bf <+16265>:	mov    -0x278(%rbp),%rax
   0x00000000004213c6 <+16272>:	mov    %rax,%rdi
   0x00000000004213c9 <+16275>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004213ce <+16280>:	movb   $0x0,-0x7d(%rbp)
   0x00000000004213d2 <+16284>:	mov    -0x278(%rbp),%rax
   0x00000000004213d9 <+16291>:	lea    0x1638(%rax),%rdx
   0x00000000004213e0 <+16298>:	lea    -0x7d(%rbp),%rax
   0x00000000004213e4 <+16302>:	mov    %rax,%rsi
   0x00000000004213e7 <+16305>:	mov    %rdx,%rdi
   0x00000000004213ea <+16308>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x00000000004213ef <+16313>:	mov    -0x278(%rbp),%rax
   0x00000000004213f6 <+16320>:	mov    %rax,%rdi
   0x00000000004213f9 <+16323>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004213fe <+16328>:	jmpq   0x421c8c <decode::entry()+18518>
   0x0000000000421403 <+16333>:	mov    -0x268(%rbp),%edi
   0x0000000000421409 <+16339>:	mov    -0x264(%rbp),%ecx
   0x000000000042140f <+16345>:	mov    -0x258(%rbp),%eax
   0x0000000000421415 <+16351>:	mov    -0x24(%rbp),%esi
   0x0000000000421418 <+16354>:	mov    -0x20(%rbp),%edx
   0x000000000042141b <+16357>:	mov    %edi,%r9d
   0x000000000042141e <+16360>:	mov    %esi,%r8d
   0x0000000000421421 <+16363>:	mov    %eax,%esi
   0x0000000000421423 <+16365>:	mov    $0x42a738,%edi
   0x0000000000421428 <+16370>:	mov    $0x0,%eax
   0x000000000042142d <+16375>:	callq  0x407810 <printf@plt>
   0x0000000000421432 <+16380>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000421437 <+16385>:	mov    %rax,%rbx
   0x000000000042143a <+16388>:	mov    $0x42a17f,%esi
   0x000000000042143f <+16393>:	mov    $0x636740,%edi
   0x0000000000421444 <+16398>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000421449 <+16403>:	mov    %rbx,%rsi
   0x000000000042144c <+16406>:	mov    %rax,%rdi
   0x000000000042144f <+16409>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x0000000000421454 <+16414>:	mov    $0x407a20,%esi
   0x0000000000421459 <+16419>:	mov    %rax,%rdi
   0x000000000042145c <+16422>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000421461 <+16427>:	mov    $0x429fc8,%esi
   0x0000000000421466 <+16432>:	mov    $0x636740,%edi
   0x000000000042146b <+16437>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000421470 <+16442>:	mov    $0x407a20,%esi
   0x0000000000421475 <+16447>:	mov    %rax,%rdi
   0x0000000000421478 <+16450>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000042147d <+16455>:	mov    -0x278(%rbp),%rax
   0x0000000000421484 <+16462>:	lea    0x11c0(%rax),%rdx
   0x000000000042148b <+16469>:	lea    -0x264(%rbp),%rax
   0x0000000000421492 <+16476>:	mov    %rax,%rsi
   0x0000000000421495 <+16479>:	mov    %rdx,%rdi
   0x0000000000421498 <+16482>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000042149d <+16487>:	mov    -0x278(%rbp),%rax
   0x00000000004214a4 <+16494>:	lea    0x1258(%rax),%rdx
   0x00000000004214ab <+16501>:	lea    -0x268(%rbp),%rax
   0x00000000004214b2 <+16508>:	mov    %rax,%rsi
   0x00000000004214b5 <+16511>:	mov    %rdx,%rdi
   0x00000000004214b8 <+16514>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x00000000004214bd <+16519>:	mov    -0x278(%rbp),%rax
   0x00000000004214c4 <+16526>:	lea    0x1080(%rax),%rdx
   0x00000000004214cb <+16533>:	lea    -0x258(%rbp),%rax
   0x00000000004214d2 <+16540>:	mov    %rax,%rsi
   0x00000000004214d5 <+16543>:	mov    %rdx,%rdi
   0x00000000004214d8 <+16546>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x00000000004214dd <+16551>:	movl   $0x8,-0x7c(%rbp)
   0x00000000004214e4 <+16558>:	mov    -0x278(%rbp),%rax
   0x00000000004214eb <+16565>:	lea    0xf40(%rax),%rdx
   0x00000000004214f2 <+16572>:	lea    -0x7c(%rbp),%rax
   0x00000000004214f6 <+16576>:	mov    %rax,%rsi
   0x00000000004214f9 <+16579>:	mov    %rdx,%rdi
   0x00000000004214fc <+16582>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000421501 <+16587>:	movb   $0x1,-0x76(%rbp)
   0x0000000000421505 <+16591>:	mov    -0x278(%rbp),%rax
   0x000000000042150c <+16598>:	lea    0x1638(%rax),%rdx
   0x0000000000421513 <+16605>:	lea    -0x76(%rbp),%rax
   0x0000000000421517 <+16609>:	mov    %rax,%rsi
   0x000000000042151a <+16612>:	mov    %rdx,%rdi
   0x000000000042151d <+16615>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421522 <+16620>:	mov    -0x278(%rbp),%rax
   0x0000000000421529 <+16627>:	mov    %rax,%rdi
   0x000000000042152c <+16630>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421531 <+16635>:	movb   $0x0,-0x75(%rbp)
   0x0000000000421535 <+16639>:	mov    -0x278(%rbp),%rax
   0x000000000042153c <+16646>:	lea    0x1638(%rax),%rdx
   0x0000000000421543 <+16653>:	lea    -0x75(%rbp),%rax
   0x0000000000421547 <+16657>:	mov    %rax,%rsi
   0x000000000042154a <+16660>:	mov    %rdx,%rdi
   0x000000000042154d <+16663>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421552 <+16668>:	mov    -0x278(%rbp),%rax
   0x0000000000421559 <+16675>:	mov    %rax,%rdi
   0x000000000042155c <+16678>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421561 <+16683>:	jmpq   0x421c8c <decode::entry()+18518>
   0x0000000000421566 <+16688>:	mov    -0x268(%rbp),%edi
   0x000000000042156c <+16694>:	mov    -0x264(%rbp),%ecx
   0x0000000000421572 <+16700>:	mov    -0x258(%rbp),%eax
   0x0000000000421578 <+16706>:	mov    -0x24(%rbp),%esi
   0x000000000042157b <+16709>:	mov    -0x20(%rbp),%edx
   0x000000000042157e <+16712>:	mov    %edi,%r9d
   0x0000000000421581 <+16715>:	mov    %esi,%r8d
   0x0000000000421584 <+16718>:	mov    %eax,%esi
   0x0000000000421586 <+16720>:	mov    $0x42a760,%edi
   0x000000000042158b <+16725>:	mov    $0x0,%eax
   0x0000000000421590 <+16730>:	callq  0x407810 <printf@plt>
   0x0000000000421595 <+16735>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000042159a <+16740>:	mov    %rax,%rbx
   0x000000000042159d <+16743>:	mov    $0x42a17f,%esi
   0x00000000004215a2 <+16748>:	mov    $0x636740,%edi
   0x00000000004215a7 <+16753>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004215ac <+16758>:	mov    %rbx,%rsi
   0x00000000004215af <+16761>:	mov    %rax,%rdi
   0x00000000004215b2 <+16764>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x00000000004215b7 <+16769>:	mov    $0x407a20,%esi
   0x00000000004215bc <+16774>:	mov    %rax,%rdi
   0x00000000004215bf <+16777>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x00000000004215c4 <+16782>:	mov    $0x429fc8,%esi
   0x00000000004215c9 <+16787>:	mov    $0x636740,%edi
   0x00000000004215ce <+16792>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004215d3 <+16797>:	mov    $0x407a20,%esi
   0x00000000004215d8 <+16802>:	mov    %rax,%rdi
   0x00000000004215db <+16805>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x00000000004215e0 <+16810>:	mov    -0x278(%rbp),%rax
   0x00000000004215e7 <+16817>:	lea    0x11c0(%rax),%rdx
   0x00000000004215ee <+16824>:	lea    -0x264(%rbp),%rax
   0x00000000004215f5 <+16831>:	mov    %rax,%rsi
   0x00000000004215f8 <+16834>:	mov    %rdx,%rdi
   0x00000000004215fb <+16837>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000421600 <+16842>:	mov    -0x278(%rbp),%rax
   0x0000000000421607 <+16849>:	lea    0x1258(%rax),%rdx
   0x000000000042160e <+16856>:	lea    -0x268(%rbp),%rax
   0x0000000000421615 <+16863>:	mov    %rax,%rsi
   0x0000000000421618 <+16866>:	mov    %rdx,%rdi
   0x000000000042161b <+16869>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000421620 <+16874>:	mov    -0x278(%rbp),%rax
   0x0000000000421627 <+16881>:	lea    0x1080(%rax),%rdx
   0x000000000042162e <+16888>:	lea    -0x258(%rbp),%rax
   0x0000000000421635 <+16895>:	mov    %rax,%rsi
   0x0000000000421638 <+16898>:	mov    %rdx,%rdi
   0x000000000042163b <+16901>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x0000000000421640 <+16906>:	movl   $0x9,-0x74(%rbp)
   0x0000000000421647 <+16913>:	mov    -0x278(%rbp),%rax
   0x000000000042164e <+16920>:	lea    0xf40(%rax),%rdx
   0x0000000000421655 <+16927>:	lea    -0x74(%rbp),%rax
   0x0000000000421659 <+16931>:	mov    %rax,%rsi
   0x000000000042165c <+16934>:	mov    %rdx,%rdi
   0x000000000042165f <+16937>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000421664 <+16942>:	movb   $0x1,-0x6e(%rbp)
   0x0000000000421668 <+16946>:	mov    -0x278(%rbp),%rax
   0x000000000042166f <+16953>:	lea    0x1638(%rax),%rdx
   0x0000000000421676 <+16960>:	lea    -0x6e(%rbp),%rax
   0x000000000042167a <+16964>:	mov    %rax,%rsi
   0x000000000042167d <+16967>:	mov    %rdx,%rdi
   0x0000000000421680 <+16970>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421685 <+16975>:	mov    -0x278(%rbp),%rax
   0x000000000042168c <+16982>:	mov    %rax,%rdi
   0x000000000042168f <+16985>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421694 <+16990>:	movb   $0x0,-0x6d(%rbp)
   0x0000000000421698 <+16994>:	mov    -0x278(%rbp),%rax
   0x000000000042169f <+17001>:	lea    0x1638(%rax),%rdx
   0x00000000004216a6 <+17008>:	lea    -0x6d(%rbp),%rax
   0x00000000004216aa <+17012>:	mov    %rax,%rsi
   0x00000000004216ad <+17015>:	mov    %rdx,%rdi
   0x00000000004216b0 <+17018>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x00000000004216b5 <+17023>:	mov    -0x278(%rbp),%rax
   0x00000000004216bc <+17030>:	mov    %rax,%rdi
   0x00000000004216bf <+17033>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004216c4 <+17038>:	jmpq   0x421c8c <decode::entry()+18518>
   0x00000000004216c9 <+17043>:	mov    $0x42a786,%edi
   0x00000000004216ce <+17048>:	mov    $0x0,%eax
   0x00000000004216d3 <+17053>:	callq  0x407810 <printf@plt>
   0x00000000004216d8 <+17058>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x00000000004216dd <+17063>:	mov    %rax,%rbx
   0x00000000004216e0 <+17066>:	mov    $0x42a17f,%esi
   0x00000000004216e5 <+17071>:	mov    $0x636740,%edi
   0x00000000004216ea <+17076>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004216ef <+17081>:	mov    %rbx,%rsi
   0x00000000004216f2 <+17084>:	mov    %rax,%rdi
   0x00000000004216f5 <+17087>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x00000000004216fa <+17092>:	mov    $0x407a20,%esi
   0x00000000004216ff <+17097>:	mov    %rax,%rdi
   0x0000000000421702 <+17100>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000421707 <+17105>:	mov    $0x429fc8,%esi
   0x000000000042170c <+17110>:	mov    $0x636740,%edi
   0x0000000000421711 <+17115>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000421716 <+17120>:	mov    $0x407a20,%esi
   0x000000000042171b <+17125>:	mov    %rax,%rdi
   0x000000000042171e <+17128>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000421723 <+17133>:	movl   $0x0,-0x6c(%rbp)
   0x000000000042172a <+17140>:	mov    -0x278(%rbp),%rax
   0x0000000000421731 <+17147>:	lea    0x11c0(%rax),%rdx
   0x0000000000421738 <+17154>:	lea    -0x6c(%rbp),%rax
   0x000000000042173c <+17158>:	mov    %rax,%rsi
   0x000000000042173f <+17161>:	mov    %rdx,%rdi
   0x0000000000421742 <+17164>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000421747 <+17169>:	movl   $0x0,-0x68(%rbp)
   0x000000000042174e <+17176>:	mov    -0x278(%rbp),%rax
   0x0000000000421755 <+17183>:	lea    0x1258(%rax),%rdx
   0x000000000042175c <+17190>:	lea    -0x68(%rbp),%rax
   0x0000000000421760 <+17194>:	mov    %rax,%rsi
   0x0000000000421763 <+17197>:	mov    %rdx,%rdi
   0x0000000000421766 <+17200>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000042176b <+17205>:	movl   $0x0,-0x64(%rbp)
   0x0000000000421772 <+17212>:	mov    -0x278(%rbp),%rax
   0x0000000000421779 <+17219>:	lea    0x1080(%rax),%rdx
   0x0000000000421780 <+17226>:	lea    -0x64(%rbp),%rax
   0x0000000000421784 <+17230>:	mov    %rax,%rsi
   0x0000000000421787 <+17233>:	mov    %rdx,%rdi
   0x000000000042178a <+17236>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000042178f <+17241>:	movl   $0x0,-0x60(%rbp)
   0x0000000000421796 <+17248>:	mov    -0x278(%rbp),%rax
   0x000000000042179d <+17255>:	lea    0xf40(%rax),%rdx
   0x00000000004217a4 <+17262>:	lea    -0x60(%rbp),%rax
   0x00000000004217a8 <+17266>:	mov    %rax,%rsi
   0x00000000004217ab <+17269>:	mov    %rdx,%rdi
   0x00000000004217ae <+17272>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x00000000004217b3 <+17277>:	movl   $0x0,-0x18(%rbp)
   0x00000000004217ba <+17284>:	cmpl   $0x1f,-0x18(%rbp)
   0x00000000004217be <+17288>:	jg     0x4217e1 <decode::entry()+17323>
   0x00000000004217c0 <+17290>:	mov    -0x278(%rbp),%rax
   0x00000000004217c7 <+17297>:	mov    -0x18(%rbp),%edx
   0x00000000004217ca <+17300>:	movslq %edx,%rdx
   0x00000000004217cd <+17303>:	add    $0x630,%rdx
   0x00000000004217d4 <+17310>:	movl   $0x0,(%rax,%rdx,4)
   0x00000000004217db <+17317>:	addl   $0x1,-0x18(%rbp)
   0x00000000004217df <+17321>:	jmp    0x4217ba <decode::entry()+17284>
   0x00000000004217e1 <+17323>:	mov    -0x278(%rbp),%rax
   0x00000000004217e8 <+17330>:	mov    %rax,%rdi
   0x00000000004217eb <+17333>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004217f0 <+17338>:	mov    -0x278(%rbp),%rax
   0x00000000004217f7 <+17345>:	mov    %rax,%rdi
   0x00000000004217fa <+17348>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004217ff <+17353>:	jmpq   0x421c8c <decode::entry()+18518>
   0x0000000000421804 <+17358>:	mov    -0x260(%rbp),%eax
   0x000000000042180a <+17364>:	mov    %eax,%esi
   0x000000000042180c <+17366>:	mov    $0x42a7a1,%edi
   0x0000000000421811 <+17371>:	mov    $0x0,%eax
   0x0000000000421816 <+17376>:	callq  0x407810 <printf@plt>
   0x000000000042181b <+17381>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000421820 <+17386>:	mov    %rax,%rbx
   0x0000000000421823 <+17389>:	mov    $0x42a17f,%esi
   0x0000000000421828 <+17394>:	mov    $0x636740,%edi
   0x000000000042182d <+17399>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000421832 <+17404>:	mov    %rbx,%rsi
   0x0000000000421835 <+17407>:	mov    %rax,%rdi
   0x0000000000421838 <+17410>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000042183d <+17415>:	mov    $0x407a20,%esi
   0x0000000000421842 <+17420>:	mov    %rax,%rdi
   0x0000000000421845 <+17423>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000042184a <+17428>:	mov    $0x429fc8,%esi
   0x000000000042184f <+17433>:	mov    $0x636740,%edi
   0x0000000000421854 <+17438>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000421859 <+17443>:	mov    $0x407a20,%esi
   0x000000000042185e <+17448>:	mov    %rax,%rdi
   0x0000000000421861 <+17451>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000421866 <+17456>:	movl   $0x0,-0x5c(%rbp)
   0x000000000042186d <+17463>:	mov    -0x278(%rbp),%rax
   0x0000000000421874 <+17470>:	lea    0x11c0(%rax),%rdx
   0x000000000042187b <+17477>:	lea    -0x5c(%rbp),%rax
   0x000000000042187f <+17481>:	mov    %rax,%rsi
   0x0000000000421882 <+17484>:	mov    %rdx,%rdi
   0x0000000000421885 <+17487>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000042188a <+17492>:	movl   $0x0,-0x58(%rbp)
   0x0000000000421891 <+17499>:	mov    -0x278(%rbp),%rax
   0x0000000000421898 <+17506>:	lea    0x1258(%rax),%rdx
   0x000000000042189f <+17513>:	lea    -0x58(%rbp),%rax
   0x00000000004218a3 <+17517>:	mov    %rax,%rsi
   0x00000000004218a6 <+17520>:	mov    %rdx,%rdi
   0x00000000004218a9 <+17523>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x00000000004218ae <+17528>:	movl   $0x0,-0x54(%rbp)
   0x00000000004218b5 <+17535>:	mov    -0x278(%rbp),%rax
   0x00000000004218bc <+17542>:	lea    0x1080(%rax),%rdx
   0x00000000004218c3 <+17549>:	lea    -0x54(%rbp),%rax
   0x00000000004218c7 <+17553>:	mov    %rax,%rsi
   0x00000000004218ca <+17556>:	mov    %rdx,%rdi
   0x00000000004218cd <+17559>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x00000000004218d2 <+17564>:	movl   $0x0,-0x50(%rbp)
   0x00000000004218d9 <+17571>:	mov    -0x278(%rbp),%rax
   0x00000000004218e0 <+17578>:	lea    0xf40(%rax),%rdx
   0x00000000004218e7 <+17585>:	lea    -0x50(%rbp),%rax
   0x00000000004218eb <+17589>:	mov    %rax,%rsi
   0x00000000004218ee <+17592>:	mov    %rdx,%rdi
   0x00000000004218f1 <+17595>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x00000000004218f6 <+17600>:	movb   $0x1,-0x4c(%rbp)
   0x00000000004218fa <+17604>:	mov    -0x278(%rbp),%rax
   0x0000000000421901 <+17611>:	lea    0x16e0(%rax),%rdx
   0x0000000000421908 <+17618>:	lea    -0x4c(%rbp),%rax
   0x000000000042190c <+17622>:	mov    %rax,%rsi
   0x000000000042190f <+17625>:	mov    %rdx,%rdi
   0x0000000000421912 <+17628>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421917 <+17633>:	movb   $0x0,-0x4b(%rbp)
   0x000000000042191b <+17637>:	mov    -0x278(%rbp),%rax
   0x0000000000421922 <+17644>:	lea    0x14e8(%rax),%rdx
   0x0000000000421929 <+17651>:	lea    -0x4b(%rbp),%rax
   0x000000000042192d <+17655>:	mov    %rax,%rsi
   0x0000000000421930 <+17658>:	mov    %rdx,%rdi
   0x0000000000421933 <+17661>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421938 <+17666>:	movb   $0x0,-0x4a(%rbp)
   0x000000000042193c <+17670>:	mov    -0x278(%rbp),%rax
   0x0000000000421943 <+17677>:	lea    0x1590(%rax),%rdx
   0x000000000042194a <+17684>:	lea    -0x4a(%rbp),%rax
   0x000000000042194e <+17688>:	mov    %rax,%rsi
   0x0000000000421951 <+17691>:	mov    %rdx,%rdi
   0x0000000000421954 <+17694>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421959 <+17699>:	movb   $0x0,-0x49(%rbp)
   0x000000000042195d <+17703>:	mov    -0x278(%rbp),%rax
   0x0000000000421964 <+17710>:	lea    0x1638(%rax),%rdx
   0x000000000042196b <+17717>:	lea    -0x49(%rbp),%rax
   0x000000000042196f <+17721>:	mov    %rax,%rsi
   0x0000000000421972 <+17724>:	mov    %rdx,%rdi
   0x0000000000421975 <+17727>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000042197a <+17732>:	mov    -0x260(%rbp),%eax
   0x0000000000421980 <+17738>:	mov    %eax,-0x48(%rbp)
   0x0000000000421983 <+17741>:	mov    -0x278(%rbp),%rax
   0x000000000042198a <+17748>:	lea    0x1788(%rax),%rdx
   0x0000000000421991 <+17755>:	lea    -0x48(%rbp),%rax
   0x0000000000421995 <+17759>:	mov    %rax,%rsi
   0x0000000000421998 <+17762>:	mov    %rdx,%rdi
   0x000000000042199b <+17765>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x00000000004219a0 <+17770>:	mov    -0x278(%rbp),%rax
   0x00000000004219a7 <+17777>:	mov    %rax,%rdi
   0x00000000004219aa <+17780>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004219af <+17785>:	movb   $0x0,-0x41(%rbp)
   0x00000000004219b3 <+17789>:	mov    -0x278(%rbp),%rax
   0x00000000004219ba <+17796>:	lea    0x16e0(%rax),%rdx
   0x00000000004219c1 <+17803>:	lea    -0x41(%rbp),%rax
   0x00000000004219c5 <+17807>:	mov    %rax,%rsi
   0x00000000004219c8 <+17810>:	mov    %rdx,%rdi
   0x00000000004219cb <+17813>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x00000000004219d0 <+17818>:	mov    -0x278(%rbp),%rax
   0x00000000004219d7 <+17825>:	mov    %rax,%rdi
   0x00000000004219da <+17828>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004219df <+17833>:	jmpq   0x421c8c <decode::entry()+18518>
   0x00000000004219e4 <+17838>:	mov    -0x258(%rbp),%eax
   0x00000000004219ea <+17844>:	mov    -0x28(%rbp),%edx
   0x00000000004219ed <+17847>:	mov    %eax,%esi
   0x00000000004219ef <+17849>:	mov    $0x42a7b3,%edi
   0x00000000004219f4 <+17854>:	mov    $0x0,%eax
   0x00000000004219f9 <+17859>:	callq  0x407810 <printf@plt>
   0x00000000004219fe <+17864>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000421a03 <+17869>:	mov    %rax,%rbx
   0x0000000000421a06 <+17872>:	mov    $0x42a006,%esi
   0x0000000000421a0b <+17877>:	mov    $0x636740,%edi
   0x0000000000421a10 <+17882>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000421a15 <+17887>:	mov    %rbx,%rsi
   0x0000000000421a18 <+17890>:	mov    %rax,%rdi
   0x0000000000421a1b <+17893>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x0000000000421a20 <+17898>:	mov    $0x407a20,%esi
   0x0000000000421a25 <+17903>:	mov    %rax,%rdi
   0x0000000000421a28 <+17906>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000421a2d <+17911>:	mov    $0x429fc8,%esi
   0x0000000000421a32 <+17916>:	mov    $0x636740,%edi
   0x0000000000421a37 <+17921>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000421a3c <+17926>:	mov    $0x407a20,%esi
   0x0000000000421a41 <+17931>:	mov    %rax,%rdi
   0x0000000000421a44 <+17934>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000421a49 <+17939>:	mov    -0x28(%rbp),%eax
   0x0000000000421a4c <+17942>:	mov    %eax,-0x40(%rbp)
   0x0000000000421a4f <+17945>:	mov    -0x278(%rbp),%rax
   0x0000000000421a56 <+17952>:	lea    0x11c0(%rax),%rdx
   0x0000000000421a5d <+17959>:	lea    -0x40(%rbp),%rax
   0x0000000000421a61 <+17963>:	mov    %rax,%rsi
   0x0000000000421a64 <+17966>:	mov    %rdx,%rdi
   0x0000000000421a67 <+17969>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000421a6c <+17974>:	movl   $0x0,-0x3c(%rbp)
   0x0000000000421a73 <+17981>:	mov    -0x278(%rbp),%rax
   0x0000000000421a7a <+17988>:	lea    0x1258(%rax),%rdx
   0x0000000000421a81 <+17995>:	lea    -0x3c(%rbp),%rax
   0x0000000000421a85 <+17999>:	mov    %rax,%rsi
   0x0000000000421a88 <+18002>:	mov    %rdx,%rdi
   0x0000000000421a8b <+18005>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000421a90 <+18010>:	mov    -0x278(%rbp),%rax
   0x0000000000421a97 <+18017>:	lea    0x1080(%rax),%rdx
   0x0000000000421a9e <+18024>:	lea    -0x258(%rbp),%rax
   0x0000000000421aa5 <+18031>:	mov    %rax,%rsi
   0x0000000000421aa8 <+18034>:	mov    %rdx,%rdi
   0x0000000000421aab <+18037>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x0000000000421ab0 <+18042>:	movl   $0x3,-0x38(%rbp)
   0x0000000000421ab7 <+18049>:	mov    -0x278(%rbp),%rax
   0x0000000000421abe <+18056>:	lea    0xf40(%rax),%rdx
   0x0000000000421ac5 <+18063>:	lea    -0x38(%rbp),%rax
   0x0000000000421ac9 <+18067>:	mov    %rax,%rsi
   0x0000000000421acc <+18070>:	mov    %rdx,%rdi
   0x0000000000421acf <+18073>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000421ad4 <+18078>:	movb   $0x1,-0x34(%rbp)
   0x0000000000421ad8 <+18082>:	mov    -0x278(%rbp),%rax
   0x0000000000421adf <+18089>:	lea    0x14e8(%rax),%rdx
   0x0000000000421ae6 <+18096>:	lea    -0x34(%rbp),%rax
   0x0000000000421aea <+18100>:	mov    %rax,%rsi
   0x0000000000421aed <+18103>:	mov    %rdx,%rdi
   0x0000000000421af0 <+18106>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421af5 <+18111>:	mov    -0x278(%rbp),%rax
   0x0000000000421afc <+18118>:	mov    %rax,%rdi
   0x0000000000421aff <+18121>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421b04 <+18126>:	movb   $0x0,-0x33(%rbp)
   0x0000000000421b08 <+18130>:	mov    -0x278(%rbp),%rax
   0x0000000000421b0f <+18137>:	lea    0x14e8(%rax),%rdx
   0x0000000000421b16 <+18144>:	lea    -0x33(%rbp),%rax
   0x0000000000421b1a <+18148>:	mov    %rax,%rsi
   0x0000000000421b1d <+18151>:	mov    %rdx,%rdi
   0x0000000000421b20 <+18154>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421b25 <+18159>:	mov    -0x278(%rbp),%rax
   0x0000000000421b2c <+18166>:	mov    %rax,%rdi
   0x0000000000421b2f <+18169>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421b34 <+18174>:	jmpq   0x421c8c <decode::entry()+18518>
   0x0000000000421b39 <+18179>:	mov    $0x42a7c1,%edi
   0x0000000000421b3e <+18184>:	mov    $0x0,%eax
   0x0000000000421b43 <+18189>:	callq  0x407810 <printf@plt>
   0x0000000000421b48 <+18194>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000421b4d <+18199>:	mov    %rax,%rbx
   0x0000000000421b50 <+18202>:	mov    $0x42a7d6,%esi
   0x0000000000421b55 <+18207>:	mov    $0x636740,%edi
   0x0000000000421b5a <+18212>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000421b5f <+18217>:	mov    %rbx,%rsi
   0x0000000000421b62 <+18220>:	mov    %rax,%rdi
   0x0000000000421b65 <+18223>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x0000000000421b6a <+18228>:	mov    $0x407a20,%esi
   0x0000000000421b6f <+18233>:	mov    %rax,%rdi
   0x0000000000421b72 <+18236>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000421b77 <+18241>:	movb   $0x0,-0x32(%rbp)
   0x0000000000421b7b <+18245>:	mov    -0x278(%rbp),%rax
   0x0000000000421b82 <+18252>:	lea    0x14e8(%rax),%rdx
   0x0000000000421b89 <+18259>:	lea    -0x32(%rbp),%rax
   0x0000000000421b8d <+18263>:	mov    %rax,%rsi
   0x0000000000421b90 <+18266>:	mov    %rdx,%rdi
   0x0000000000421b93 <+18269>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421b98 <+18274>:	movb   $0x0,-0x31(%rbp)
   0x0000000000421b9c <+18278>:	mov    -0x278(%rbp),%rax
   0x0000000000421ba3 <+18285>:	lea    0x1590(%rax),%rdx
   0x0000000000421baa <+18292>:	lea    -0x31(%rbp),%rax
   0x0000000000421bae <+18296>:	mov    %rax,%rsi
   0x0000000000421bb1 <+18299>:	mov    %rdx,%rdi
   0x0000000000421bb4 <+18302>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421bb9 <+18307>:	movb   $0x0,-0x30(%rbp)
   0x0000000000421bbd <+18311>:	mov    -0x278(%rbp),%rax
   0x0000000000421bc4 <+18318>:	lea    0x1638(%rax),%rdx
   0x0000000000421bcb <+18325>:	lea    -0x30(%rbp),%rax
   0x0000000000421bcf <+18329>:	mov    %rax,%rsi
   0x0000000000421bd2 <+18332>:	mov    %rdx,%rdi
   0x0000000000421bd5 <+18335>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421bda <+18340>:	mov    -0x278(%rbp),%rax
   0x0000000000421be1 <+18347>:	mov    %rax,%rdi
   0x0000000000421be4 <+18350>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421be9 <+18355>:	mov    $0x42a7e0,%edi
   0x0000000000421bee <+18360>:	callq  0x407f50 <puts@plt>
   0x0000000000421bf3 <+18365>:	mov    $0x429fc8,%esi
   0x0000000000421bf8 <+18370>:	mov    $0x636740,%edi
   0x0000000000421bfd <+18375>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000421c02 <+18380>:	mov    $0x407a20,%esi
   0x0000000000421c07 <+18385>:	mov    %rax,%rdi
   0x0000000000421c0a <+18388>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000421c0f <+18393>:	callq  0x407c10 <_ZN7sc_core7sc_stopEv@plt>
   0x0000000000421c14 <+18398>:	mov    $0x42a800,%edi
   0x0000000000421c19 <+18403>:	callq  0x407f50 <puts@plt>
   0x0000000000421c1e <+18408>:	mov    -0x278(%rbp),%rax
   0x0000000000421c25 <+18415>:	mov    %rax,%rdi
   0x0000000000421c28 <+18418>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421c2d <+18423>:	mov    -0x278(%rbp),%rax
   0x0000000000421c34 <+18430>:	mov    %rax,%rdi
   0x0000000000421c37 <+18433>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421c3c <+18438>:	jmp    0x421c8c <decode::entry()+18518>
   0x0000000000421c3e <+18440>:	mov    $0x42a854,%edi
   0x0000000000421c43 <+18445>:	mov    $0x0,%eax
   0x0000000000421c48 <+18450>:	callq  0x407810 <printf@plt>
   0x0000000000421c4d <+18455>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000421c52 <+18460>:	mov    %rax,%rbx
   0x0000000000421c55 <+18463>:	mov    $0x42a17f,%esi
   0x0000000000421c5a <+18468>:	mov    $0x636740,%edi
   0x0000000000421c5f <+18473>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000421c64 <+18478>:	mov    %rbx,%rsi
   0x0000000000421c67 <+18481>:	mov    %rax,%rdi
   0x0000000000421c6a <+18484>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x0000000000421c6f <+18489>:	mov    $0x407a20,%esi
   0x0000000000421c74 <+18494>:	mov    %rax,%rdi
   0x0000000000421c77 <+18497>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000421c7c <+18502>:	mov    -0x278(%rbp),%rax
   0x0000000000421c83 <+18509>:	mov    %rax,%rdi
   0x0000000000421c86 <+18512>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421c8b <+18517>:	nop
   0x0000000000421c8c <+18518>:	movb   $0x1,-0x2f(%rbp)
   0x0000000000421c90 <+18522>:	mov    -0x278(%rbp),%rax
   0x0000000000421c97 <+18529>:	lea    0xc18(%rax),%rdx
   0x0000000000421c9e <+18536>:	lea    -0x2f(%rbp),%rax
   0x0000000000421ca2 <+18540>:	mov    %rax,%rsi
   0x0000000000421ca5 <+18543>:	mov    %rdx,%rdi
   0x0000000000421ca8 <+18546>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421cad <+18551>:	mov    -0x278(%rbp),%rax
   0x0000000000421cb4 <+18558>:	mov    %rax,%rdi
   0x0000000000421cb7 <+18561>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421cbc <+18566>:	jmpq   0x41d565 <decode::entry()+303>
   0x0000000000421cc1 <+18571>:	movb   $0x1,-0x2e(%rbp)
   0x0000000000421cc5 <+18575>:	mov    -0x278(%rbp),%rax
   0x0000000000421ccc <+18582>:	lea    0xc18(%rax),%rdx
   0x0000000000421cd3 <+18589>:	lea    -0x2e(%rbp),%rax
   0x0000000000421cd7 <+18593>:	mov    %rax,%rsi
   0x0000000000421cda <+18596>:	mov    %rdx,%rdi
   0x0000000000421cdd <+18599>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000421ce2 <+18604>:	mov    -0x278(%rbp),%rax
   0x0000000000421ce9 <+18611>:	mov    %rax,%rdi
   0x0000000000421cec <+18614>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421cf1 <+18619>:	jmpq   0x41d565 <decode::entry()+303>
End of assembler dump.
Line 370 of "main.cpp" starts at address 0x40ab8e <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x40ab9c <__static_initialization_and_destruction_0(int, int)+14>.
Line 102 of "icache.cpp" starts at address 0x41c70b <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c719 <__static_initialization_and_destruction_0(int, int)+14>.
Line 177 of "exec.cpp" starts at address 0x4222d7 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4222e5 <__static_initialization_and_destruction_0(int, int)+14>.
Line 59 of "pic.cpp" starts at address 0x42369f <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4236ad <__static_initialization_and_destruction_0(int, int)+14>.
Line 787 of "decode.cpp" starts at address 0x421cf6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x421d04 <__static_initialization_and_destruction_0(int, int)+14>.
Line 78 of "bios.cpp" starts at address 0x41bf79 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41bf87 <__static_initialization_and_destruction_0(int, int)+14>.
Line 86 of "paging.cpp" starts at address 0x41c443 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c451 <__static_initialization_and_destruction_0(int, int)+14>.
Line 250 of "mmxu.cpp" starts at address 0x422aaf <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422abd <__static_initialization_and_destruction_0(int, int)+14>.
Line 90 of "dcache.cpp" starts at address 0x423461 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x42346f <__static_initialization_and_destruction_0(int, int)+14>.
Line 180 of "floating.cpp" starts at address 0x422fc6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422fd4 <__static_initialization_and_destruction_0(int, int)+14>.
Line 189 of "fetch.cpp" starts at address 0x41d2e1 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41d2ef <__static_initialization_and_destruction_0(int, int)+14>.

Temporary breakpoint 4, exec::entry (this=0x7fffffff5e00) at exec.cpp:44
warning: Source file is more recent than executable.
44	
Dump of assembler code for function exec::entry():
   0x0000000000421d58 <+0>:	push   %rbp
   0x0000000000421d59 <+1>:	mov    %rsp,%rbp
   0x0000000000421d5c <+4>:	push   %rbx
   0x0000000000421d5d <+5>:	sub    $0x58,%rsp
   0x0000000000421d61 <+9>:	mov    %rdi,-0x58(%rbp)
=> 0x0000000000421d65 <+13>:	movl   $0x0,-0x1c(%rbp)
   0x0000000000421d6c <+20>:	movl   $0x0,-0x20(%rbp)
   0x0000000000421d73 <+27>:	movl   $0x0,-0x24(%rbp)
   0x0000000000421d7a <+34>:	movl   $0x0,-0x28(%rbp)
   0x0000000000421d81 <+41>:	movq   $0x0,-0x18(%rbp)
   0x0000000000421d89 <+49>:	movl   $0x0,-0x48(%rbp)
   0x0000000000421d90 <+56>:	mov    -0x58(%rbp),%rax
   0x0000000000421d94 <+60>:	mov    $0x3,%esi
   0x0000000000421d99 <+65>:	mov    %rax,%rdi
   0x0000000000421d9c <+68>:	callq  0x41c000 <sc_core::sc_module::wait(int)>
   0x0000000000421da1 <+73>:	mov    -0x58(%rbp),%rax
   0x0000000000421da5 <+77>:	add    $0x170,%rax
   0x0000000000421dab <+83>:	mov    %rax,%rdi
   0x0000000000421dae <+86>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x0000000000421db3 <+91>:	movzbl (%rax),%eax
   0x0000000000421db6 <+94>:	test   %al,%al
   0x0000000000421db8 <+96>:	je     0x4222c6 <exec::entry()+1390>
   0x0000000000421dbe <+102>:	mov    -0x58(%rbp),%rax
   0x0000000000421dc2 <+106>:	add    $0x470,%rax
   0x0000000000421dc8 <+112>:	mov    %rax,%rdi
   0x0000000000421dcb <+115>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x0000000000421dd0 <+120>:	mov    (%rax),%eax
   0x0000000000421dd2 <+122>:	mov    %eax,-0x24(%rbp)
   0x0000000000421dd5 <+125>:	mov    -0x58(%rbp),%rax
   0x0000000000421dd9 <+129>:	add    $0x500,%rax
   0x0000000000421ddf <+135>:	mov    %rax,%rdi
   0x0000000000421de2 <+138>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x0000000000421de7 <+143>:	mov    (%rax),%eax
   0x0000000000421de9 <+145>:	mov    %eax,-0x28(%rbp)
   0x0000000000421dec <+148>:	mov    -0x58(%rbp),%rax
   0x0000000000421df0 <+152>:	add    $0x210,%rax
   0x0000000000421df6 <+158>:	mov    %rax,%rdi
   0x0000000000421df9 <+161>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x0000000000421dfe <+166>:	mov    (%rax),%eax
   0x0000000000421e00 <+168>:	mov    %eax,-0x1c(%rbp)
   0x0000000000421e03 <+171>:	mov    -0x58(%rbp),%rax
   0x0000000000421e07 <+175>:	add    $0x6d0,%rax
   0x0000000000421e0d <+181>:	mov    %rax,%rdi
   0x0000000000421e10 <+184>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x0000000000421e15 <+189>:	mov    (%rax),%eax
   0x0000000000421e17 <+191>:	mov    %eax,-0x48(%rbp)
   0x0000000000421e1a <+194>:	cmpl   $0xe,-0x1c(%rbp)
   0x0000000000421e1e <+198>:	ja     0x422014 <exec::entry()+700>
   0x0000000000421e24 <+204>:	mov    -0x1c(%rbp),%eax
   0x0000000000421e27 <+207>:	mov    0x42b1c0(,%rax,8),%rax
   0x0000000000421e2f <+215>:	jmpq   *%rax
   0x0000000000421e31 <+217>:	mov    -0x58(%rbp),%rax
   0x0000000000421e35 <+221>:	mov    %rax,%rdi
   0x0000000000421e38 <+224>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421e3d <+229>:	jmpq   0x422029 <exec::entry()+721>
   0x0000000000421e42 <+234>:	mov    -0x24(%rbp),%edx
   0x0000000000421e45 <+237>:	mov    -0x28(%rbp),%eax
   0x0000000000421e48 <+240>:	add    %eax,%edx
   0x0000000000421e4a <+242>:	mov    -0x20(%rbp),%eax
   0x0000000000421e4d <+245>:	add    %edx,%eax
   0x0000000000421e4f <+247>:	cltq   
   0x0000000000421e51 <+249>:	mov    %rax,-0x18(%rbp)
   0x0000000000421e55 <+253>:	mov    -0x58(%rbp),%rax
   0x0000000000421e59 <+257>:	mov    %rax,%rdi
   0x0000000000421e5c <+260>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421e61 <+265>:	jmpq   0x422029 <exec::entry()+721>
   0x0000000000421e66 <+270>:	mov    -0x24(%rbp),%eax
   0x0000000000421e69 <+273>:	sub    -0x28(%rbp),%eax
   0x0000000000421e6c <+276>:	sub    -0x20(%rbp),%eax
   0x0000000000421e6f <+279>:	cltq   
   0x0000000000421e71 <+281>:	mov    %rax,-0x18(%rbp)
   0x0000000000421e75 <+285>:	mov    -0x58(%rbp),%rax
   0x0000000000421e79 <+289>:	mov    %rax,%rdi
   0x0000000000421e7c <+292>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421e81 <+297>:	jmpq   0x422029 <exec::entry()+721>
   0x0000000000421e86 <+302>:	mov    -0x24(%rbp),%edx
   0x0000000000421e89 <+305>:	mov    -0x28(%rbp),%eax
   0x0000000000421e8c <+308>:	add    %edx,%eax
   0x0000000000421e8e <+310>:	cltq   
   0x0000000000421e90 <+312>:	mov    %rax,-0x18(%rbp)
   0x0000000000421e94 <+316>:	mov    -0x58(%rbp),%rax
   0x0000000000421e98 <+320>:	mov    %rax,%rdi
   0x0000000000421e9b <+323>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421ea0 <+328>:	jmpq   0x422029 <exec::entry()+721>
   0x0000000000421ea5 <+333>:	mov    -0x24(%rbp),%eax
   0x0000000000421ea8 <+336>:	sub    -0x28(%rbp),%eax
   0x0000000000421eab <+339>:	cltq   
   0x0000000000421ead <+341>:	mov    %rax,-0x18(%rbp)
   0x0000000000421eb1 <+345>:	mov    -0x58(%rbp),%rax
   0x0000000000421eb5 <+349>:	mov    %rax,%rdi
   0x0000000000421eb8 <+352>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421ebd <+357>:	jmpq   0x422029 <exec::entry()+721>
   0x0000000000421ec2 <+362>:	mov    -0x24(%rbp),%eax
   0x0000000000421ec5 <+365>:	imul   -0x28(%rbp),%eax
   0x0000000000421ec9 <+369>:	cltq   
   0x0000000000421ecb <+371>:	mov    %rax,-0x18(%rbp)
   0x0000000000421ecf <+375>:	mov    -0x58(%rbp),%rax
   0x0000000000421ed3 <+379>:	mov    %rax,%rdi
   0x0000000000421ed6 <+382>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421edb <+387>:	mov    -0x58(%rbp),%rax
   0x0000000000421edf <+391>:	mov    %rax,%rdi
   0x0000000000421ee2 <+394>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421ee7 <+399>:	jmpq   0x422029 <exec::entry()+721>
   0x0000000000421eec <+404>:	cmpl   $0x0,-0x28(%rbp)
   0x0000000000421ef0 <+408>:	jne    0x421efe <exec::entry()+422>
   0x0000000000421ef2 <+410>:	mov    $0x42b128,%edi
   0x0000000000421ef7 <+415>:	callq  0x407f50 <puts@plt>
   0x0000000000421efc <+420>:	jmp    0x421f0b <exec::entry()+435>
   0x0000000000421efe <+422>:	mov    -0x24(%rbp),%eax
   0x0000000000421f01 <+425>:	cltd   
   0x0000000000421f02 <+426>:	idivl  -0x28(%rbp)
   0x0000000000421f05 <+429>:	cltq   
   0x0000000000421f07 <+431>:	mov    %rax,-0x18(%rbp)
   0x0000000000421f0b <+435>:	mov    -0x58(%rbp),%rax
   0x0000000000421f0f <+439>:	mov    %rax,%rdi
   0x0000000000421f12 <+442>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421f17 <+447>:	mov    -0x58(%rbp),%rax
   0x0000000000421f1b <+451>:	mov    %rax,%rdi
   0x0000000000421f1e <+454>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421f23 <+459>:	jmpq   0x422029 <exec::entry()+721>
   0x0000000000421f28 <+464>:	mov    -0x24(%rbp),%eax
   0x0000000000421f2b <+467>:	and    -0x28(%rbp),%eax
   0x0000000000421f2e <+470>:	not    %eax
   0x0000000000421f30 <+472>:	cltq   
   0x0000000000421f32 <+474>:	mov    %rax,-0x18(%rbp)
   0x0000000000421f36 <+478>:	mov    -0x58(%rbp),%rax
   0x0000000000421f3a <+482>:	mov    %rax,%rdi
   0x0000000000421f3d <+485>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421f42 <+490>:	jmpq   0x422029 <exec::entry()+721>
   0x0000000000421f47 <+495>:	mov    -0x24(%rbp),%eax
   0x0000000000421f4a <+498>:	and    -0x28(%rbp),%eax
   0x0000000000421f4d <+501>:	cltq   
   0x0000000000421f4f <+503>:	mov    %rax,-0x18(%rbp)
   0x0000000000421f53 <+507>:	mov    -0x58(%rbp),%rax
   0x0000000000421f57 <+511>:	mov    %rax,%rdi
   0x0000000000421f5a <+514>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421f5f <+519>:	jmpq   0x422029 <exec::entry()+721>
   0x0000000000421f64 <+524>:	mov    -0x24(%rbp),%eax
   0x0000000000421f67 <+527>:	or     -0x28(%rbp),%eax
   0x0000000000421f6a <+530>:	cltq   
   0x0000000000421f6c <+532>:	mov    %rax,-0x18(%rbp)
   0x0000000000421f70 <+536>:	mov    -0x58(%rbp),%rax
   0x0000000000421f74 <+540>:	mov    %rax,%rdi
   0x0000000000421f77 <+543>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421f7c <+548>:	jmpq   0x422029 <exec::entry()+721>
   0x0000000000421f81 <+553>:	mov    -0x24(%rbp),%eax
   0x0000000000421f84 <+556>:	xor    -0x28(%rbp),%eax
   0x0000000000421f87 <+559>:	cltq   
   0x0000000000421f89 <+561>:	mov    %rax,-0x18(%rbp)
   0x0000000000421f8d <+565>:	mov    -0x58(%rbp),%rax
   0x0000000000421f91 <+569>:	mov    %rax,%rdi
   0x0000000000421f94 <+572>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421f99 <+577>:	jmpq   0x422029 <exec::entry()+721>
   0x0000000000421f9e <+582>:	mov    -0x24(%rbp),%eax
   0x0000000000421fa1 <+585>:	not    %eax
   0x0000000000421fa3 <+587>:	cltq   
   0x0000000000421fa5 <+589>:	mov    %rax,-0x18(%rbp)
   0x0000000000421fa9 <+593>:	mov    -0x58(%rbp),%rax
   0x0000000000421fad <+597>:	mov    %rax,%rdi
   0x0000000000421fb0 <+600>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421fb5 <+605>:	jmp    0x422029 <exec::entry()+721>
   0x0000000000421fb7 <+607>:	mov    -0x28(%rbp),%eax
   0x0000000000421fba <+610>:	mov    -0x24(%rbp),%edx
   0x0000000000421fbd <+613>:	mov    %eax,%ecx
   0x0000000000421fbf <+615>:	shl    %cl,%edx
   0x0000000000421fc1 <+617>:	mov    %edx,%eax
   0x0000000000421fc3 <+619>:	cltq   
   0x0000000000421fc5 <+621>:	mov    %rax,-0x18(%rbp)
   0x0000000000421fc9 <+625>:	mov    -0x58(%rbp),%rax
   0x0000000000421fcd <+629>:	mov    %rax,%rdi
   0x0000000000421fd0 <+632>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421fd5 <+637>:	jmp    0x422029 <exec::entry()+721>
   0x0000000000421fd7 <+639>:	mov    -0x28(%rbp),%eax
   0x0000000000421fda <+642>:	mov    -0x24(%rbp),%edx
   0x0000000000421fdd <+645>:	mov    %eax,%ecx
   0x0000000000421fdf <+647>:	sar    %cl,%edx
   0x0000000000421fe1 <+649>:	mov    %edx,%eax
   0x0000000000421fe3 <+651>:	cltq   
   0x0000000000421fe5 <+653>:	mov    %rax,-0x18(%rbp)
   0x0000000000421fe9 <+657>:	mov    -0x58(%rbp),%rax
   0x0000000000421fed <+661>:	mov    %rax,%rdi
   0x0000000000421ff0 <+664>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000421ff5 <+669>:	jmp    0x422029 <exec::entry()+721>
   0x0000000000421ff7 <+671>:	mov    -0x24(%rbp),%eax
   0x0000000000421ffa <+674>:	cltd   
   0x0000000000421ffb <+675>:	idivl  -0x28(%rbp)
   0x0000000000421ffe <+678>:	mov    %edx,%eax
   0x0000000000422000 <+680>:	cltq   
   0x0000000000422002 <+682>:	mov    %rax,-0x18(%rbp)
   0x0000000000422006 <+686>:	mov    -0x58(%rbp),%rax
   0x000000000042200a <+690>:	mov    %rax,%rdi
   0x000000000042200d <+693>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422012 <+698>:	jmp    0x422029 <exec::entry()+721>
   0x0000000000422014 <+700>:	mov    -0x1c(%rbp),%eax
   0x0000000000422017 <+703>:	mov    %eax,%esi
   0x0000000000422019 <+705>:	mov    $0x42b14d,%edi
   0x000000000042201e <+710>:	mov    $0x0,%eax
   0x0000000000422023 <+715>:	callq  0x407810 <printf@plt>
   0x0000000000422028 <+720>:	nop
   0x0000000000422029 <+721>:	mov    -0x18(%rbp),%rax
   0x000000000042202d <+725>:	mov    %eax,-0x44(%rbp)
   0x0000000000422030 <+728>:	mov    -0x58(%rbp),%rax
   0x0000000000422034 <+732>:	lea    0x958(%rax),%rdx
   0x000000000042203b <+739>:	lea    -0x44(%rbp),%rax
   0x000000000042203f <+743>:	mov    %rax,%rsi
   0x0000000000422042 <+746>:	mov    %rdx,%rdi
   0x0000000000422045 <+749>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x000000000042204a <+754>:	movb   $0x1,-0x40(%rbp)
   0x000000000042204e <+758>:	mov    -0x58(%rbp),%rax
   0x0000000000422052 <+762>:	lea    0x9f0(%rax),%rdx
   0x0000000000422059 <+769>:	lea    -0x40(%rbp),%rax
   0x000000000042205d <+773>:	mov    %rax,%rsi
   0x0000000000422060 <+776>:	mov    %rdx,%rdi
   0x0000000000422063 <+779>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000422068 <+784>:	mov    -0x58(%rbp),%rax
   0x000000000042206c <+788>:	lea    0xa98(%rax),%rdx
   0x0000000000422073 <+795>:	lea    -0x48(%rbp),%rax
   0x0000000000422077 <+799>:	mov    %rax,%rsi
   0x000000000042207a <+802>:	mov    %rdx,%rdi
   0x000000000042207d <+805>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x0000000000422082 <+810>:	cmpq   $0x0,-0x18(%rbp)
   0x0000000000422087 <+815>:	jne    0x4220a9 <exec::entry()+849>
   0x0000000000422089 <+817>:	movb   $0x1,-0x3f(%rbp)
   0x000000000042208d <+821>:	mov    -0x58(%rbp),%rax
   0x0000000000422091 <+825>:	lea    0x8b0(%rax),%rdx
   0x0000000000422098 <+832>:	lea    -0x3f(%rbp),%rax
   0x000000000042209c <+836>:	mov    %rax,%rsi
   0x000000000042209f <+839>:	mov    %rdx,%rdi
   0x00000000004220a2 <+842>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x00000000004220a7 <+847>:	jmp    0x4220c7 <exec::entry()+879>
   0x00000000004220a9 <+849>:	movb   $0x0,-0x3e(%rbp)
   0x00000000004220ad <+853>:	mov    -0x58(%rbp),%rax
   0x00000000004220b1 <+857>:	lea    0x8b0(%rax),%rdx
   0x00000000004220b8 <+864>:	lea    -0x3e(%rbp),%rax
   0x00000000004220bc <+868>:	mov    %rax,%rsi
   0x00000000004220bf <+871>:	mov    %rdx,%rdi
   0x00000000004220c2 <+874>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x00000000004220c7 <+879>:	mov    -0x18(%rbp),%rax
   0x00000000004220cb <+883>:	sar    $0x3f,%rax
   0x00000000004220cf <+887>:	mov    %rax,%rdx
   0x00000000004220d2 <+890>:	xor    -0x18(%rbp),%rdx
   0x00000000004220d6 <+894>:	sub    %rax,%rdx
   0x00000000004220d9 <+897>:	mov    %rdx,%rax
   0x00000000004220dc <+900>:	mov    %rax,-0x30(%rbp)
   0x00000000004220e0 <+904>:	movabs $0x100000000,%rax
   0x00000000004220ea <+914>:	mov    %rax,-0x38(%rbp)
   0x00000000004220ee <+918>:	movabs $0x100000000,%rax
   0x00000000004220f8 <+928>:	and    -0x30(%rbp),%rax
   0x00000000004220fc <+932>:	test   %rax,%rax
   0x00000000004220ff <+935>:	je     0x422121 <exec::entry()+969>
   0x0000000000422101 <+937>:	movb   $0x1,-0x3d(%rbp)
   0x0000000000422105 <+941>:	mov    -0x58(%rbp),%rax
   0x0000000000422109 <+945>:	lea    0x760(%rax),%rdx
   0x0000000000422110 <+952>:	lea    -0x3d(%rbp),%rax
   0x0000000000422114 <+956>:	mov    %rax,%rsi
   0x0000000000422117 <+959>:	mov    %rdx,%rdi
   0x000000000042211a <+962>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000042211f <+967>:	jmp    0x42213f <exec::entry()+999>
   0x0000000000422121 <+969>:	movb   $0x0,-0x3c(%rbp)
   0x0000000000422125 <+973>:	mov    -0x58(%rbp),%rax
   0x0000000000422129 <+977>:	lea    0x760(%rax),%rdx
   0x0000000000422130 <+984>:	lea    -0x3c(%rbp),%rax
   0x0000000000422134 <+988>:	mov    %rax,%rsi
   0x0000000000422137 <+991>:	mov    %rdx,%rdi
   0x000000000042213a <+994>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000042213f <+999>:	movabs $0x100000000,%rax
   0x0000000000422149 <+1009>:	cmp    %rax,-0x30(%rbp)
   0x000000000042214d <+1013>:	jle    0x42216f <exec::entry()+1047>
   0x000000000042214f <+1015>:	movb   $0x1,-0x3b(%rbp)
   0x0000000000422153 <+1019>:	mov    -0x58(%rbp),%rax
   0x0000000000422157 <+1023>:	lea    0x808(%rax),%rdx
   0x000000000042215e <+1030>:	lea    -0x3b(%rbp),%rax
   0x0000000000422162 <+1034>:	mov    %rax,%rsi
   0x0000000000422165 <+1037>:	mov    %rdx,%rdi
   0x0000000000422168 <+1040>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000042216d <+1045>:	jmp    0x42218d <exec::entry()+1077>
   0x000000000042216f <+1047>:	movb   $0x0,-0x3a(%rbp)
   0x0000000000422173 <+1051>:	mov    -0x58(%rbp),%rax
   0x0000000000422177 <+1055>:	lea    0x808(%rax),%rdx
   0x000000000042217e <+1062>:	lea    -0x3a(%rbp),%rax
   0x0000000000422182 <+1066>:	mov    %rax,%rsi
   0x0000000000422185 <+1069>:	mov    %rdx,%rdi
   0x0000000000422188 <+1072>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000042218d <+1077>:	mov    $0x42b168,%edi
   0x0000000000422192 <+1082>:	callq  0x407f50 <puts@plt>
   0x0000000000422197 <+1087>:	mov    $0x42b18f,%esi
   0x000000000042219c <+1092>:	mov    $0x636740,%edi
   0x00000000004221a1 <+1097>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004221a6 <+1102>:	mov    $0x42b19c,%esi
   0x00000000004221ab <+1107>:	mov    %rax,%rdi
   0x00000000004221ae <+1110>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004221b3 <+1115>:	mov    %rax,%rdx
   0x00000000004221b6 <+1118>:	mov    -0x1c(%rbp),%eax
   0x00000000004221b9 <+1121>:	mov    %eax,%esi
   0x00000000004221bb <+1123>:	mov    %rdx,%rdi
   0x00000000004221be <+1126>:	callq  0x408030 <_ZNSolsEi@plt>
   0x00000000004221c3 <+1131>:	mov    $0x42b1a2,%esi
   0x00000000004221c8 <+1136>:	mov    %rax,%rdi
   0x00000000004221cb <+1139>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004221d0 <+1144>:	mov    %rax,%rdx
   0x00000000004221d3 <+1147>:	mov    -0x24(%rbp),%eax
   0x00000000004221d6 <+1150>:	mov    %eax,%esi
   0x00000000004221d8 <+1152>:	mov    %rdx,%rdi
   0x00000000004221db <+1155>:	callq  0x408030 <_ZNSolsEi@plt>
   0x00000000004221e0 <+1160>:	mov    $0x42b1a7,%esi
   0x00000000004221e5 <+1165>:	mov    %rax,%rdi
   0x00000000004221e8 <+1168>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004221ed <+1173>:	mov    %rax,%rdx
   0x00000000004221f0 <+1176>:	mov    -0x28(%rbp),%eax
   0x00000000004221f3 <+1179>:	mov    %eax,%esi
   0x00000000004221f5 <+1181>:	mov    %rdx,%rdi
   0x00000000004221f8 <+1184>:	callq  0x408030 <_ZNSolsEi@plt>
   0x00000000004221fd <+1189>:	mov    $0x407a20,%esi
   0x0000000000422202 <+1194>:	mov    %rax,%rdi
   0x0000000000422205 <+1197>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000042220a <+1202>:	mov    -0x48(%rbp),%ebx
   0x000000000042220d <+1205>:	mov    $0x42b18f,%esi
   0x0000000000422212 <+1210>:	mov    $0x636740,%edi
   0x0000000000422217 <+1215>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000042221c <+1220>:	mov    $0x42b1ac,%esi
   0x0000000000422221 <+1225>:	mov    %rax,%rdi
   0x0000000000422224 <+1228>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000422229 <+1233>:	mov    %rax,%rdx
   0x000000000042222c <+1236>:	mov    -0x18(%rbp),%rax
   0x0000000000422230 <+1240>:	mov    %rax,%rsi
   0x0000000000422233 <+1243>:	mov    %rdx,%rdi
   0x0000000000422236 <+1246>:	callq  0x407a40 <_ZNSolsEx@plt>
   0x000000000042223b <+1251>:	mov    $0x42b1b1,%esi
   0x0000000000422240 <+1256>:	mov    %rax,%rdi
   0x0000000000422243 <+1259>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000422248 <+1264>:	mov    %ebx,%esi
   0x000000000042224a <+1266>:	mov    %rax,%rdi
   0x000000000042224d <+1269>:	callq  0x407e40 <_ZNSolsEj@plt>
   0x0000000000422252 <+1274>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000422257 <+1279>:	mov    %rax,%rbx
   0x000000000042225a <+1282>:	mov    $0x42b1b6,%esi
   0x000000000042225f <+1287>:	mov    $0x636740,%edi
   0x0000000000422264 <+1292>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000422269 <+1297>:	mov    %rbx,%rsi
   0x000000000042226c <+1300>:	mov    %rax,%rdi
   0x000000000042226f <+1303>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x0000000000422274 <+1308>:	mov    $0x407a20,%esi
   0x0000000000422279 <+1313>:	mov    %rax,%rdi
   0x000000000042227c <+1316>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000422281 <+1321>:	mov    $0x42b168,%edi
   0x0000000000422286 <+1326>:	callq  0x407f50 <puts@plt>
   0x000000000042228b <+1331>:	mov    -0x58(%rbp),%rax
   0x000000000042228f <+1335>:	mov    %rax,%rdi
   0x0000000000422292 <+1338>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422297 <+1343>:	movb   $0x0,-0x39(%rbp)
   0x000000000042229b <+1347>:	mov    -0x58(%rbp),%rax
   0x000000000042229f <+1351>:	lea    0x9f0(%rax),%rdx
   0x00000000004222a6 <+1358>:	lea    -0x39(%rbp),%rax
   0x00000000004222aa <+1362>:	mov    %rax,%rsi
   0x00000000004222ad <+1365>:	mov    %rdx,%rdi
   0x00000000004222b0 <+1368>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x00000000004222b5 <+1373>:	mov    -0x58(%rbp),%rax
   0x00000000004222b9 <+1377>:	mov    %rax,%rdi
   0x00000000004222bc <+1380>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004222c1 <+1385>:	jmpq   0x421da1 <exec::entry()+73>
   0x00000000004222c6 <+1390>:	mov    -0x58(%rbp),%rax
   0x00000000004222ca <+1394>:	mov    %rax,%rdi
   0x00000000004222cd <+1397>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004222d2 <+1402>:	jmpq   0x421da1 <exec::entry()+73>
End of assembler dump.
Line 370 of "main.cpp" starts at address 0x40ab8e <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x40ab9c <__static_initialization_and_destruction_0(int, int)+14>.
Line 102 of "icache.cpp" starts at address 0x41c70b <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c719 <__static_initialization_and_destruction_0(int, int)+14>.
Line 177 of "exec.cpp" starts at address 0x4222d7 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4222e5 <__static_initialization_and_destruction_0(int, int)+14>.
Line 59 of "pic.cpp" starts at address 0x42369f <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4236ad <__static_initialization_and_destruction_0(int, int)+14>.
Line 787 of "decode.cpp" starts at address 0x421cf6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x421d04 <__static_initialization_and_destruction_0(int, int)+14>.
Line 78 of "bios.cpp" starts at address 0x41bf79 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41bf87 <__static_initialization_and_destruction_0(int, int)+14>.
Line 86 of "paging.cpp" starts at address 0x41c443 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c451 <__static_initialization_and_destruction_0(int, int)+14>.
Line 250 of "mmxu.cpp" starts at address 0x422aaf <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422abd <__static_initialization_and_destruction_0(int, int)+14>.
Line 90 of "dcache.cpp" starts at address 0x423461 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x42346f <__static_initialization_and_destruction_0(int, int)+14>.
Line 180 of "floating.cpp" starts at address 0x422fc6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422fd4 <__static_initialization_and_destruction_0(int, int)+14>.
Line 189 of "fetch.cpp" starts at address 0x41d2e1 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41d2ef <__static_initialization_and_destruction_0(int, int)+14>.

Temporary breakpoint 13, floating::entry (this=0x7fffffff57d0) at floating.cpp:43
43	  int			        opcode_tmp = 0;
Dump of assembler code for function floating::entry():
   0x0000000000422b12 <+0>:	push   %rbp
   0x0000000000422b13 <+1>:	mov    %rsp,%rbp
   0x0000000000422b16 <+4>:	push   %rbx
   0x0000000000422b17 <+5>:	sub    $0x68,%rsp
   0x0000000000422b1b <+9>:	mov    %rdi,-0x68(%rbp)
=> 0x0000000000422b1f <+13>:	movl   $0x0,-0x30(%rbp)
   0x0000000000422b26 <+20>:	movl   $0x0,-0x58(%rbp)
   0x0000000000422b2d <+27>:	movl   $0x0,-0x5c(%rbp)
   0x0000000000422b34 <+34>:	movq   $0x42b4a8,-0x28(%rbp)
   0x0000000000422b3c <+42>:	movl   $0x0,-0x34(%rbp)
   0x0000000000422b43 <+49>:	movl   $0x0,-0x2c(%rbp)
   0x0000000000422b4a <+56>:	movl   $0x0,-0x38(%rbp)
   0x0000000000422b51 <+63>:	movl   $0x0,-0x3c(%rbp)
   0x0000000000422b58 <+70>:	movl   $0x0,-0x40(%rbp)
   0x0000000000422b5f <+77>:	mov    -0x68(%rbp),%rax
   0x0000000000422b63 <+81>:	mov    $0x3,%esi
   0x0000000000422b68 <+86>:	mov    %rax,%rdi
   0x0000000000422b6b <+89>:	callq  0x41c000 <sc_core::sc_module::wait(int)>
   0x0000000000422b70 <+94>:	mov    -0x68(%rbp),%rax
   0x0000000000422b74 <+98>:	mov    %rax,%rdi
   0x0000000000422b77 <+101>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422b7c <+106>:	mov    -0x68(%rbp),%rax
   0x0000000000422b80 <+110>:	add    $0xd0,%rax
   0x0000000000422b86 <+116>:	mov    %rax,%rdi
   0x0000000000422b89 <+119>:	callq  0x41c058 <sc_core::sc_in<bool>::operator bool const&() const>
   0x0000000000422b8e <+124>:	movzbl (%rax),%eax
   0x0000000000422b91 <+127>:	xor    $0x1,%eax
   0x0000000000422b94 <+130>:	test   %al,%al
   0x0000000000422b96 <+132>:	je     0x422b9a <floating::entry()+136>
   0x0000000000422b98 <+134>:	jmp    0x422b70 <floating::entry()+94>
   0x0000000000422b9a <+136>:	mov    -0x68(%rbp),%rax
   0x0000000000422b9e <+140>:	add    $0x320,%rax
   0x0000000000422ba4 <+146>:	mov    %rax,%rdi
   0x0000000000422ba7 <+149>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x0000000000422bac <+154>:	mov    (%rax),%eax
   0x0000000000422bae <+156>:	mov    %eax,-0x5c(%rbp)
   0x0000000000422bb1 <+159>:	mov    -0x68(%rbp),%rax
   0x0000000000422bb5 <+163>:	add    $0x170,%rax
   0x0000000000422bbb <+169>:	mov    %rax,%rdi
   0x0000000000422bbe <+172>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x0000000000422bc3 <+177>:	mov    (%rax),%eax
   0x0000000000422bc5 <+179>:	mov    %eax,-0x30(%rbp)
   0x0000000000422bc8 <+182>:	mov    -0x68(%rbp),%rax
   0x0000000000422bcc <+186>:	add    $0x200,%rax
   0x0000000000422bd2 <+192>:	mov    %rax,%rdi
   0x0000000000422bd5 <+195>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x0000000000422bda <+200>:	mov    (%rax),%eax
   0x0000000000422bdc <+202>:	mov    %eax,-0x44(%rbp)
   0x0000000000422bdf <+205>:	mov    -0x68(%rbp),%rax
   0x0000000000422be3 <+209>:	add    $0x290,%rax
   0x0000000000422be9 <+215>:	mov    %rax,%rdi
   0x0000000000422bec <+218>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x0000000000422bf1 <+223>:	mov    (%rax),%eax
   0x0000000000422bf3 <+225>:	mov    %eax,-0x48(%rbp)
   0x0000000000422bf6 <+228>:	mov    -0x44(%rbp),%eax
   0x0000000000422bf9 <+231>:	shr    $0x1f,%eax
   0x0000000000422bfc <+234>:	mov    %eax,-0x4c(%rbp)
   0x0000000000422bff <+237>:	mov    -0x48(%rbp),%eax
   0x0000000000422c02 <+240>:	shr    $0x1f,%eax
   0x0000000000422c05 <+243>:	mov    %eax,-0x50(%rbp)
   0x0000000000422c08 <+246>:	mov    -0x44(%rbp),%eax
   0x0000000000422c0b <+249>:	and    $0x7f800000,%eax
   0x0000000000422c10 <+254>:	shr    $0x17,%eax
   0x0000000000422c13 <+257>:	mov    %eax,-0x14(%rbp)
   0x0000000000422c16 <+260>:	mov    -0x48(%rbp),%eax
   0x0000000000422c19 <+263>:	and    $0x7f800000,%eax
   0x0000000000422c1e <+268>:	shr    $0x17,%eax
   0x0000000000422c21 <+271>:	mov    %eax,-0x1c(%rbp)
   0x0000000000422c24 <+274>:	mov    -0x44(%rbp),%eax
   0x0000000000422c27 <+277>:	and    $0x7fffff,%eax
   0x0000000000422c2c <+282>:	mov    %eax,-0x18(%rbp)
   0x0000000000422c2f <+285>:	mov    -0x48(%rbp),%eax
   0x0000000000422c32 <+288>:	and    $0x7fffff,%eax
   0x0000000000422c37 <+293>:	mov    %eax,-0x20(%rbp)
   0x0000000000422c3a <+296>:	mov    -0x14(%rbp),%edx
   0x0000000000422c3d <+299>:	mov    -0x1c(%rbp),%eax
   0x0000000000422c40 <+302>:	sub    %eax,%edx
   0x0000000000422c42 <+304>:	mov    %edx,%eax
   0x0000000000422c44 <+306>:	mov    %eax,-0x34(%rbp)
   0x0000000000422c47 <+309>:	mov    $0x42b4b0,%edi
   0x0000000000422c4c <+314>:	callq  0x407f50 <puts@plt>
   0x0000000000422c51 <+319>:	mov    -0x18(%rbp),%ecx
   0x0000000000422c54 <+322>:	mov    -0x14(%rbp),%edx
   0x0000000000422c57 <+325>:	mov    -0x4c(%rbp),%eax
   0x0000000000422c5a <+328>:	mov    %eax,%esi
   0x0000000000422c5c <+330>:	mov    $0x42b4d8,%edi
   0x0000000000422c61 <+335>:	mov    $0x0,%eax
   0x0000000000422c66 <+340>:	callq  0x407810 <printf@plt>
   0x0000000000422c6b <+345>:	mov    -0x20(%rbp),%ecx
   0x0000000000422c6e <+348>:	mov    -0x1c(%rbp),%edx
   0x0000000000422c71 <+351>:	mov    -0x50(%rbp),%eax
   0x0000000000422c74 <+354>:	mov    %eax,%esi
   0x0000000000422c76 <+356>:	mov    $0x42b508,%edi
   0x0000000000422c7b <+361>:	mov    $0x0,%eax
   0x0000000000422c80 <+366>:	callq  0x407810 <printf@plt>
   0x0000000000422c85 <+371>:	mov    -0x34(%rbp),%eax
   0x0000000000422c88 <+374>:	mov    %eax,%esi
   0x0000000000422c8a <+376>:	mov    $0x42b538,%edi
   0x0000000000422c8f <+381>:	mov    $0x0,%eax
   0x0000000000422c94 <+386>:	callq  0x407810 <printf@plt>
   0x0000000000422c99 <+391>:	mov    $0x42b4b0,%edi
   0x0000000000422c9e <+396>:	callq  0x407f50 <puts@plt>
   0x0000000000422ca3 <+401>:	cmpl   $0x0,-0x34(%rbp)
   0x0000000000422ca7 <+405>:	jle    0x422cb9 <floating::entry()+423>
   0x0000000000422ca9 <+407>:	mov    -0x34(%rbp),%eax
   0x0000000000422cac <+410>:	mov    %eax,%ecx
   0x0000000000422cae <+412>:	shrl   %cl,-0x20(%rbp)
   0x0000000000422cb1 <+415>:	mov    -0x14(%rbp),%eax
   0x0000000000422cb4 <+418>:	mov    %eax,-0x1c(%rbp)
   0x0000000000422cb7 <+421>:	jmp    0x422cc7 <floating::entry()+437>
   0x0000000000422cb9 <+423>:	mov    -0x34(%rbp),%eax
   0x0000000000422cbc <+426>:	mov    %eax,%ecx
   0x0000000000422cbe <+428>:	shrl   %cl,-0x18(%rbp)
   0x0000000000422cc1 <+431>:	mov    -0x1c(%rbp),%eax
   0x0000000000422cc4 <+434>:	mov    %eax,-0x14(%rbp)
   0x0000000000422cc7 <+437>:	mov    -0x68(%rbp),%rax
   0x0000000000422ccb <+441>:	mov    %rax,%rdi
   0x0000000000422cce <+444>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422cd3 <+449>:	mov    $0x42b4b0,%edi
   0x0000000000422cd8 <+454>:	callq  0x407f50 <puts@plt>
   0x0000000000422cdd <+459>:	mov    $0x42b55e,%edi
   0x0000000000422ce2 <+464>:	callq  0x407f50 <puts@plt>
   0x0000000000422ce7 <+469>:	mov    -0x18(%rbp),%ecx
   0x0000000000422cea <+472>:	mov    -0x14(%rbp),%edx
   0x0000000000422ced <+475>:	mov    -0x4c(%rbp),%eax
   0x0000000000422cf0 <+478>:	mov    %eax,%esi
   0x0000000000422cf2 <+480>:	mov    $0x42b4d8,%edi
   0x0000000000422cf7 <+485>:	mov    $0x0,%eax
   0x0000000000422cfc <+490>:	callq  0x407810 <printf@plt>
   0x0000000000422d01 <+495>:	mov    -0x20(%rbp),%ecx
   0x0000000000422d04 <+498>:	mov    -0x1c(%rbp),%edx
   0x0000000000422d07 <+501>:	mov    -0x50(%rbp),%eax
   0x0000000000422d0a <+504>:	mov    %eax,%esi
   0x0000000000422d0c <+506>:	mov    $0x42b508,%edi
   0x0000000000422d11 <+511>:	mov    $0x0,%eax
   0x0000000000422d16 <+516>:	callq  0x407810 <printf@plt>
   0x0000000000422d1b <+521>:	mov    $0x42b4b0,%edi
   0x0000000000422d20 <+526>:	callq  0x407f50 <puts@plt>
   0x0000000000422d25 <+531>:	cmpl   $0x6,-0x30(%rbp)
   0x0000000000422d29 <+535>:	ja     0x422de9 <floating::entry()+727>
   0x0000000000422d2f <+541>:	mov    -0x30(%rbp),%eax
   0x0000000000422d32 <+544>:	mov    0x42b688(,%rax,8),%rax
   0x0000000000422d3a <+552>:	jmpq   *%rax
   0x0000000000422d3c <+554>:	movq   $0x42b57a,-0x28(%rbp)
   0x0000000000422d44 <+562>:	mov    -0x58(%rbp),%eax
   0x0000000000422d47 <+565>:	mov    %eax,-0x58(%rbp)
   0x0000000000422d4a <+568>:	mov    -0x68(%rbp),%rax
   0x0000000000422d4e <+572>:	mov    %rax,%rdi
   0x0000000000422d51 <+575>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422d56 <+580>:	jmpq   0x422e1e <floating::entry()+780>
   0x0000000000422d5b <+585>:	movq   $0x42b580,-0x28(%rbp)
   0x0000000000422d63 <+593>:	mov    -0x18(%rbp),%edx
   0x0000000000422d66 <+596>:	mov    -0x20(%rbp),%eax
   0x0000000000422d69 <+599>:	add    %edx,%eax
   0x0000000000422d6b <+601>:	mov    %eax,-0x2c(%rbp)
   0x0000000000422d6e <+604>:	mov    -0x68(%rbp),%rax
   0x0000000000422d72 <+608>:	mov    %rax,%rdi
   0x0000000000422d75 <+611>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422d7a <+616>:	jmpq   0x422e1e <floating::entry()+780>
   0x0000000000422d7f <+621>:	movq   $0x42b585,-0x28(%rbp)
   0x0000000000422d87 <+629>:	mov    -0x18(%rbp),%edx
   0x0000000000422d8a <+632>:	mov    -0x20(%rbp),%eax
   0x0000000000422d8d <+635>:	sub    %eax,%edx
   0x0000000000422d8f <+637>:	mov    %edx,%eax
   0x0000000000422d91 <+639>:	mov    %eax,-0x2c(%rbp)
   0x0000000000422d94 <+642>:	mov    -0x68(%rbp),%rax
   0x0000000000422d98 <+646>:	mov    %rax,%rdi
   0x0000000000422d9b <+649>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422da0 <+654>:	jmp    0x422e1e <floating::entry()+780>
   0x0000000000422da2 <+656>:	movq   $0x42b58a,-0x28(%rbp)
   0x0000000000422daa <+664>:	mov    -0x18(%rbp),%edx
   0x0000000000422dad <+667>:	mov    -0x20(%rbp),%eax
   0x0000000000422db0 <+670>:	imul   %edx,%eax
   0x0000000000422db3 <+673>:	mov    %eax,-0x2c(%rbp)
   0x0000000000422db6 <+676>:	shll   -0x1c(%rbp)
   0x0000000000422db9 <+679>:	mov    -0x68(%rbp),%rax
   0x0000000000422dbd <+683>:	mov    %rax,%rdi
   0x0000000000422dc0 <+686>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422dc5 <+691>:	jmp    0x422e1e <floating::entry()+780>
   0x0000000000422dc7 <+693>:	movq   $0x42b58f,-0x28(%rbp)
   0x0000000000422dcf <+701>:	mov    -0x18(%rbp),%eax
   0x0000000000422dd2 <+704>:	mov    -0x20(%rbp),%ebx
   0x0000000000422dd5 <+707>:	cltd   
   0x0000000000422dd6 <+708>:	idiv   %ebx
   0x0000000000422dd8 <+710>:	mov    %eax,-0x2c(%rbp)
   0x0000000000422ddb <+713>:	mov    -0x68(%rbp),%rax
   0x0000000000422ddf <+717>:	mov    %rax,%rdi
   0x0000000000422de2 <+720>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422de7 <+725>:	jmp    0x422e1e <floating::entry()+780>
   0x0000000000422de9 <+727>:	mov    $0x42b4b0,%edi
   0x0000000000422dee <+732>:	callq  0x407f50 <puts@plt>
   0x0000000000422df3 <+737>:	mov    -0x30(%rbp),%eax
   0x0000000000422df6 <+740>:	mov    %eax,%esi
   0x0000000000422df8 <+742>:	mov    $0x42b594,%edi
   0x0000000000422dfd <+747>:	mov    $0x0,%eax
   0x0000000000422e02 <+752>:	callq  0x407810 <printf@plt>
   0x0000000000422e07 <+757>:	mov    $0x42b4b0,%edi
   0x0000000000422e0c <+762>:	callq  0x407f50 <puts@plt>
   0x0000000000422e11 <+767>:	mov    -0x68(%rbp),%rax
   0x0000000000422e15 <+771>:	mov    %rax,%rdi
   0x0000000000422e18 <+774>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422e1d <+779>:	nop
   0x0000000000422e1e <+780>:	mov    -0x2c(%rbp),%eax
   0x0000000000422e21 <+783>:	shr    $0x17,%eax
   0x0000000000422e24 <+786>:	mov    %eax,-0x38(%rbp)
   0x0000000000422e27 <+789>:	mov    -0x38(%rbp),%eax
   0x0000000000422e2a <+792>:	mov    -0x2c(%rbp),%edx
   0x0000000000422e2d <+795>:	mov    %eax,%ecx
   0x0000000000422e2f <+797>:	shl    %cl,%edx
   0x0000000000422e31 <+799>:	mov    %edx,%eax
   0x0000000000422e33 <+801>:	and    $0x7fffff,%eax
   0x0000000000422e38 <+806>:	mov    %eax,-0x58(%rbp)
   0x0000000000422e3b <+809>:	mov    -0x1c(%rbp),%edx
   0x0000000000422e3e <+812>:	mov    -0x38(%rbp),%eax
   0x0000000000422e41 <+815>:	add    %edx,%eax
   0x0000000000422e43 <+817>:	mov    %eax,-0x3c(%rbp)
   0x0000000000422e46 <+820>:	mov    -0x3c(%rbp),%eax
   0x0000000000422e49 <+823>:	shl    $0x17,%eax
   0x0000000000422e4c <+826>:	and    $0x7f800000,%eax
   0x0000000000422e51 <+831>:	mov    %eax,%edx
   0x0000000000422e53 <+833>:	mov    -0x58(%rbp),%eax
   0x0000000000422e56 <+836>:	or     %edx,%eax
   0x0000000000422e58 <+838>:	mov    %eax,-0x58(%rbp)
   0x0000000000422e5b <+841>:	mov    -0x4c(%rbp),%eax
   0x0000000000422e5e <+844>:	mov    %eax,-0x40(%rbp)
   0x0000000000422e61 <+847>:	mov    -0x40(%rbp),%eax
   0x0000000000422e64 <+850>:	shl    $0x1f,%eax
   0x0000000000422e67 <+853>:	mov    %eax,%edx
   0x0000000000422e69 <+855>:	mov    -0x58(%rbp),%eax
   0x0000000000422e6c <+858>:	or     %edx,%eax
   0x0000000000422e6e <+860>:	mov    %eax,-0x58(%rbp)
   0x0000000000422e71 <+863>:	mov    $0x42b4b0,%edi
   0x0000000000422e76 <+868>:	callq  0x407f50 <puts@plt>
   0x0000000000422e7b <+873>:	mov    -0x40(%rbp),%eax
   0x0000000000422e7e <+876>:	mov    %eax,%esi
   0x0000000000422e80 <+878>:	mov    $0x42b5b0,%edi
   0x0000000000422e85 <+883>:	mov    $0x0,%eax
   0x0000000000422e8a <+888>:	callq  0x407810 <printf@plt>
   0x0000000000422e8f <+893>:	mov    -0x2c(%rbp),%eax
   0x0000000000422e92 <+896>:	mov    %eax,%esi
   0x0000000000422e94 <+898>:	mov    $0x42b5d8,%edi
   0x0000000000422e99 <+903>:	mov    $0x0,%eax
   0x0000000000422e9e <+908>:	callq  0x407810 <printf@plt>
   0x0000000000422ea3 <+913>:	mov    -0x3c(%rbp),%eax
   0x0000000000422ea6 <+916>:	mov    %eax,%esi
   0x0000000000422ea8 <+918>:	mov    $0x42b600,%edi
   0x0000000000422ead <+923>:	mov    $0x0,%eax
   0x0000000000422eb2 <+928>:	callq  0x407810 <printf@plt>
   0x0000000000422eb7 <+933>:	mov    -0x38(%rbp),%eax
   0x0000000000422eba <+936>:	mov    %eax,%esi
   0x0000000000422ebc <+938>:	mov    $0x42b628,%edi
   0x0000000000422ec1 <+943>:	mov    $0x0,%eax
   0x0000000000422ec6 <+948>:	callq  0x407810 <printf@plt>
   0x0000000000422ecb <+953>:	mov    $0x42b64d,%esi
   0x0000000000422ed0 <+958>:	mov    $0x636740,%edi
   0x0000000000422ed5 <+963>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000422eda <+968>:	mov    %rax,%rdx
   0x0000000000422edd <+971>:	mov    -0x28(%rbp),%rax
   0x0000000000422ee1 <+975>:	mov    %rax,%rsi
   0x0000000000422ee4 <+978>:	mov    %rdx,%rdi
   0x0000000000422ee7 <+981>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000422eec <+986>:	mov    -0x58(%rbp),%eax
   0x0000000000422eef <+989>:	mov    %eax,%esi
   0x0000000000422ef1 <+991>:	mov    $0x42b65a,%edi
   0x0000000000422ef6 <+996>:	mov    $0x0,%eax
   0x0000000000422efb <+1001>:	callq  0x407810 <printf@plt>
   0x0000000000422f00 <+1006>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000422f05 <+1011>:	mov    %rax,%rbx
   0x0000000000422f08 <+1014>:	mov    $0x42b66e,%esi
   0x0000000000422f0d <+1019>:	mov    $0x636740,%edi
   0x0000000000422f12 <+1024>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000422f17 <+1029>:	mov    %rbx,%rsi
   0x0000000000422f1a <+1032>:	mov    %rax,%rdi
   0x0000000000422f1d <+1035>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x0000000000422f22 <+1040>:	mov    $0x407a20,%esi
   0x0000000000422f27 <+1045>:	mov    %rax,%rdi
   0x0000000000422f2a <+1048>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000422f2f <+1053>:	mov    $0x42b4b0,%edi
   0x0000000000422f34 <+1058>:	callq  0x407f50 <puts@plt>
   0x0000000000422f39 <+1063>:	mov    -0x68(%rbp),%rax
   0x0000000000422f3d <+1067>:	lea    0x3b0(%rax),%rdx
   0x0000000000422f44 <+1074>:	lea    -0x58(%rbp),%rax
   0x0000000000422f48 <+1078>:	mov    %rax,%rsi
   0x0000000000422f4b <+1081>:	mov    %rdx,%rdi
   0x0000000000422f4e <+1084>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000422f53 <+1089>:	movb   $0x1,-0x52(%rbp)
   0x0000000000422f57 <+1093>:	mov    -0x68(%rbp),%rax
   0x0000000000422f5b <+1097>:	lea    0x448(%rax),%rdx
   0x0000000000422f62 <+1104>:	lea    -0x52(%rbp),%rax
   0x0000000000422f66 <+1108>:	mov    %rax,%rsi
   0x0000000000422f69 <+1111>:	mov    %rdx,%rdi
   0x0000000000422f6c <+1114>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000422f71 <+1119>:	mov    -0x68(%rbp),%rax
   0x0000000000422f75 <+1123>:	lea    0x4f0(%rax),%rdx
   0x0000000000422f7c <+1130>:	lea    -0x5c(%rbp),%rax
   0x0000000000422f80 <+1134>:	mov    %rax,%rsi
   0x0000000000422f83 <+1137>:	mov    %rdx,%rdi
   0x0000000000422f86 <+1140>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x0000000000422f8b <+1145>:	mov    -0x68(%rbp),%rax
   0x0000000000422f8f <+1149>:	mov    %rax,%rdi
   0x0000000000422f92 <+1152>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422f97 <+1157>:	movb   $0x0,-0x51(%rbp)
   0x0000000000422f9b <+1161>:	mov    -0x68(%rbp),%rax
   0x0000000000422f9f <+1165>:	lea    0x448(%rax),%rdx
   0x0000000000422fa6 <+1172>:	lea    -0x51(%rbp),%rax
   0x0000000000422faa <+1176>:	mov    %rax,%rsi
   0x0000000000422fad <+1179>:	mov    %rdx,%rdi
   0x0000000000422fb0 <+1182>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000422fb5 <+1187>:	mov    -0x68(%rbp),%rax
   0x0000000000422fb9 <+1191>:	mov    %rax,%rdi
   0x0000000000422fbc <+1194>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422fc1 <+1199>:	jmpq   0x422b70 <floating::entry()+94>
End of assembler dump.
Line 370 of "main.cpp" starts at address 0x40ab8e <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x40ab9c <__static_initialization_and_destruction_0(int, int)+14>.
Line 102 of "icache.cpp" starts at address 0x41c70b <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c719 <__static_initialization_and_destruction_0(int, int)+14>.
Line 177 of "exec.cpp" starts at address 0x4222d7 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4222e5 <__static_initialization_and_destruction_0(int, int)+14>.
Line 59 of "pic.cpp" starts at address 0x42369f <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4236ad <__static_initialization_and_destruction_0(int, int)+14>.
Line 787 of "decode.cpp" starts at address 0x421cf6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x421d04 <__static_initialization_and_destruction_0(int, int)+14>.
Line 78 of "bios.cpp" starts at address 0x41bf79 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41bf87 <__static_initialization_and_destruction_0(int, int)+14>.
Line 86 of "paging.cpp" starts at address 0x41c443 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c451 <__static_initialization_and_destruction_0(int, int)+14>.
Line 250 of "mmxu.cpp" starts at address 0x422aaf <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422abd <__static_initialization_and_destruction_0(int, int)+14>.
Line 90 of "dcache.cpp" starts at address 0x423461 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x42346f <__static_initialization_and_destruction_0(int, int)+14>.
Line 180 of "floating.cpp" starts at address 0x422fc6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422fd4 <__static_initialization_and_destruction_0(int, int)+14>.
Line 189 of "fetch.cpp" starts at address 0x41d2e1 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41d2ef <__static_initialization_and_destruction_0(int, int)+14>.

Temporary breakpoint 10, mmxu::entry (this=0x7fffffff51a0) at mmxu.cpp:48
48	  int			        opcode_tmp = 0;
Dump of assembler code for function mmxu::entry():
   0x000000000042233a <+0>:	push   %rbp
   0x000000000042233b <+1>:	mov    %rsp,%rbp
   0x000000000042233e <+4>:	push   %rbx
   0x000000000042233f <+5>:	sub    $0x78,%rsp
   0x0000000000422343 <+9>:	mov    %rdi,-0x78(%rbp)
=> 0x0000000000422347 <+13>:	movl   $0x0,-0x3c(%rbp)
   0x000000000042234e <+20>:	movl   $0x0,-0x14(%rbp)
   0x0000000000422355 <+27>:	movl   $0x0,-0x70(%rbp)
   0x000000000042235c <+34>:	movl   $0x0,-0x40(%rbp)
   0x0000000000422363 <+41>:	movl   $0x0,-0x44(%rbp)
   0x000000000042236a <+48>:	movl   $0x0,-0x48(%rbp)
   0x0000000000422371 <+55>:	movl   $0x0,-0x4c(%rbp)
   0x0000000000422378 <+62>:	movl   $0x0,-0x50(%rbp)
   0x000000000042237f <+69>:	movl   $0x0,-0x54(%rbp)
   0x0000000000422386 <+76>:	movl   $0x0,-0x58(%rbp)
   0x000000000042238d <+83>:	movl   $0x0,-0x5c(%rbp)
   0x0000000000422394 <+90>:	movl   $0x0,-0x60(%rbp)
   0x000000000042239b <+97>:	movl   $0x0,-0x64(%rbp)
   0x00000000004223a2 <+104>:	movl   $0x0,-0x24(%rbp)
   0x00000000004223a9 <+111>:	movl   $0x0,-0x28(%rbp)
   0x00000000004223b0 <+118>:	movl   $0x0,-0x2c(%rbp)
   0x00000000004223b7 <+125>:	movl   $0x0,-0x30(%rbp)
   0x00000000004223be <+132>:	movl   $0x0,-0x34(%rbp)
   0x00000000004223c5 <+139>:	movl   $0x0,-0x38(%rbp)
   0x00000000004223cc <+146>:	mov    -0x78(%rbp),%rax
   0x00000000004223d0 <+150>:	mov    $0x3,%esi
   0x00000000004223d5 <+155>:	mov    %rax,%rdi
   0x00000000004223d8 <+158>:	callq  0x41c000 <sc_core::sc_module::wait(int)>
   0x00000000004223dd <+163>:	mov    -0x78(%rbp),%rax
   0x00000000004223e1 <+167>:	add    $0xd0,%rax
   0x00000000004223e7 <+173>:	mov    %rax,%rdi
   0x00000000004223ea <+176>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x00000000004223ef <+181>:	movzbl (%rax),%eax
   0x00000000004223f2 <+184>:	test   %al,%al
   0x00000000004223f4 <+186>:	je     0x422a9e <mmxu::entry()+1892>
   0x00000000004223fa <+192>:	mov    -0x78(%rbp),%rax
   0x00000000004223fe <+196>:	add    $0x200,%rax
   0x0000000000422404 <+202>:	mov    %rax,%rdi
   0x0000000000422407 <+205>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x000000000042240c <+210>:	mov    (%rax),%eax
   0x000000000042240e <+212>:	mov    %eax,-0x40(%rbp)
   0x0000000000422411 <+215>:	mov    -0x78(%rbp),%rax
   0x0000000000422415 <+219>:	add    $0x290,%rax
   0x000000000042241b <+225>:	mov    %rax,%rdi
   0x000000000042241e <+228>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x0000000000422423 <+233>:	mov    (%rax),%eax
   0x0000000000422425 <+235>:	mov    %eax,-0x44(%rbp)
   0x0000000000422428 <+238>:	mov    -0x40(%rbp),%eax
   0x000000000042242b <+241>:	movzbl %al,%eax
   0x000000000042242e <+244>:	mov    %eax,-0x48(%rbp)
   0x0000000000422431 <+247>:	mov    -0x44(%rbp),%eax
   0x0000000000422434 <+250>:	movzbl %al,%eax
   0x0000000000422437 <+253>:	mov    %eax,-0x58(%rbp)
   0x000000000042243a <+256>:	mov    -0x40(%rbp),%eax
   0x000000000042243d <+259>:	and    $0xff00,%eax
   0x0000000000422442 <+264>:	shr    $0x8,%eax
   0x0000000000422445 <+267>:	mov    %eax,-0x4c(%rbp)
   0x0000000000422448 <+270>:	mov    -0x44(%rbp),%eax
   0x000000000042244b <+273>:	and    $0xff00,%eax
   0x0000000000422450 <+278>:	shr    $0x8,%eax
   0x0000000000422453 <+281>:	mov    %eax,-0x5c(%rbp)
   0x0000000000422456 <+284>:	mov    -0x40(%rbp),%eax
   0x0000000000422459 <+287>:	and    $0xff0000,%eax
   0x000000000042245e <+292>:	shr    $0x10,%eax
   0x0000000000422461 <+295>:	mov    %eax,-0x50(%rbp)
   0x0000000000422464 <+298>:	mov    -0x44(%rbp),%eax
   0x0000000000422467 <+301>:	and    $0xff0000,%eax
   0x000000000042246c <+306>:	shr    $0x10,%eax
   0x000000000042246f <+309>:	mov    %eax,-0x60(%rbp)
   0x0000000000422472 <+312>:	mov    -0x40(%rbp),%eax
   0x0000000000422475 <+315>:	shr    $0x18,%eax
   0x0000000000422478 <+318>:	mov    %eax,-0x54(%rbp)
   0x000000000042247b <+321>:	mov    -0x44(%rbp),%eax
   0x000000000042247e <+324>:	shr    $0x18,%eax
   0x0000000000422481 <+327>:	mov    %eax,-0x64(%rbp)
   0x0000000000422484 <+330>:	mov    -0x78(%rbp),%rax
   0x0000000000422488 <+334>:	add    $0x170,%rax
   0x000000000042248e <+340>:	mov    %rax,%rdi
   0x0000000000422491 <+343>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x0000000000422496 <+348>:	mov    (%rax),%eax
   0x0000000000422498 <+350>:	mov    %eax,-0x3c(%rbp)
   0x000000000042249b <+353>:	mov    -0x78(%rbp),%rax
   0x000000000042249f <+357>:	add    $0x320,%rax
   0x00000000004224a5 <+363>:	mov    %rax,%rdi
   0x00000000004224a8 <+366>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x00000000004224ad <+371>:	mov    (%rax),%eax
   0x00000000004224af <+373>:	mov    %eax,-0x70(%rbp)
   0x00000000004224b2 <+376>:	cmpl   $0x9,-0x3c(%rbp)
   0x00000000004224b6 <+380>:	ja     0x4228bc <mmxu::entry()+1410>
   0x00000000004224bc <+386>:	mov    -0x3c(%rbp),%eax
   0x00000000004224bf <+389>:	mov    0x42b3a0(,%rax,8),%rax
   0x00000000004224c7 <+397>:	jmpq   *%rax
   0x00000000004224c9 <+399>:	movq   $0x42b2f0,-0x20(%rbp)
   0x00000000004224d1 <+407>:	mov    -0x78(%rbp),%rax
   0x00000000004224d5 <+411>:	mov    %rax,%rdi
   0x00000000004224d8 <+414>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004224dd <+419>:	jmpq   0x4228e5 <mmxu::entry()+1451>
   0x00000000004224e2 <+424>:	movq   $0x42b2f6,-0x20(%rbp)
   0x00000000004224ea <+432>:	mov    -0x54(%rbp),%edx
   0x00000000004224ed <+435>:	mov    -0x64(%rbp),%eax
   0x00000000004224f0 <+438>:	add    %edx,%eax
   0x00000000004224f2 <+440>:	mov    %eax,-0x30(%rbp)
   0x00000000004224f5 <+443>:	mov    -0x50(%rbp),%edx
   0x00000000004224f8 <+446>:	mov    -0x60(%rbp),%eax
   0x00000000004224fb <+449>:	add    %edx,%eax
   0x00000000004224fd <+451>:	mov    %eax,-0x2c(%rbp)
   0x0000000000422500 <+454>:	mov    -0x4c(%rbp),%edx
   0x0000000000422503 <+457>:	mov    -0x5c(%rbp),%eax
   0x0000000000422506 <+460>:	add    %edx,%eax
   0x0000000000422508 <+462>:	mov    %eax,-0x28(%rbp)
   0x000000000042250b <+465>:	mov    -0x48(%rbp),%edx
   0x000000000042250e <+468>:	mov    -0x58(%rbp),%eax
   0x0000000000422511 <+471>:	add    %edx,%eax
   0x0000000000422513 <+473>:	mov    %eax,-0x24(%rbp)
   0x0000000000422516 <+476>:	shll   $0x18,-0x30(%rbp)
   0x000000000042251a <+480>:	mov    -0x2c(%rbp),%eax
   0x000000000042251d <+483>:	shl    $0x10,%eax
   0x0000000000422520 <+486>:	and    $0xff0000,%eax
   0x0000000000422525 <+491>:	mov    %eax,-0x2c(%rbp)
   0x0000000000422528 <+494>:	mov    -0x28(%rbp),%eax
   0x000000000042252b <+497>:	shl    $0x8,%eax
   0x000000000042252e <+500>:	and    $0xffff,%eax
   0x0000000000422533 <+505>:	mov    %eax,-0x28(%rbp)
   0x0000000000422536 <+508>:	mov    -0x24(%rbp),%eax
   0x0000000000422539 <+511>:	or     -0x28(%rbp),%eax
   0x000000000042253c <+514>:	or     -0x2c(%rbp),%eax
   0x000000000042253f <+517>:	or     -0x30(%rbp),%eax
   0x0000000000422542 <+520>:	mov    %eax,-0x14(%rbp)
   0x0000000000422545 <+523>:	mov    -0x78(%rbp),%rax
   0x0000000000422549 <+527>:	mov    %rax,%rdi
   0x000000000042254c <+530>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422551 <+535>:	jmpq   0x4228e5 <mmxu::entry()+1451>
   0x0000000000422556 <+540>:	movq   $0x42b2fb,-0x20(%rbp)
   0x000000000042255e <+548>:	mov    -0x54(%rbp),%edx
   0x0000000000422561 <+551>:	mov    -0x64(%rbp),%eax
   0x0000000000422564 <+554>:	add    %edx,%eax
   0x0000000000422566 <+556>:	mov    %eax,-0x30(%rbp)
   0x0000000000422569 <+559>:	mov    -0x50(%rbp),%edx
   0x000000000042256c <+562>:	mov    -0x60(%rbp),%eax
   0x000000000042256f <+565>:	add    %edx,%eax
   0x0000000000422571 <+567>:	mov    %eax,-0x2c(%rbp)
   0x0000000000422574 <+570>:	mov    -0x4c(%rbp),%edx
   0x0000000000422577 <+573>:	mov    -0x5c(%rbp),%eax
   0x000000000042257a <+576>:	add    %edx,%eax
   0x000000000042257c <+578>:	mov    %eax,-0x28(%rbp)
   0x000000000042257f <+581>:	mov    -0x48(%rbp),%edx
   0x0000000000422582 <+584>:	mov    -0x58(%rbp),%eax
   0x0000000000422585 <+587>:	add    %edx,%eax
   0x0000000000422587 <+589>:	mov    %eax,-0x24(%rbp)
   0x000000000042258a <+592>:	cmpl   $0xff,-0x30(%rbp)
   0x0000000000422591 <+599>:	jbe    0x42259a <mmxu::entry()+608>
   0x0000000000422593 <+601>:	movl   $0xff,-0x30(%rbp)
   0x000000000042259a <+608>:	cmpl   $0xff,-0x2c(%rbp)
   0x00000000004225a1 <+615>:	jbe    0x4225aa <mmxu::entry()+624>
   0x00000000004225a3 <+617>:	movl   $0xff,-0x2c(%rbp)
   0x00000000004225aa <+624>:	cmpl   $0xff,-0x28(%rbp)
   0x00000000004225b1 <+631>:	jbe    0x4225ba <mmxu::entry()+640>
   0x00000000004225b3 <+633>:	movl   $0xff,-0x28(%rbp)
   0x00000000004225ba <+640>:	cmpl   $0xff,-0x24(%rbp)
   0x00000000004225c1 <+647>:	jbe    0x4225ca <mmxu::entry()+656>
   0x00000000004225c3 <+649>:	movl   $0xff,-0x24(%rbp)
   0x00000000004225ca <+656>:	shll   $0x18,-0x30(%rbp)
   0x00000000004225ce <+660>:	mov    -0x2c(%rbp),%eax
   0x00000000004225d1 <+663>:	shl    $0x10,%eax
   0x00000000004225d4 <+666>:	and    $0xff0000,%eax
   0x00000000004225d9 <+671>:	mov    %eax,-0x2c(%rbp)
   0x00000000004225dc <+674>:	mov    -0x28(%rbp),%eax
   0x00000000004225df <+677>:	shl    $0x8,%eax
   0x00000000004225e2 <+680>:	and    $0xffff,%eax
   0x00000000004225e7 <+685>:	mov    %eax,-0x28(%rbp)
   0x00000000004225ea <+688>:	mov    -0x24(%rbp),%eax
   0x00000000004225ed <+691>:	or     -0x28(%rbp),%eax
   0x00000000004225f0 <+694>:	or     -0x2c(%rbp),%eax
   0x00000000004225f3 <+697>:	or     -0x30(%rbp),%eax
   0x00000000004225f6 <+700>:	mov    %eax,-0x14(%rbp)
   0x00000000004225f9 <+703>:	mov    -0x78(%rbp),%rax
   0x00000000004225fd <+707>:	mov    %rax,%rdi
   0x0000000000422600 <+710>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422605 <+715>:	jmpq   0x4228e5 <mmxu::entry()+1451>
   0x000000000042260a <+720>:	movq   $0x42b301,-0x20(%rbp)
   0x0000000000422612 <+728>:	mov    -0x54(%rbp),%eax
   0x0000000000422615 <+731>:	sub    -0x64(%rbp),%eax
   0x0000000000422618 <+734>:	mov    %eax,-0x30(%rbp)
   0x000000000042261b <+737>:	mov    -0x50(%rbp),%eax
   0x000000000042261e <+740>:	sub    -0x60(%rbp),%eax
   0x0000000000422621 <+743>:	mov    %eax,-0x2c(%rbp)
   0x0000000000422624 <+746>:	mov    -0x4c(%rbp),%eax
   0x0000000000422627 <+749>:	sub    -0x5c(%rbp),%eax
   0x000000000042262a <+752>:	mov    %eax,-0x28(%rbp)
   0x000000000042262d <+755>:	mov    -0x48(%rbp),%eax
   0x0000000000422630 <+758>:	sub    -0x58(%rbp),%eax
   0x0000000000422633 <+761>:	mov    %eax,-0x24(%rbp)
   0x0000000000422636 <+764>:	shll   $0x18,-0x30(%rbp)
   0x000000000042263a <+768>:	mov    -0x2c(%rbp),%eax
   0x000000000042263d <+771>:	shl    $0x10,%eax
   0x0000000000422640 <+774>:	and    $0xff0000,%eax
   0x0000000000422645 <+779>:	mov    %eax,-0x2c(%rbp)
   0x0000000000422648 <+782>:	mov    -0x28(%rbp),%eax
   0x000000000042264b <+785>:	shl    $0x8,%eax
   0x000000000042264e <+788>:	and    $0xffff,%eax
   0x0000000000422653 <+793>:	mov    %eax,-0x28(%rbp)
   0x0000000000422656 <+796>:	mov    -0x24(%rbp),%eax
   0x0000000000422659 <+799>:	or     -0x28(%rbp),%eax
   0x000000000042265c <+802>:	or     -0x2c(%rbp),%eax
   0x000000000042265f <+805>:	or     -0x30(%rbp),%eax
   0x0000000000422662 <+808>:	mov    %eax,-0x14(%rbp)
   0x0000000000422665 <+811>:	mov    -0x78(%rbp),%rax
   0x0000000000422669 <+815>:	mov    %rax,%rdi
   0x000000000042266c <+818>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422671 <+823>:	jmpq   0x4228e5 <mmxu::entry()+1451>
   0x0000000000422676 <+828>:	movq   $0x42b306,-0x20(%rbp)
   0x000000000042267e <+836>:	mov    -0x54(%rbp),%eax
   0x0000000000422681 <+839>:	sub    -0x64(%rbp),%eax
   0x0000000000422684 <+842>:	mov    %eax,-0x30(%rbp)
   0x0000000000422687 <+845>:	mov    -0x50(%rbp),%eax
   0x000000000042268a <+848>:	sub    -0x60(%rbp),%eax
   0x000000000042268d <+851>:	mov    %eax,-0x2c(%rbp)
   0x0000000000422690 <+854>:	mov    -0x4c(%rbp),%eax
   0x0000000000422693 <+857>:	sub    -0x5c(%rbp),%eax
   0x0000000000422696 <+860>:	mov    %eax,-0x28(%rbp)
   0x0000000000422699 <+863>:	mov    -0x48(%rbp),%eax
   0x000000000042269c <+866>:	sub    -0x58(%rbp),%eax
   0x000000000042269f <+869>:	mov    %eax,-0x24(%rbp)
   0x00000000004226a2 <+872>:	mov    -0x64(%rbp),%eax
   0x00000000004226a5 <+875>:	cmp    -0x54(%rbp),%eax
   0x00000000004226a8 <+878>:	jbe    0x4226b1 <mmxu::entry()+887>
   0x00000000004226aa <+880>:	movl   $0x0,-0x30(%rbp)
   0x00000000004226b1 <+887>:	mov    -0x60(%rbp),%eax
   0x00000000004226b4 <+890>:	cmp    -0x50(%rbp),%eax
   0x00000000004226b7 <+893>:	jbe    0x4226c0 <mmxu::entry()+902>
   0x00000000004226b9 <+895>:	movl   $0x0,-0x2c(%rbp)
   0x00000000004226c0 <+902>:	mov    -0x5c(%rbp),%eax
   0x00000000004226c3 <+905>:	cmp    -0x4c(%rbp),%eax
   0x00000000004226c6 <+908>:	jbe    0x4226cf <mmxu::entry()+917>
   0x00000000004226c8 <+910>:	movl   $0x0,-0x28(%rbp)
   0x00000000004226cf <+917>:	mov    -0x58(%rbp),%eax
   0x00000000004226d2 <+920>:	cmp    -0x48(%rbp),%eax
   0x00000000004226d5 <+923>:	jbe    0x4226de <mmxu::entry()+932>
   0x00000000004226d7 <+925>:	movl   $0x0,-0x24(%rbp)
   0x00000000004226de <+932>:	shll   $0x18,-0x30(%rbp)
   0x00000000004226e2 <+936>:	mov    -0x2c(%rbp),%eax
   0x00000000004226e5 <+939>:	shl    $0x10,%eax
   0x00000000004226e8 <+942>:	and    $0xff0000,%eax
   0x00000000004226ed <+947>:	mov    %eax,-0x2c(%rbp)
   0x00000000004226f0 <+950>:	mov    -0x28(%rbp),%eax
   0x00000000004226f3 <+953>:	shl    $0x8,%eax
   0x00000000004226f6 <+956>:	and    $0xffff,%eax
   0x00000000004226fb <+961>:	mov    %eax,-0x28(%rbp)
   0x00000000004226fe <+964>:	mov    -0x24(%rbp),%eax
   0x0000000000422701 <+967>:	or     -0x28(%rbp),%eax
   0x0000000000422704 <+970>:	or     -0x2c(%rbp),%eax
   0x0000000000422707 <+973>:	or     -0x30(%rbp),%eax
   0x000000000042270a <+976>:	mov    %eax,-0x14(%rbp)
   0x000000000042270d <+979>:	mov    -0x78(%rbp),%rax
   0x0000000000422711 <+983>:	mov    %rax,%rdi
   0x0000000000422714 <+986>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422719 <+991>:	jmpq   0x4228e5 <mmxu::entry()+1451>
   0x000000000042271e <+996>:	movq   $0x42b30c,-0x20(%rbp)
   0x0000000000422726 <+1004>:	mov    -0x54(%rbp),%eax
   0x0000000000422729 <+1007>:	imul   -0x64(%rbp),%eax
   0x000000000042272d <+1011>:	mov    %eax,-0x30(%rbp)
   0x0000000000422730 <+1014>:	mov    -0x50(%rbp),%eax
   0x0000000000422733 <+1017>:	imul   -0x60(%rbp),%eax
   0x0000000000422737 <+1021>:	mov    %eax,-0x2c(%rbp)
   0x000000000042273a <+1024>:	mov    -0x4c(%rbp),%eax
   0x000000000042273d <+1027>:	imul   -0x5c(%rbp),%eax
   0x0000000000422741 <+1031>:	mov    %eax,-0x28(%rbp)
   0x0000000000422744 <+1034>:	mov    -0x48(%rbp),%eax
   0x0000000000422747 <+1037>:	imul   -0x58(%rbp),%eax
   0x000000000042274b <+1041>:	mov    %eax,-0x24(%rbp)
   0x000000000042274e <+1044>:	cmpl   $0xff,-0x30(%rbp)
   0x0000000000422755 <+1051>:	jbe    0x42275e <mmxu::entry()+1060>
   0x0000000000422757 <+1053>:	movl   $0xff,-0x30(%rbp)
   0x000000000042275e <+1060>:	cmpl   $0xff,-0x2c(%rbp)
   0x0000000000422765 <+1067>:	jbe    0x42276e <mmxu::entry()+1076>
   0x0000000000422767 <+1069>:	movl   $0xff,-0x2c(%rbp)
   0x000000000042276e <+1076>:	cmpl   $0xff,-0x28(%rbp)
   0x0000000000422775 <+1083>:	jbe    0x42277e <mmxu::entry()+1092>
   0x0000000000422777 <+1085>:	movl   $0xff,-0x28(%rbp)
   0x000000000042277e <+1092>:	cmpl   $0xff,-0x24(%rbp)
   0x0000000000422785 <+1099>:	jbe    0x42278e <mmxu::entry()+1108>
   0x0000000000422787 <+1101>:	movl   $0xff,-0x24(%rbp)
   0x000000000042278e <+1108>:	mov    -0x30(%rbp),%edx
   0x0000000000422791 <+1111>:	mov    -0x2c(%rbp),%eax
   0x0000000000422794 <+1114>:	add    %edx,%eax
   0x0000000000422796 <+1116>:	mov    %eax,-0x34(%rbp)
   0x0000000000422799 <+1119>:	mov    -0x28(%rbp),%edx
   0x000000000042279c <+1122>:	mov    -0x24(%rbp),%eax
   0x000000000042279f <+1125>:	add    %edx,%eax
   0x00000000004227a1 <+1127>:	mov    %eax,-0x38(%rbp)
   0x00000000004227a4 <+1130>:	cmpl   $0xff,-0x34(%rbp)
   0x00000000004227ab <+1137>:	jbe    0x4227b4 <mmxu::entry()+1146>
   0x00000000004227ad <+1139>:	movl   $0xff,-0x34(%rbp)
   0x00000000004227b4 <+1146>:	cmpl   $0xff,-0x38(%rbp)
   0x00000000004227bb <+1153>:	jbe    0x4227c4 <mmxu::entry()+1162>
   0x00000000004227bd <+1155>:	movl   $0xff,-0x38(%rbp)
   0x00000000004227c4 <+1162>:	shll   $0x10,-0x34(%rbp)
   0x00000000004227c8 <+1166>:	mov    -0x34(%rbp),%eax
   0x00000000004227cb <+1169>:	or     -0x38(%rbp),%eax
   0x00000000004227ce <+1172>:	mov    %eax,-0x14(%rbp)
   0x00000000004227d1 <+1175>:	mov    -0x78(%rbp),%rax
   0x00000000004227d5 <+1179>:	mov    %rax,%rdi
   0x00000000004227d8 <+1182>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004227dd <+1187>:	jmpq   0x4228e5 <mmxu::entry()+1451>
   0x00000000004227e2 <+1192>:	movq   $0x42b312,-0x20(%rbp)
   0x00000000004227ea <+1200>:	mov    -0x60(%rbp),%eax
   0x00000000004227ed <+1203>:	shl    $0x18,%eax
   0x00000000004227f0 <+1206>:	mov    %eax,-0x30(%rbp)
   0x00000000004227f3 <+1209>:	mov    -0x58(%rbp),%eax
   0x00000000004227f6 <+1212>:	shl    $0x10,%eax
   0x00000000004227f9 <+1215>:	mov    %eax,-0x2c(%rbp)
   0x00000000004227fc <+1218>:	mov    -0x50(%rbp),%eax
   0x00000000004227ff <+1221>:	shl    $0x8,%eax
   0x0000000000422802 <+1224>:	mov    %eax,-0x28(%rbp)
   0x0000000000422805 <+1227>:	mov    -0x48(%rbp),%eax
   0x0000000000422808 <+1230>:	mov    %eax,-0x24(%rbp)
   0x000000000042280b <+1233>:	mov    -0x30(%rbp),%eax
   0x000000000042280e <+1236>:	or     -0x2c(%rbp),%eax
   0x0000000000422811 <+1239>:	or     -0x28(%rbp),%eax
   0x0000000000422814 <+1242>:	or     -0x24(%rbp),%eax
   0x0000000000422817 <+1245>:	mov    %eax,-0x14(%rbp)
   0x000000000042281a <+1248>:	mov    -0x78(%rbp),%rax
   0x000000000042281e <+1252>:	mov    %rax,%rdi
   0x0000000000422821 <+1255>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422826 <+1260>:	jmpq   0x4228e5 <mmxu::entry()+1451>
   0x000000000042282b <+1265>:	movq   $0x42b317,-0x20(%rbp)
   0x0000000000422833 <+1273>:	mov    -0x54(%rbp),%eax
   0x0000000000422836 <+1276>:	cmp    -0x64(%rbp),%eax
   0x0000000000422839 <+1279>:	jne    0x422844 <mmxu::entry()+1290>
   0x000000000042283b <+1281>:	movl   $0xff,-0x30(%rbp)
   0x0000000000422842 <+1288>:	jmp    0x42284b <mmxu::entry()+1297>
   0x0000000000422844 <+1290>:	movl   $0x0,-0x30(%rbp)
   0x000000000042284b <+1297>:	mov    -0x50(%rbp),%eax
   0x000000000042284e <+1300>:	cmp    -0x60(%rbp),%eax
   0x0000000000422851 <+1303>:	jne    0x42285c <mmxu::entry()+1314>
   0x0000000000422853 <+1305>:	movl   $0xff,-0x2c(%rbp)
   0x000000000042285a <+1312>:	jmp    0x422863 <mmxu::entry()+1321>
   0x000000000042285c <+1314>:	movl   $0x0,-0x2c(%rbp)
   0x0000000000422863 <+1321>:	mov    -0x4c(%rbp),%eax
   0x0000000000422866 <+1324>:	cmp    -0x5c(%rbp),%eax
   0x0000000000422869 <+1327>:	jne    0x422874 <mmxu::entry()+1338>
   0x000000000042286b <+1329>:	movl   $0xff,-0x28(%rbp)
   0x0000000000422872 <+1336>:	jmp    0x42287b <mmxu::entry()+1345>
   0x0000000000422874 <+1338>:	movl   $0x0,-0x28(%rbp)
   0x000000000042287b <+1345>:	mov    -0x48(%rbp),%eax
   0x000000000042287e <+1348>:	cmp    -0x58(%rbp),%eax
   0x0000000000422881 <+1351>:	jne    0x42288c <mmxu::entry()+1362>
   0x0000000000422883 <+1353>:	movl   $0xff,-0x24(%rbp)
   0x000000000042288a <+1360>:	jmp    0x422893 <mmxu::entry()+1369>
   0x000000000042288c <+1362>:	movl   $0x0,-0x24(%rbp)
   0x0000000000422893 <+1369>:	shll   $0x18,-0x30(%rbp)
   0x0000000000422897 <+1373>:	shll   $0x10,-0x2c(%rbp)
   0x000000000042289b <+1377>:	shll   $0x8,-0x28(%rbp)
   0x000000000042289f <+1381>:	mov    -0x30(%rbp),%eax
   0x00000000004228a2 <+1384>:	or     -0x2c(%rbp),%eax
   0x00000000004228a5 <+1387>:	or     -0x28(%rbp),%eax
   0x00000000004228a8 <+1390>:	or     -0x24(%rbp),%eax
   0x00000000004228ab <+1393>:	mov    %eax,-0x14(%rbp)
   0x00000000004228ae <+1396>:	mov    -0x78(%rbp),%rax
   0x00000000004228b2 <+1400>:	mov    %rax,%rdi
   0x00000000004228b5 <+1403>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004228ba <+1408>:	jmp    0x4228e5 <mmxu::entry()+1451>
   0x00000000004228bc <+1410>:	movq   $0x42b31d,-0x20(%rbp)
   0x00000000004228c4 <+1418>:	mov    -0x3c(%rbp),%eax
   0x00000000004228c7 <+1421>:	mov    %eax,%esi
   0x00000000004228c9 <+1423>:	mov    $0x42b325,%edi
   0x00000000004228ce <+1428>:	mov    $0x0,%eax
   0x00000000004228d3 <+1433>:	callq  0x407810 <printf@plt>
   0x00000000004228d8 <+1438>:	mov    -0x78(%rbp),%rax
   0x00000000004228dc <+1442>:	mov    %rax,%rdi
   0x00000000004228df <+1445>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004228e4 <+1450>:	nop
   0x00000000004228e5 <+1451>:	mov    -0x14(%rbp),%eax
   0x00000000004228e8 <+1454>:	mov    %eax,-0x6c(%rbp)
   0x00000000004228eb <+1457>:	mov    -0x78(%rbp),%rax
   0x00000000004228ef <+1461>:	lea    0x3b0(%rax),%rdx
   0x00000000004228f6 <+1468>:	lea    -0x6c(%rbp),%rax
   0x00000000004228fa <+1472>:	mov    %rax,%rsi
   0x00000000004228fd <+1475>:	mov    %rdx,%rdi
   0x0000000000422900 <+1478>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000422905 <+1483>:	movb   $0x1,-0x66(%rbp)
   0x0000000000422909 <+1487>:	mov    -0x78(%rbp),%rax
   0x000000000042290d <+1491>:	lea    0x448(%rax),%rdx
   0x0000000000422914 <+1498>:	lea    -0x66(%rbp),%rax
   0x0000000000422918 <+1502>:	mov    %rax,%rsi
   0x000000000042291b <+1505>:	mov    %rdx,%rdi
   0x000000000042291e <+1508>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000422923 <+1513>:	mov    -0x78(%rbp),%rax
   0x0000000000422927 <+1517>:	lea    0x4f0(%rax),%rdx
   0x000000000042292e <+1524>:	lea    -0x70(%rbp),%rax
   0x0000000000422932 <+1528>:	mov    %rax,%rsi
   0x0000000000422935 <+1531>:	mov    %rdx,%rdi
   0x0000000000422938 <+1534>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000042293d <+1539>:	mov    $0x42b340,%edi
   0x0000000000422942 <+1544>:	callq  0x407f50 <puts@plt>
   0x0000000000422947 <+1549>:	mov    $0x4a,%edx
   0x000000000042294c <+1554>:	mov    $0x8,%esi
   0x0000000000422951 <+1559>:	mov    $0x636748,%edi
   0x0000000000422956 <+1564>:	callq  0x41d3d4 <std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)>
   0x000000000042295b <+1569>:	mov    $0x42b367,%esi
   0x0000000000422960 <+1574>:	mov    $0x636740,%edi
   0x0000000000422965 <+1579>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000042296a <+1584>:	mov    $0x42b374,%esi
   0x000000000042296f <+1589>:	mov    %rax,%rdi
   0x0000000000422972 <+1592>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000422977 <+1597>:	mov    %rax,%rdx
   0x000000000042297a <+1600>:	mov    -0x20(%rbp),%rax
   0x000000000042297e <+1604>:	mov    %rax,%rsi
   0x0000000000422981 <+1607>:	mov    %rdx,%rdi
   0x0000000000422984 <+1610>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000422989 <+1615>:	mov    $0x42b37a,%esi
   0x000000000042298e <+1620>:	mov    %rax,%rdi
   0x0000000000422991 <+1623>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000422996 <+1628>:	mov    %rax,%rdx
   0x0000000000422999 <+1631>:	mov    -0x40(%rbp),%eax
   0x000000000042299c <+1634>:	mov    %eax,%esi
   0x000000000042299e <+1636>:	mov    %rdx,%rdi
   0x00000000004229a1 <+1639>:	callq  0x407e40 <_ZNSolsEj@plt>
   0x00000000004229a6 <+1644>:	mov    $0x42b381,%esi
   0x00000000004229ab <+1649>:	mov    %rax,%rdi
   0x00000000004229ae <+1652>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004229b3 <+1657>:	mov    %rax,%rdx
   0x00000000004229b6 <+1660>:	mov    -0x44(%rbp),%eax
   0x00000000004229b9 <+1663>:	mov    %eax,%esi
   0x00000000004229bb <+1665>:	mov    %rdx,%rdi
   0x00000000004229be <+1668>:	callq  0x407e40 <_ZNSolsEj@plt>
   0x00000000004229c3 <+1673>:	mov    $0x407a20,%esi
   0x00000000004229c8 <+1678>:	mov    %rax,%rdi
   0x00000000004229cb <+1681>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x00000000004229d0 <+1686>:	mov    -0x70(%rbp),%ebx
   0x00000000004229d3 <+1689>:	mov    $0x42b367,%esi
   0x00000000004229d8 <+1694>:	mov    $0x636740,%edi
   0x00000000004229dd <+1699>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004229e2 <+1704>:	mov    $0x42b388,%esi
   0x00000000004229e7 <+1709>:	mov    %rax,%rdi
   0x00000000004229ea <+1712>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004229ef <+1717>:	mov    %rax,%rdx
   0x00000000004229f2 <+1720>:	mov    -0x14(%rbp),%eax
   0x00000000004229f5 <+1723>:	mov    %eax,%esi
   0x00000000004229f7 <+1725>:	mov    %rdx,%rdi
   0x00000000004229fa <+1728>:	callq  0x407e40 <_ZNSolsEj@plt>
   0x00000000004229ff <+1733>:	mov    $0x42b38f,%esi
   0x0000000000422a04 <+1738>:	mov    %rax,%rdi
   0x0000000000422a07 <+1741>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000422a0c <+1746>:	mov    %ebx,%esi
   0x0000000000422a0e <+1748>:	mov    %rax,%rdi
   0x0000000000422a11 <+1751>:	callq  0x407e40 <_ZNSolsEj@plt>
   0x0000000000422a16 <+1756>:	mov    $0x4a,%edx
   0x0000000000422a1b <+1761>:	mov    $0x2,%esi
   0x0000000000422a20 <+1766>:	mov    $0x636748,%edi
   0x0000000000422a25 <+1771>:	callq  0x41d3d4 <std::ios_base::setf(std::_Ios_Fmtflags, std::_Ios_Fmtflags)>
   0x0000000000422a2a <+1776>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x0000000000422a2f <+1781>:	mov    %rax,%rbx
   0x0000000000422a32 <+1784>:	mov    $0x42b394,%esi
   0x0000000000422a37 <+1789>:	mov    $0x636740,%edi
   0x0000000000422a3c <+1794>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000422a41 <+1799>:	mov    %rbx,%rsi
   0x0000000000422a44 <+1802>:	mov    %rax,%rdi
   0x0000000000422a47 <+1805>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x0000000000422a4c <+1810>:	mov    $0x407a20,%esi
   0x0000000000422a51 <+1815>:	mov    %rax,%rdi
   0x0000000000422a54 <+1818>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000422a59 <+1823>:	mov    $0x42b340,%edi
   0x0000000000422a5e <+1828>:	callq  0x407f50 <puts@plt>
   0x0000000000422a63 <+1833>:	mov    -0x78(%rbp),%rax
   0x0000000000422a67 <+1837>:	mov    %rax,%rdi
   0x0000000000422a6a <+1840>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422a6f <+1845>:	movb   $0x0,-0x65(%rbp)
   0x0000000000422a73 <+1849>:	mov    -0x78(%rbp),%rax
   0x0000000000422a77 <+1853>:	lea    0x448(%rax),%rdx
   0x0000000000422a7e <+1860>:	lea    -0x65(%rbp),%rax
   0x0000000000422a82 <+1864>:	mov    %rax,%rsi
   0x0000000000422a85 <+1867>:	mov    %rdx,%rdi
   0x0000000000422a88 <+1870>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000422a8d <+1875>:	mov    -0x78(%rbp),%rax
   0x0000000000422a91 <+1879>:	mov    %rax,%rdi
   0x0000000000422a94 <+1882>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422a99 <+1887>:	jmpq   0x4223dd <mmxu::entry()+163>
   0x0000000000422a9e <+1892>:	mov    -0x78(%rbp),%rax
   0x0000000000422aa2 <+1896>:	mov    %rax,%rdi
   0x0000000000422aa5 <+1899>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000422aaa <+1904>:	jmpq   0x4223dd <mmxu::entry()+163>
End of assembler dump.
Line 370 of "main.cpp" starts at address 0x40ab8e <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x40ab9c <__static_initialization_and_destruction_0(int, int)+14>.
Line 102 of "icache.cpp" starts at address 0x41c70b <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c719 <__static_initialization_and_destruction_0(int, int)+14>.
Line 177 of "exec.cpp" starts at address 0x4222d7 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4222e5 <__static_initialization_and_destruction_0(int, int)+14>.
Line 59 of "pic.cpp" starts at address 0x42369f <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4236ad <__static_initialization_and_destruction_0(int, int)+14>.
Line 787 of "decode.cpp" starts at address 0x421cf6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x421d04 <__static_initialization_and_destruction_0(int, int)+14>.
Line 78 of "bios.cpp" starts at address 0x41bf79 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41bf87 <__static_initialization_and_destruction_0(int, int)+14>.
Line 86 of "paging.cpp" starts at address 0x41c443 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c451 <__static_initialization_and_destruction_0(int, int)+14>.
Line 250 of "mmxu.cpp" starts at address 0x422aaf <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422abd <__static_initialization_and_destruction_0(int, int)+14>.
Line 90 of "dcache.cpp" starts at address 0x423461 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x42346f <__static_initialization_and_destruction_0(int, int)+14>.
Line 180 of "floating.cpp" starts at address 0x422fc6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422fd4 <__static_initialization_and_destruction_0(int, int)+14>.
Line 189 of "fetch.cpp" starts at address 0x41d2e1 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41d2ef <__static_initialization_and_destruction_0(int, int)+14>.

Temporary breakpoint 8, bios::entry (this=0x7fffffff4bd0) at bios.cpp:47
47	    	do { wait(); } while ( !(cs == true) ); 
Dump of assembler code for function bios::entry():
   0x000000000041bde0 <+0>:	push   %rbp
   0x000000000041bde1 <+1>:	mov    %rsp,%rbp
   0x000000000041bde4 <+4>:	push   %rbx
   0x000000000041bde5 <+5>:	sub    $0x28,%rsp
   0x000000000041bde9 <+9>:	mov    %rdi,-0x28(%rbp)
=> 0x000000000041bded <+13>:	mov    -0x28(%rbp),%rax
   0x000000000041bdf1 <+17>:	mov    %rax,%rdi
   0x000000000041bdf4 <+20>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041bdf9 <+25>:	mov    -0x28(%rbp),%rax
   0x000000000041bdfd <+29>:	add    $0x160,%rax
   0x000000000041be03 <+35>:	mov    %rax,%rdi
   0x000000000041be06 <+38>:	callq  0x41c058 <sc_core::sc_in<bool>::operator bool const&() const>
   0x000000000041be0b <+43>:	movzbl (%rax),%eax
   0x000000000041be0e <+46>:	xor    $0x1,%eax
   0x000000000041be11 <+49>:	test   %al,%al
   0x000000000041be13 <+51>:	je     0x41be17 <bios::entry()+55>
   0x000000000041be15 <+53>:	jmp    0x41bded <bios::entry()+13>
   0x000000000041be17 <+55>:	mov    -0x28(%rbp),%rax
   0x000000000041be1b <+59>:	add    $0x2a0,%rax
   0x000000000041be21 <+65>:	mov    %rax,%rdi
   0x000000000041be24 <+68>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041be29 <+73>:	mov    (%rax),%eax
   0x000000000041be2b <+75>:	mov    %eax,-0x14(%rbp)
   0x000000000041be2e <+78>:	cmpl   $0x4,-0x14(%rbp)
   0x000000000041be32 <+82>:	ja     0x41bf4a <bios::entry()+362>
   0x000000000041be38 <+88>:	mov    -0x28(%rbp),%rax
   0x000000000041be3c <+92>:	add    $0x200,%rax
   0x000000000041be42 <+98>:	mov    %rax,%rdi
   0x000000000041be45 <+101>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x000000000041be4a <+106>:	movzbl (%rax),%eax
   0x000000000041be4d <+109>:	test   %al,%al
   0x000000000041be4f <+111>:	je     0x41be9d <bios::entry()+189>
   0x000000000041be51 <+113>:	mov    -0x28(%rbp),%rax
   0x000000000041be55 <+117>:	mov    0x5c8(%rax),%eax
   0x000000000041be5b <+123>:	lea    -0x1(%rax),%edx
   0x000000000041be5e <+126>:	mov    -0x28(%rbp),%rax
   0x000000000041be62 <+130>:	mov    %edx,%esi
   0x000000000041be64 <+132>:	mov    %rax,%rdi
   0x000000000041be67 <+135>:	callq  0x41c000 <sc_core::sc_module::wait(int)>
   0x000000000041be6c <+140>:	mov    -0x28(%rbp),%rax
   0x000000000041be70 <+144>:	mov    0x5b8(%rax),%rax
   0x000000000041be77 <+151>:	mov    -0x14(%rbp),%edx
   0x000000000041be7a <+154>:	shl    $0x2,%rdx
   0x000000000041be7e <+158>:	lea    (%rax,%rdx,1),%rbx
   0x000000000041be82 <+162>:	mov    -0x28(%rbp),%rax
   0x000000000041be86 <+166>:	add    $0xd0,%rax
   0x000000000041be8c <+172>:	mov    %rax,%rdi
   0x000000000041be8f <+175>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041be94 <+180>:	mov    (%rax),%eax
   0x000000000041be96 <+182>:	mov    %eax,(%rbx)
   0x000000000041be98 <+184>:	jmpq   0x41bded <bios::entry()+13>
   0x000000000041be9d <+189>:	mov    -0x28(%rbp),%rax
   0x000000000041bea1 <+193>:	mov    0x5c8(%rax),%eax
   0x000000000041bea7 <+199>:	cmp    $0x2,%eax
   0x000000000041beaa <+202>:	jle    0x41bec7 <bios::entry()+231>
   0x000000000041beac <+204>:	mov    -0x28(%rbp),%rax
   0x000000000041beb0 <+208>:	mov    0x5c8(%rax),%eax
   0x000000000041beb6 <+214>:	lea    -0x2(%rax),%edx
   0x000000000041beb9 <+217>:	mov    -0x28(%rbp),%rax
   0x000000000041bebd <+221>:	mov    %edx,%esi
   0x000000000041bebf <+223>:	mov    %rax,%rdi
   0x000000000041bec2 <+226>:	callq  0x41c000 <sc_core::sc_module::wait(int)>
   0x000000000041bec7 <+231>:	mov    -0x28(%rbp),%rax
   0x000000000041becb <+235>:	mov    0x5b8(%rax),%rax
   0x000000000041bed2 <+242>:	mov    -0x14(%rbp),%edx
   0x000000000041bed5 <+245>:	shl    $0x2,%rdx
   0x000000000041bed9 <+249>:	add    %rax,%rdx
   0x000000000041bedc <+252>:	mov    -0x28(%rbp),%rax
   0x000000000041bee0 <+256>:	add    $0x330,%rax
   0x000000000041bee6 <+262>:	mov    %rdx,%rsi
   0x000000000041bee9 <+265>:	mov    %rax,%rdi
   0x000000000041beec <+268>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041bef1 <+273>:	movb   $0x1,-0x17(%rbp)
   0x000000000041bef5 <+277>:	mov    -0x28(%rbp),%rax
   0x000000000041bef9 <+281>:	lea    0x3c8(%rax),%rdx
   0x000000000041bf00 <+288>:	lea    -0x17(%rbp),%rax
   0x000000000041bf04 <+292>:	mov    %rax,%rsi
   0x000000000041bf07 <+295>:	mov    %rdx,%rdi
   0x000000000041bf0a <+298>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041bf0f <+303>:	mov    -0x28(%rbp),%rax
   0x000000000041bf13 <+307>:	mov    %rax,%rdi
   0x000000000041bf16 <+310>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041bf1b <+315>:	movb   $0x0,-0x16(%rbp)
   0x000000000041bf1f <+319>:	mov    -0x28(%rbp),%rax
   0x000000000041bf23 <+323>:	lea    0x3c8(%rax),%rdx
   0x000000000041bf2a <+330>:	lea    -0x16(%rbp),%rax
   0x000000000041bf2e <+334>:	mov    %rax,%rsi
   0x000000000041bf31 <+337>:	mov    %rdx,%rdi
   0x000000000041bf34 <+340>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041bf39 <+345>:	mov    -0x28(%rbp),%rax
   0x000000000041bf3d <+349>:	mov    %rax,%rdi
   0x000000000041bf40 <+352>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041bf45 <+357>:	jmpq   0x41bded <bios::entry()+13>
   0x000000000041bf4a <+362>:	movb   $0x0,-0x15(%rbp)
   0x000000000041bf4e <+366>:	mov    -0x28(%rbp),%rax
   0x000000000041bf52 <+370>:	lea    0x3c8(%rax),%rdx
   0x000000000041bf59 <+377>:	lea    -0x15(%rbp),%rax
   0x000000000041bf5d <+381>:	mov    %rax,%rsi
   0x000000000041bf60 <+384>:	mov    %rdx,%rdi
   0x000000000041bf63 <+387>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041bf68 <+392>:	mov    -0x28(%rbp),%rax
   0x000000000041bf6c <+396>:	mov    %rax,%rdi
   0x000000000041bf6f <+399>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041bf74 <+404>:	jmpq   0x41bded <bios::entry()+13>
End of assembler dump.
Line 370 of "main.cpp" starts at address 0x40ab8e <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x40ab9c <__static_initialization_and_destruction_0(int, int)+14>.
Line 102 of "icache.cpp" starts at address 0x41c70b <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c719 <__static_initialization_and_destruction_0(int, int)+14>.
Line 177 of "exec.cpp" starts at address 0x4222d7 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4222e5 <__static_initialization_and_destruction_0(int, int)+14>.
Line 59 of "pic.cpp" starts at address 0x42369f <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4236ad <__static_initialization_and_destruction_0(int, int)+14>.
Line 787 of "decode.cpp" starts at address 0x421cf6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x421d04 <__static_initialization_and_destruction_0(int, int)+14>.
Line 78 of "bios.cpp" starts at address 0x41bf79 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41bf87 <__static_initialization_and_destruction_0(int, int)+14>.
Line 86 of "paging.cpp" starts at address 0x41c443 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c451 <__static_initialization_and_destruction_0(int, int)+14>.
Line 250 of "mmxu.cpp" starts at address 0x422aaf <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422abd <__static_initialization_and_destruction_0(int, int)+14>.
Line 90 of "dcache.cpp" starts at address 0x423461 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x42346f <__static_initialization_and_destruction_0(int, int)+14>.
Line 180 of "floating.cpp" starts at address 0x422fc6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422fd4 <__static_initialization_and_destruction_0(int, int)+14>.
Line 189 of "fetch.cpp" starts at address 0x41d2e1 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41d2ef <__static_initialization_and_destruction_0(int, int)+14>.

Temporary breakpoint 9, paging::entry (this=0x7fffffff41c0) at paging.cpp:43
43	 int		address=0;
Dump of assembler code for function paging::entry():
   0x000000000041c194 <+0>:	push   %rbp
   0x000000000041c195 <+1>:	mov    %rsp,%rbp
   0x000000000041c198 <+4>:	sub    $0x30,%rsp
   0x000000000041c19c <+8>:	mov    %rdi,-0x28(%rbp)
=> 0x000000000041c1a0 <+12>:	movl   $0x0,-0x4(%rbp)
   0x000000000041c1a7 <+19>:	movl   $0x0,-0x8(%rbp)
   0x000000000041c1ae <+26>:	mov    -0x28(%rbp),%rax
   0x000000000041c1b2 <+30>:	mov    %rax,%rdi
   0x000000000041c1b5 <+33>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041c1ba <+38>:	mov    -0x28(%rbp),%rax
   0x000000000041c1be <+42>:	add    $0x160,%rax
   0x000000000041c1c4 <+48>:	mov    %rax,%rdi
   0x000000000041c1c7 <+51>:	callq  0x41c058 <sc_core::sc_in<bool>::operator bool const&() const>
   0x000000000041c1cc <+56>:	movzbl (%rax),%eax
   0x000000000041c1cf <+59>:	xor    $0x1,%eax
   0x000000000041c1d2 <+62>:	test   %al,%al
   0x000000000041c1d4 <+64>:	je     0x41c1d8 <paging::entry()+68>
   0x000000000041c1d6 <+66>:	jmp    0x41c1ae <paging::entry()+26>
   0x000000000041c1d8 <+68>:	mov    -0x28(%rbp),%rax
   0x000000000041c1dc <+72>:	add    $0x2a0,%rax
   0x000000000041c1e2 <+78>:	mov    %rax,%rdi
   0x000000000041c1e5 <+81>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041c1ea <+86>:	mov    (%rax),%eax
   0x000000000041c1ec <+88>:	mov    %eax,-0x4(%rbp)
   0x000000000041c1ef <+91>:	cmpl   $0x4,-0x4(%rbp)
   0x000000000041c1f3 <+95>:	jle    0x41c1ae <paging::entry()+26>
   0x000000000041c1f5 <+97>:	mov    -0x28(%rbp),%rax
   0x000000000041c1f9 <+101>:	add    $0x200,%rax
   0x000000000041c1ff <+107>:	mov    %rax,%rdi
   0x000000000041c202 <+110>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x000000000041c207 <+115>:	movzbl (%rax),%eax
   0x000000000041c20a <+118>:	test   %al,%al
   0x000000000041c20c <+120>:	je     0x41c2ef <paging::entry()+347>
   0x000000000041c212 <+126>:	mov    -0x28(%rbp),%rax
   0x000000000041c216 <+130>:	add    $0xd0,%rax
   0x000000000041c21c <+136>:	mov    %rax,%rdi
   0x000000000041c21f <+139>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041c224 <+144>:	mov    %rax,%rdx
   0x000000000041c227 <+147>:	mov    -0x28(%rbp),%rax
   0x000000000041c22b <+151>:	add    $0x500,%rax
   0x000000000041c231 <+157>:	mov    %rdx,%rsi
   0x000000000041c234 <+160>:	mov    %rax,%rdi
   0x000000000041c237 <+163>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041c23c <+168>:	movb   $0x1,-0x11(%rbp)
   0x000000000041c240 <+172>:	mov    -0x28(%rbp),%rax
   0x000000000041c244 <+176>:	lea    0x598(%rax),%rdx
   0x000000000041c24b <+183>:	lea    -0x11(%rbp),%rax
   0x000000000041c24f <+187>:	mov    %rax,%rsi
   0x000000000041c252 <+190>:	mov    %rdx,%rdi
   0x000000000041c255 <+193>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041c25a <+198>:	movb   $0x1,-0x10(%rbp)
   0x000000000041c25e <+202>:	mov    -0x28(%rbp),%rax
   0x000000000041c262 <+206>:	lea    0x640(%rax),%rdx
   0x000000000041c269 <+213>:	lea    -0x10(%rbp),%rax
   0x000000000041c26d <+217>:	mov    %rax,%rsi
   0x000000000041c270 <+220>:	mov    %rdx,%rdi
   0x000000000041c273 <+223>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041c278 <+228>:	mov    -0x28(%rbp),%rax
   0x000000000041c27c <+232>:	add    $0x2a0,%rax
   0x000000000041c282 <+238>:	mov    %rax,%rdi
   0x000000000041c285 <+241>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041c28a <+246>:	mov    %rax,%rdx
   0x000000000041c28d <+249>:	mov    -0x28(%rbp),%rax
   0x000000000041c291 <+253>:	add    $0x6e8,%rax
   0x000000000041c297 <+259>:	mov    %rdx,%rsi
   0x000000000041c29a <+262>:	mov    %rax,%rdi
   0x000000000041c29d <+265>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041c2a2 <+270>:	mov    -0x28(%rbp),%rax
   0x000000000041c2a6 <+274>:	mov    %rax,%rdi
   0x000000000041c2a9 <+277>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041c2ae <+282>:	movb   $0x0,-0xf(%rbp)
   0x000000000041c2b2 <+286>:	mov    -0x28(%rbp),%rax
   0x000000000041c2b6 <+290>:	lea    0x598(%rax),%rdx
   0x000000000041c2bd <+297>:	lea    -0xf(%rbp),%rax
   0x000000000041c2c1 <+301>:	mov    %rax,%rsi
   0x000000000041c2c4 <+304>:	mov    %rdx,%rdi
   0x000000000041c2c7 <+307>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041c2cc <+312>:	movb   $0x0,-0xe(%rbp)
   0x000000000041c2d0 <+316>:	mov    -0x28(%rbp),%rax
   0x000000000041c2d4 <+320>:	lea    0x640(%rax),%rdx
   0x000000000041c2db <+327>:	lea    -0xe(%rbp),%rax
   0x000000000041c2df <+331>:	mov    %rax,%rsi
   0x000000000041c2e2 <+334>:	mov    %rdx,%rdi
   0x000000000041c2e5 <+337>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041c2ea <+342>:	jmpq   0x41c1ae <paging::entry()+26>
   0x000000000041c2ef <+347>:	movb   $0x1,-0xd(%rbp)
   0x000000000041c2f3 <+351>:	mov    -0x28(%rbp),%rax
   0x000000000041c2f7 <+355>:	lea    0x598(%rax),%rdx
   0x000000000041c2fe <+362>:	lea    -0xd(%rbp),%rax
   0x000000000041c302 <+366>:	mov    %rax,%rsi
   0x000000000041c305 <+369>:	mov    %rdx,%rdi
   0x000000000041c308 <+372>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041c30d <+377>:	movb   $0x0,-0xc(%rbp)
   0x000000000041c311 <+381>:	mov    -0x28(%rbp),%rax
   0x000000000041c315 <+385>:	lea    0x640(%rax),%rdx
   0x000000000041c31c <+392>:	lea    -0xc(%rbp),%rax
   0x000000000041c320 <+396>:	mov    %rax,%rsi
   0x000000000041c323 <+399>:	mov    %rdx,%rdi
   0x000000000041c326 <+402>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041c32b <+407>:	mov    -0x28(%rbp),%rax
   0x000000000041c32f <+411>:	add    $0x2a0,%rax
   0x000000000041c335 <+417>:	mov    %rax,%rdi
   0x000000000041c338 <+420>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041c33d <+425>:	mov    %rax,%rdx
   0x000000000041c340 <+428>:	mov    -0x28(%rbp),%rax
   0x000000000041c344 <+432>:	add    $0x6e8,%rax
   0x000000000041c34a <+438>:	mov    %rdx,%rsi
   0x000000000041c34d <+441>:	mov    %rax,%rdi
   0x000000000041c350 <+444>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041c355 <+449>:	mov    -0x28(%rbp),%rax
   0x000000000041c359 <+453>:	mov    %rax,%rdi
   0x000000000041c35c <+456>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041c361 <+461>:	mov    -0x28(%rbp),%rax
   0x000000000041c365 <+465>:	mov    %rax,%rdi
   0x000000000041c368 <+468>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041c36d <+473>:	mov    -0x28(%rbp),%rax
   0x000000000041c371 <+477>:	add    $0x3c0,%rax
   0x000000000041c377 <+483>:	mov    %rax,%rdi
   0x000000000041c37a <+486>:	callq  0x41c058 <sc_core::sc_in<bool>::operator bool const&() const>
   0x000000000041c37f <+491>:	movzbl (%rax),%eax
   0x000000000041c382 <+494>:	xor    $0x1,%eax
   0x000000000041c385 <+497>:	test   %al,%al
   0x000000000041c387 <+499>:	je     0x41c38b <paging::entry()+503>
   0x000000000041c389 <+501>:	jmp    0x41c361 <paging::entry()+461>
   0x000000000041c38b <+503>:	mov    -0x28(%rbp),%rax
   0x000000000041c38f <+507>:	add    $0x330,%rax
   0x000000000041c395 <+513>:	mov    %rax,%rdi
   0x000000000041c398 <+516>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041c39d <+521>:	mov    (%rax),%eax
   0x000000000041c39f <+523>:	mov    %eax,-0x8(%rbp)
   0x000000000041c3a2 <+526>:	mov    -0x28(%rbp),%rax
   0x000000000041c3a6 <+530>:	add    $0x330,%rax
   0x000000000041c3ac <+536>:	mov    %rax,%rdi
   0x000000000041c3af <+539>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041c3b4 <+544>:	mov    %rax,%rdx
   0x000000000041c3b7 <+547>:	mov    -0x28(%rbp),%rax
   0x000000000041c3bb <+551>:	add    $0x780,%rax
   0x000000000041c3c1 <+557>:	mov    %rdx,%rsi
   0x000000000041c3c4 <+560>:	mov    %rax,%rdi
   0x000000000041c3c7 <+563>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041c3cc <+568>:	movb   $0x1,-0xb(%rbp)
   0x000000000041c3d0 <+572>:	mov    -0x28(%rbp),%rax
   0x000000000041c3d4 <+576>:	lea    0x818(%rax),%rdx
   0x000000000041c3db <+583>:	lea    -0xb(%rbp),%rax
   0x000000000041c3df <+587>:	mov    %rax,%rsi
   0x000000000041c3e2 <+590>:	mov    %rdx,%rdi
   0x000000000041c3e5 <+593>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041c3ea <+598>:	movb   $0x0,-0xa(%rbp)
   0x000000000041c3ee <+602>:	mov    -0x28(%rbp),%rax
   0x000000000041c3f2 <+606>:	lea    0x598(%rax),%rdx
   0x000000000041c3f9 <+613>:	lea    -0xa(%rbp),%rax
   0x000000000041c3fd <+617>:	mov    %rax,%rsi
   0x000000000041c400 <+620>:	mov    %rdx,%rdi
   0x000000000041c403 <+623>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041c408 <+628>:	mov    -0x28(%rbp),%rax
   0x000000000041c40c <+632>:	mov    %rax,%rdi
   0x000000000041c40f <+635>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041c414 <+640>:	movb   $0x0,-0x9(%rbp)
   0x000000000041c418 <+644>:	mov    -0x28(%rbp),%rax
   0x000000000041c41c <+648>:	lea    0x818(%rax),%rdx
   0x000000000041c423 <+655>:	lea    -0x9(%rbp),%rax
   0x000000000041c427 <+659>:	mov    %rax,%rsi
   0x000000000041c42a <+662>:	mov    %rdx,%rdi
   0x000000000041c42d <+665>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041c432 <+670>:	mov    -0x28(%rbp),%rax
   0x000000000041c436 <+674>:	mov    %rax,%rdi
   0x000000000041c439 <+677>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041c43e <+682>:	jmpq   0x41c1ae <paging::entry()+26>
End of assembler dump.
Line 370 of "main.cpp" starts at address 0x40ab8e <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x40ab9c <__static_initialization_and_destruction_0(int, int)+14>.
Line 102 of "icache.cpp" starts at address 0x41c70b <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c719 <__static_initialization_and_destruction_0(int, int)+14>.
Line 177 of "exec.cpp" starts at address 0x4222d7 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4222e5 <__static_initialization_and_destruction_0(int, int)+14>.
Line 59 of "pic.cpp" starts at address 0x42369f <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4236ad <__static_initialization_and_destruction_0(int, int)+14>.
Line 787 of "decode.cpp" starts at address 0x421cf6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x421d04 <__static_initialization_and_destruction_0(int, int)+14>.
Line 78 of "bios.cpp" starts at address 0x41bf79 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41bf87 <__static_initialization_and_destruction_0(int, int)+14>.
Line 86 of "paging.cpp" starts at address 0x41c443 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c451 <__static_initialization_and_destruction_0(int, int)+14>.
Line 250 of "mmxu.cpp" starts at address 0x422aaf <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422abd <__static_initialization_and_destruction_0(int, int)+14>.
Line 90 of "dcache.cpp" starts at address 0x423461 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x42346f <__static_initialization_and_destruction_0(int, int)+14>.
Line 180 of "floating.cpp" starts at address 0x422fc6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422fd4 <__static_initialization_and_destruction_0(int, int)+14>.
Line 189 of "fetch.cpp" starts at address 0x41d2e1 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41d2ef <__static_initialization_and_destruction_0(int, int)+14>.

Temporary breakpoint 3, icache::entry (this=0x7fffffff3ac0) at icache.cpp:50
50	    	do { wait(); } while ( !(cs == true) ); 
Dump of assembler code for function icache::entry():
   0x000000000041c4a6 <+0>:	push   %rbp
   0x000000000041c4a7 <+1>:	mov    %rsp,%rbp
   0x000000000041c4aa <+4>:	push   %rbx
   0x000000000041c4ab <+5>:	sub    $0x28,%rsp
   0x000000000041c4af <+9>:	mov    %rdi,-0x28(%rbp)
=> 0x000000000041c4b3 <+13>:	mov    -0x28(%rbp),%rax
   0x000000000041c4b7 <+17>:	mov    %rax,%rdi
   0x000000000041c4ba <+20>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041c4bf <+25>:	mov    -0x28(%rbp),%rax
   0x000000000041c4c3 <+29>:	add    $0x160,%rax
   0x000000000041c4c9 <+35>:	mov    %rax,%rdi
   0x000000000041c4cc <+38>:	callq  0x41c058 <sc_core::sc_in<bool>::operator bool const&() const>
   0x000000000041c4d1 <+43>:	movzbl (%rax),%eax
   0x000000000041c4d4 <+46>:	xor    $0x1,%eax
   0x000000000041c4d7 <+49>:	test   %al,%al
   0x000000000041c4d9 <+51>:	je     0x41c4dd <icache::entry()+55>
   0x000000000041c4db <+53>:	jmp    0x41c4b3 <icache::entry()+13>
   0x000000000041c4dd <+55>:	mov    -0x28(%rbp),%rax
   0x000000000041c4e1 <+59>:	add    $0x2a0,%rax
   0x000000000041c4e7 <+65>:	mov    %rax,%rdi
   0x000000000041c4ea <+68>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041c4ef <+73>:	mov    (%rax),%eax
   0x000000000041c4f1 <+75>:	mov    %eax,-0x14(%rbp)
   0x000000000041c4f4 <+78>:	cmpl   $0x5,-0x14(%rbp)
   0x000000000041c4f8 <+82>:	jne    0x41c518 <icache::entry()+114>
   0x000000000041c4fa <+84>:	mov    $0x429cd8,%edi
   0x000000000041c4ff <+89>:	callq  0x407f50 <puts@plt>
   0x000000000041c504 <+94>:	mov    $0x429d30,%edi
   0x000000000041c509 <+99>:	callq  0x407f50 <puts@plt>
   0x000000000041c50e <+104>:	mov    $0x429cd8,%edi
   0x000000000041c513 <+109>:	callq  0x407f50 <puts@plt>
   0x000000000041c518 <+114>:	cmpl   $0x4,-0x14(%rbp)
   0x000000000041c51c <+118>:	jbe    0x41c4b3 <icache::entry()+13>
   0x000000000041c51e <+120>:	mov    -0x28(%rbp),%rax
   0x000000000041c522 <+124>:	add    $0x330,%rax
   0x000000000041c528 <+130>:	mov    %rax,%rdi
   0x000000000041c52b <+133>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x000000000041c530 <+138>:	movzbl (%rax),%eax
   0x000000000041c533 <+141>:	test   %al,%al
   0x000000000041c535 <+143>:	je     0x41c5cf <icache::entry()+297>
   0x000000000041c53b <+149>:	mov    -0x28(%rbp),%rax
   0x000000000041c53f <+153>:	add    $0x3d0,%rax
   0x000000000041c545 <+159>:	mov    %rax,%rdi
   0x000000000041c548 <+162>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x000000000041c54d <+167>:	mov    (%rax),%edx
   0x000000000041c54f <+169>:	mov    -0x28(%rbp),%rax
   0x000000000041c553 <+173>:	mov    %edx,0x6f8(%rax)
   0x000000000041c559 <+179>:	mov    $0x429d81,%edi
   0x000000000041c55e <+184>:	callq  0x407f50 <puts@plt>
   0x000000000041c563 <+189>:	mov    -0x28(%rbp),%rax
   0x000000000041c567 <+193>:	mov    0x6f8(%rax),%eax
   0x000000000041c56d <+199>:	mov    %eax,%esi
   0x000000000041c56f <+201>:	mov    $0x429d9a,%edi
   0x000000000041c574 <+206>:	mov    $0x0,%eax
   0x000000000041c579 <+211>:	callq  0x407810 <printf@plt>
   0x000000000041c57e <+216>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x000000000041c583 <+221>:	mov    %rax,%rbx
   0x000000000041c586 <+224>:	mov    $0x429daa,%esi
   0x000000000041c58b <+229>:	mov    $0x636740,%edi
   0x000000000041c590 <+234>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000041c595 <+239>:	mov    %rbx,%rsi
   0x000000000041c598 <+242>:	mov    %rax,%rdi
   0x000000000041c59b <+245>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x000000000041c5a0 <+250>:	mov    $0x407a20,%esi
   0x000000000041c5a5 <+255>:	mov    %rax,%rdi
   0x000000000041c5a8 <+258>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000041c5ad <+263>:	mov    $0x429d81,%edi
   0x000000000041c5b2 <+268>:	callq  0x407f50 <puts@plt>
   0x000000000041c5b7 <+273>:	mov    -0x28(%rbp),%rax
   0x000000000041c5bb <+277>:	mov    %rax,%rdi
   0x000000000041c5be <+280>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041c5c3 <+285>:	mov    -0x28(%rbp),%rax
   0x000000000041c5c7 <+289>:	mov    %rax,%rdi
   0x000000000041c5ca <+292>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041c5cf <+297>:	mov    -0x28(%rbp),%rax
   0x000000000041c5d3 <+301>:	add    $0x200,%rax
   0x000000000041c5d9 <+307>:	mov    %rax,%rdi
   0x000000000041c5dc <+310>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x000000000041c5e1 <+315>:	movzbl (%rax),%eax
   0x000000000041c5e4 <+318>:	test   %al,%al
   0x000000000041c5e6 <+320>:	je     0x41c646 <icache::entry()+416>
   0x000000000041c5e8 <+322>:	mov    -0x28(%rbp),%rax
   0x000000000041c5ec <+326>:	mov    %rax,%rdi
   0x000000000041c5ef <+329>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041c5f4 <+334>:	cmpl   $0x1f3,-0x14(%rbp)
   0x000000000041c5fb <+341>:	ja     0x41c62b <icache::entry()+389>
   0x000000000041c5fd <+343>:	mov    -0x28(%rbp),%rax
   0x000000000041c601 <+347>:	mov    0x6e8(%rax),%rax
   0x000000000041c608 <+354>:	mov    -0x14(%rbp),%edx
   0x000000000041c60b <+357>:	shl    $0x2,%rdx
   0x000000000041c60f <+361>:	lea    (%rax,%rdx,1),%rbx
   0x000000000041c613 <+365>:	mov    -0x28(%rbp),%rax
   0x000000000041c617 <+369>:	add    $0xd0,%rax
   0x000000000041c61d <+375>:	mov    %rax,%rdi
   0x000000000041c620 <+378>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000041c625 <+383>:	mov    (%rax),%eax
   0x000000000041c627 <+385>:	mov    %eax,(%rbx)
   0x000000000041c629 <+387>:	jmp    0x41c635 <icache::entry()+399>
   0x000000000041c62b <+389>:	mov    $0x429db8,%edi
   0x000000000041c630 <+394>:	callq  0x407f50 <puts@plt>
   0x000000000041c635 <+399>:	mov    -0x28(%rbp),%rax
   0x000000000041c639 <+403>:	mov    %rax,%rdi
   0x000000000041c63c <+406>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041c641 <+411>:	jmpq   0x41c4b3 <icache::entry()+13>
   0x000000000041c646 <+416>:	mov    -0x28(%rbp),%rax
   0x000000000041c64a <+420>:	mov    %rax,%rdi
   0x000000000041c64d <+423>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041c652 <+428>:	cmpl   $0x1f3,-0x14(%rbp)
   0x000000000041c659 <+435>:	jbe    0x41c688 <icache::entry()+482>
   0x000000000041c65b <+437>:	movl   $0xffffffff,-0x1c(%rbp)
   0x000000000041c662 <+444>:	mov    -0x28(%rbp),%rax
   0x000000000041c666 <+448>:	lea    0x460(%rax),%rdx
   0x000000000041c66d <+455>:	lea    -0x1c(%rbp),%rax
   0x000000000041c671 <+459>:	mov    %rax,%rsi
   0x000000000041c674 <+462>:	mov    %rdx,%rdi
   0x000000000041c677 <+465>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041c67c <+470>:	mov    $0x429db8,%edi
   0x000000000041c681 <+475>:	callq  0x407f50 <puts@plt>
   0x000000000041c686 <+480>:	jmp    0x41c6b2 <icache::entry()+524>
   0x000000000041c688 <+482>:	mov    -0x28(%rbp),%rax
   0x000000000041c68c <+486>:	mov    0x6e8(%rax),%rax
   0x000000000041c693 <+493>:	mov    -0x14(%rbp),%edx
   0x000000000041c696 <+496>:	shl    $0x2,%rdx
   0x000000000041c69a <+500>:	add    %rax,%rdx
   0x000000000041c69d <+503>:	mov    -0x28(%rbp),%rax
   0x000000000041c6a1 <+507>:	add    $0x460,%rax
   0x000000000041c6a7 <+513>:	mov    %rdx,%rsi
   0x000000000041c6aa <+516>:	mov    %rax,%rdi
   0x000000000041c6ad <+519>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000041c6b2 <+524>:	movb   $0x1,-0x16(%rbp)
   0x000000000041c6b6 <+528>:	mov    -0x28(%rbp),%rax
   0x000000000041c6ba <+532>:	lea    0x4f8(%rax),%rdx
   0x000000000041c6c1 <+539>:	lea    -0x16(%rbp),%rax
   0x000000000041c6c5 <+543>:	mov    %rax,%rsi
   0x000000000041c6c8 <+546>:	mov    %rdx,%rdi
   0x000000000041c6cb <+549>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041c6d0 <+554>:	mov    -0x28(%rbp),%rax
   0x000000000041c6d4 <+558>:	mov    %rax,%rdi
   0x000000000041c6d7 <+561>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041c6dc <+566>:	movb   $0x0,-0x15(%rbp)
   0x000000000041c6e0 <+570>:	mov    -0x28(%rbp),%rax
   0x000000000041c6e4 <+574>:	lea    0x4f8(%rax),%rdx
   0x000000000041c6eb <+581>:	lea    -0x15(%rbp),%rax
   0x000000000041c6ef <+585>:	mov    %rax,%rsi
   0x000000000041c6f2 <+588>:	mov    %rdx,%rdi
   0x000000000041c6f5 <+591>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x000000000041c6fa <+596>:	mov    -0x28(%rbp),%rax
   0x000000000041c6fe <+600>:	mov    %rax,%rdi
   0x000000000041c701 <+603>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000041c706 <+608>:	jmpq   0x41c4b3 <icache::entry()+13>
End of assembler dump.
Line 370 of "main.cpp" starts at address 0x40ab8e <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x40ab9c <__static_initialization_and_destruction_0(int, int)+14>.
Line 102 of "icache.cpp" starts at address 0x41c70b <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c719 <__static_initialization_and_destruction_0(int, int)+14>.
Line 177 of "exec.cpp" starts at address 0x4222d7 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4222e5 <__static_initialization_and_destruction_0(int, int)+14>.
Line 59 of "pic.cpp" starts at address 0x42369f <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4236ad <__static_initialization_and_destruction_0(int, int)+14>.
Line 787 of "decode.cpp" starts at address 0x421cf6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x421d04 <__static_initialization_and_destruction_0(int, int)+14>.
Line 78 of "bios.cpp" starts at address 0x41bf79 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41bf87 <__static_initialization_and_destruction_0(int, int)+14>.
Line 86 of "paging.cpp" starts at address 0x41c443 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c451 <__static_initialization_and_destruction_0(int, int)+14>.
Line 250 of "mmxu.cpp" starts at address 0x422aaf <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422abd <__static_initialization_and_destruction_0(int, int)+14>.
Line 90 of "dcache.cpp" starts at address 0x423461 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x42346f <__static_initialization_and_destruction_0(int, int)+14>.
Line 180 of "floating.cpp" starts at address 0x422fc6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422fd4 <__static_initialization_and_destruction_0(int, int)+14>.
Line 189 of "fetch.cpp" starts at address 0x41d2e1 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41d2ef <__static_initialization_and_destruction_0(int, int)+14>.

Temporary breakpoint 12, dcache::entry (this=0x7fffffff3340) at dcache.cpp:45
45	  unsigned int  dest_tmp = 0;
Dump of assembler code for function dcache::entry():
   0x0000000000423028 <+0>:	push   %rbp
   0x0000000000423029 <+1>:	mov    %rsp,%rbp
   0x000000000042302c <+4>:	push   %rbx
   0x000000000042302d <+5>:	sub    $0x38,%rsp
   0x0000000000423031 <+9>:	mov    %rdi,-0x38(%rbp)
=> 0x0000000000423035 <+13>:	movl   $0x0,-0x24(%rbp)
   0x000000000042303c <+20>:	mov    -0x38(%rbp),%rax
   0x0000000000423040 <+24>:	mov    %rax,%rdi
   0x0000000000423043 <+27>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000423048 <+32>:	mov    -0x38(%rbp),%rax
   0x000000000042304c <+36>:	add    $0x1f0,%rax
   0x0000000000423052 <+42>:	mov    %rax,%rdi
   0x0000000000423055 <+45>:	callq  0x41c058 <sc_core::sc_in<bool>::operator bool const&() const>
   0x000000000042305a <+50>:	movzbl (%rax),%eax
   0x000000000042305d <+53>:	xor    $0x1,%eax
   0x0000000000423060 <+56>:	test   %al,%al
   0x0000000000423062 <+58>:	je     0x423066 <dcache::entry()+62>
   0x0000000000423064 <+60>:	jmp    0x42303c <dcache::entry()+20>
   0x0000000000423066 <+62>:	mov    -0x38(%rbp),%rax
   0x000000000042306a <+66>:	add    $0x3c0,%rax
   0x0000000000423070 <+72>:	mov    %rax,%rdi
   0x0000000000423073 <+75>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x0000000000423078 <+80>:	mov    (%rax),%eax
   0x000000000042307a <+82>:	mov    %eax,-0x24(%rbp)
   0x000000000042307d <+85>:	mov    -0x38(%rbp),%rax
   0x0000000000423081 <+89>:	add    $0x330,%rax
   0x0000000000423087 <+95>:	mov    %rax,%rdi
   0x000000000042308a <+98>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000042308f <+103>:	mov    (%rax),%eax
   0x0000000000423091 <+105>:	mov    %eax,-0x14(%rbp)
   0x0000000000423094 <+108>:	mov    -0x38(%rbp),%rax
   0x0000000000423098 <+112>:	add    $0x290,%rax
   0x000000000042309e <+118>:	mov    %rax,%rdi
   0x00000000004230a1 <+121>:	callq  0x41c02e <sc_core::sc_in<bool>::read() const>
   0x00000000004230a6 <+126>:	movzbl (%rax),%eax
   0x00000000004230a9 <+129>:	test   %al,%al
   0x00000000004230ab <+131>:	je     0x423202 <dcache::entry()+474>
   0x00000000004230b1 <+137>:	mov    -0x38(%rbp),%rax
   0x00000000004230b5 <+141>:	mov    %rax,%rdi
   0x00000000004230b8 <+144>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004230bd <+149>:	movb   $0x0,-0x1d(%rbp)
   0x00000000004230c1 <+153>:	mov    -0x38(%rbp),%rax
   0x00000000004230c5 <+157>:	lea    0x580(%rax),%rdx
   0x00000000004230cc <+164>:	lea    -0x1d(%rbp),%rax
   0x00000000004230d0 <+168>:	mov    %rax,%rsi
   0x00000000004230d3 <+171>:	mov    %rdx,%rdi
   0x00000000004230d6 <+174>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x00000000004230db <+179>:	mov    -0x38(%rbp),%rax
   0x00000000004230df <+183>:	mov    0x760(%rax),%rax
   0x00000000004230e6 <+190>:	mov    -0x14(%rbp),%edx
   0x00000000004230e9 <+193>:	shl    $0x2,%rdx
   0x00000000004230ed <+197>:	lea    (%rax,%rdx,1),%rbx
   0x00000000004230f1 <+201>:	mov    -0x38(%rbp),%rax
   0x00000000004230f5 <+205>:	add    $0xd0,%rax
   0x00000000004230fb <+211>:	mov    %rax,%rdi
   0x00000000004230fe <+214>:	callq  0x41c796 <sc_core::sc_in<int>::read() const>
   0x0000000000423103 <+219>:	mov    (%rax),%eax
   0x0000000000423105 <+221>:	mov    %eax,(%rbx)
   0x0000000000423107 <+223>:	mov    -0x38(%rbp),%rax
   0x000000000042310b <+227>:	mov    0x768(%rax),%rax
   0x0000000000423112 <+234>:	mov    -0x14(%rbp),%edx
   0x0000000000423115 <+237>:	shl    $0x2,%rdx
   0x0000000000423119 <+241>:	lea    (%rax,%rdx,1),%rbx
   0x000000000042311d <+245>:	mov    -0x38(%rbp),%rax
   0x0000000000423121 <+249>:	add    $0x160,%rax
   0x0000000000423127 <+255>:	mov    %rax,%rdi
   0x000000000042312a <+258>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000042312f <+263>:	mov    (%rax),%eax
   0x0000000000423131 <+265>:	mov    %eax,(%rbx)
   0x0000000000423133 <+267>:	mov    -0x38(%rbp),%rax
   0x0000000000423137 <+271>:	mov    0x770(%rax),%rax
   0x000000000042313e <+278>:	mov    -0x14(%rbp),%edx
   0x0000000000423141 <+281>:	shl    $0x2,%rdx
   0x0000000000423145 <+285>:	lea    (%rax,%rdx,1),%rbx
   0x0000000000423149 <+289>:	mov    -0x38(%rbp),%rax
   0x000000000042314d <+293>:	add    $0x330,%rax
   0x0000000000423153 <+299>:	mov    %rax,%rdi
   0x0000000000423156 <+302>:	callq  0x41c130 <sc_core::sc_in<unsigned int>::read() const>
   0x000000000042315b <+307>:	mov    (%rax),%eax
   0x000000000042315d <+309>:	mov    %eax,(%rbx)
   0x000000000042315f <+311>:	mov    $0x42b778,%esi
   0x0000000000423164 <+316>:	mov    $0x636740,%edi
   0x0000000000423169 <+321>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x000000000042316e <+326>:	mov    $0x407a20,%esi
   0x0000000000423173 <+331>:	mov    %rax,%rdi
   0x0000000000423176 <+334>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000042317b <+339>:	mov    -0x38(%rbp),%rax
   0x000000000042317f <+343>:	mov    0x760(%rax),%rax
   0x0000000000423186 <+350>:	mov    -0x14(%rbp),%edx
   0x0000000000423189 <+353>:	shl    $0x2,%rdx
   0x000000000042318d <+357>:	add    %rdx,%rax
   0x0000000000423190 <+360>:	mov    (%rax),%eax
   0x0000000000423192 <+362>:	mov    -0x14(%rbp),%edx
   0x0000000000423195 <+365>:	mov    %eax,%esi
   0x0000000000423197 <+367>:	mov    $0x42b79f,%edi
   0x000000000042319c <+372>:	mov    $0x0,%eax
   0x00000000004231a1 <+377>:	callq  0x407810 <printf@plt>
   0x00000000004231a6 <+382>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x00000000004231ab <+387>:	mov    %rax,%rbx
   0x00000000004231ae <+390>:	mov    $0x42b7ba,%esi
   0x00000000004231b3 <+395>:	mov    $0x636740,%edi
   0x00000000004231b8 <+400>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004231bd <+405>:	mov    %rbx,%rsi
   0x00000000004231c0 <+408>:	mov    %rax,%rdi
   0x00000000004231c3 <+411>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x00000000004231c8 <+416>:	mov    $0x407a20,%esi
   0x00000000004231cd <+421>:	mov    %rax,%rdi
   0x00000000004231d0 <+424>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x00000000004231d5 <+429>:	mov    $0x42b778,%esi
   0x00000000004231da <+434>:	mov    $0x636740,%edi
   0x00000000004231df <+439>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004231e4 <+444>:	mov    $0x407a20,%esi
   0x00000000004231e9 <+449>:	mov    %rax,%rdi
   0x00000000004231ec <+452>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x00000000004231f1 <+457>:	mov    -0x38(%rbp),%rax
   0x00000000004231f5 <+461>:	mov    %rax,%rdi
   0x00000000004231f8 <+464>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x00000000004231fd <+469>:	jmpq   0x42303c <dcache::entry()+20>
   0x0000000000423202 <+474>:	mov    -0x38(%rbp),%rax
   0x0000000000423206 <+478>:	mov    %rax,%rdi
   0x0000000000423209 <+481>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000042320e <+486>:	mov    -0x38(%rbp),%rax
   0x0000000000423212 <+490>:	mov    0x760(%rax),%rax
   0x0000000000423219 <+497>:	mov    -0x14(%rbp),%edx
   0x000000000042321c <+500>:	shl    $0x2,%rdx
   0x0000000000423220 <+504>:	add    %rdx,%rax
   0x0000000000423223 <+507>:	mov    (%rax),%eax
   0x0000000000423225 <+509>:	mov    %eax,-0x1c(%rbp)
   0x0000000000423228 <+512>:	mov    -0x38(%rbp),%rax
   0x000000000042322c <+516>:	lea    0x4e8(%rax),%rdx
   0x0000000000423233 <+523>:	lea    -0x1c(%rbp),%rax
   0x0000000000423237 <+527>:	mov    %rax,%rsi
   0x000000000042323a <+530>:	mov    %rdx,%rdi
   0x000000000042323d <+533>:	callq  0x417e66 <sc_core::sc_inout<int>::write(int const&)>
   0x0000000000423242 <+538>:	mov    -0x38(%rbp),%rax
   0x0000000000423246 <+542>:	mov    0x768(%rax),%rax
   0x000000000042324d <+549>:	mov    -0x14(%rbp),%edx
   0x0000000000423250 <+552>:	shl    $0x2,%rdx
   0x0000000000423254 <+556>:	add    %rax,%rdx
   0x0000000000423257 <+559>:	mov    -0x38(%rbp),%rax
   0x000000000042325b <+563>:	add    $0x628,%rax
   0x0000000000423261 <+569>:	mov    %rdx,%rsi
   0x0000000000423264 <+572>:	mov    %rax,%rdi
   0x0000000000423267 <+575>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x000000000042326c <+580>:	mov    -0x38(%rbp),%rax
   0x0000000000423270 <+584>:	lea    0x450(%rax),%rdx
   0x0000000000423277 <+591>:	lea    -0x24(%rbp),%rax
   0x000000000042327b <+595>:	mov    %rax,%rsi
   0x000000000042327e <+598>:	mov    %rdx,%rdi
   0x0000000000423281 <+601>:	callq  0x418146 <sc_core::sc_inout<unsigned int>::write(unsigned int const&)>
   0x0000000000423286 <+606>:	movb   $0x1,-0x16(%rbp)
   0x000000000042328a <+610>:	mov    -0x38(%rbp),%rax
   0x000000000042328e <+614>:	lea    0x580(%rax),%rdx
   0x0000000000423295 <+621>:	lea    -0x16(%rbp),%rax
   0x0000000000423299 <+625>:	mov    %rax,%rsi
   0x000000000042329c <+628>:	mov    %rdx,%rdi
   0x000000000042329f <+631>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x00000000004232a4 <+636>:	mov    $0x42b778,%esi
   0x00000000004232a9 <+641>:	mov    $0x636740,%edi
   0x00000000004232ae <+646>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004232b3 <+651>:	mov    $0x407a20,%esi
   0x00000000004232b8 <+656>:	mov    %rax,%rdi
   0x00000000004232bb <+659>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x00000000004232c0 <+664>:	mov    -0x24(%rbp),%ecx
   0x00000000004232c3 <+667>:	mov    -0x38(%rbp),%rax
   0x00000000004232c7 <+671>:	mov    0x760(%rax),%rax
   0x00000000004232ce <+678>:	mov    -0x14(%rbp),%edx
   0x00000000004232d1 <+681>:	shl    $0x2,%rdx
   0x00000000004232d5 <+685>:	add    %rdx,%rax
   0x00000000004232d8 <+688>:	mov    (%rax),%eax
   0x00000000004232da <+690>:	mov    -0x14(%rbp),%edx
   0x00000000004232dd <+693>:	mov    %eax,%esi
   0x00000000004232df <+695>:	mov    $0x42b7c8,%edi
   0x00000000004232e4 <+700>:	mov    $0x0,%eax
   0x00000000004232e9 <+705>:	callq  0x407810 <printf@plt>
   0x00000000004232ee <+710>:	mov    -0x38(%rbp),%rax
   0x00000000004232f2 <+714>:	mov    0x770(%rax),%rax
   0x00000000004232f9 <+721>:	mov    -0x14(%rbp),%edx
   0x00000000004232fc <+724>:	shl    $0x2,%rdx
   0x0000000000423300 <+728>:	add    %rdx,%rax
   0x0000000000423303 <+731>:	mov    (%rax),%eax
   0x0000000000423305 <+733>:	mov    %eax,%esi
   0x0000000000423307 <+735>:	mov    $0x42b7e9,%edi
   0x000000000042330c <+740>:	mov    $0x0,%eax
   0x0000000000423311 <+745>:	callq  0x407810 <printf@plt>
   0x0000000000423316 <+750>:	mov    -0x38(%rbp),%rax
   0x000000000042331a <+754>:	mov    0x768(%rax),%rax
   0x0000000000423321 <+761>:	mov    -0x14(%rbp),%edx
   0x0000000000423324 <+764>:	shl    $0x2,%rdx
   0x0000000000423328 <+768>:	add    %rdx,%rax
   0x000000000042332b <+771>:	mov    (%rax),%eax
   0x000000000042332d <+773>:	cmp    $0x3,%eax
   0x0000000000423330 <+776>:	jne    0x423346 <dcache::entry()+798>
   0x0000000000423332 <+778>:	mov    $0x42b800,%edi
   0x0000000000423337 <+783>:	mov    $0x0,%eax
   0x000000000042333c <+788>:	callq  0x407810 <printf@plt>
   0x0000000000423341 <+793>:	jmpq   0x4233db <dcache::entry()+947>
   0x0000000000423346 <+798>:	mov    -0x38(%rbp),%rax
   0x000000000042334a <+802>:	mov    0x768(%rax),%rax
   0x0000000000423351 <+809>:	mov    -0x14(%rbp),%edx
   0x0000000000423354 <+812>:	shl    $0x2,%rdx
   0x0000000000423358 <+816>:	add    %rdx,%rax
   0x000000000042335b <+819>:	mov    (%rax),%eax
   0x000000000042335d <+821>:	cmp    $0x2,%eax
   0x0000000000423360 <+824>:	jne    0x423373 <dcache::entry()+843>
   0x0000000000423362 <+826>:	mov    $0x42b805,%edi
   0x0000000000423367 <+831>:	mov    $0x0,%eax
   0x000000000042336c <+836>:	callq  0x407810 <printf@plt>
   0x0000000000423371 <+841>:	jmp    0x4233db <dcache::entry()+947>
   0x0000000000423373 <+843>:	mov    -0x38(%rbp),%rax
   0x0000000000423377 <+847>:	mov    0x768(%rax),%rax
   0x000000000042337e <+854>:	mov    -0x14(%rbp),%edx
   0x0000000000423381 <+857>:	shl    $0x2,%rdx
   0x0000000000423385 <+861>:	add    %rdx,%rax
   0x0000000000423388 <+864>:	mov    (%rax),%eax
   0x000000000042338a <+866>:	cmp    $0x1,%eax
   0x000000000042338d <+869>:	jne    0x4233a0 <dcache::entry()+888>
   0x000000000042338f <+871>:	mov    $0x42b80a,%edi
   0x0000000000423394 <+876>:	mov    $0x0,%eax
   0x0000000000423399 <+881>:	callq  0x407810 <printf@plt>
   0x000000000042339e <+886>:	jmp    0x4233db <dcache::entry()+947>
   0x00000000004233a0 <+888>:	mov    -0x38(%rbp),%rax
   0x00000000004233a4 <+892>:	mov    0x768(%rax),%rax
   0x00000000004233ab <+899>:	mov    -0x14(%rbp),%edx
   0x00000000004233ae <+902>:	shl    $0x2,%rdx
   0x00000000004233b2 <+906>:	add    %rdx,%rax
   0x00000000004233b5 <+909>:	mov    (%rax),%eax
   0x00000000004233b7 <+911>:	test   %eax,%eax
   0x00000000004233b9 <+913>:	jne    0x4233cc <dcache::entry()+932>
   0x00000000004233bb <+915>:	mov    $0x42b80f,%edi
   0x00000000004233c0 <+920>:	mov    $0x0,%eax
   0x00000000004233c5 <+925>:	callq  0x407810 <printf@plt>
   0x00000000004233ca <+930>:	jmp    0x4233db <dcache::entry()+947>
   0x00000000004233cc <+932>:	mov    $0x42b814,%edi
   0x00000000004233d1 <+937>:	mov    $0x0,%eax
   0x00000000004233d6 <+942>:	callq  0x407810 <printf@plt>
   0x00000000004233db <+947>:	callq  0x407df0 <_ZN7sc_core13sc_time_stampEv@plt>
   0x00000000004233e0 <+952>:	mov    %rax,%rbx
   0x00000000004233e3 <+955>:	mov    $0x42b7ba,%esi
   0x00000000004233e8 <+960>:	mov    $0x636740,%edi
   0x00000000004233ed <+965>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x00000000004233f2 <+970>:	mov    %rbx,%rsi
   0x00000000004233f5 <+973>:	mov    %rax,%rdi
   0x00000000004233f8 <+976>:	callq  0x41c76d <sc_core::operator<<(std::ostream&, sc_core::sc_time const&)>
   0x00000000004233fd <+981>:	mov    $0x407a20,%esi
   0x0000000000423402 <+986>:	mov    %rax,%rdi
   0x0000000000423405 <+989>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x000000000042340a <+994>:	mov    $0x42b778,%esi
   0x000000000042340f <+999>:	mov    $0x636740,%edi
   0x0000000000423414 <+1004>:	callq  0x407ca0 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
   0x0000000000423419 <+1009>:	mov    $0x407a20,%esi
   0x000000000042341e <+1014>:	mov    %rax,%rdi
   0x0000000000423421 <+1017>:	callq  0x407cf0 <_ZNSolsEPFRSoS_E@plt>
   0x0000000000423426 <+1022>:	mov    -0x38(%rbp),%rax
   0x000000000042342a <+1026>:	mov    %rax,%rdi
   0x000000000042342d <+1029>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x0000000000423432 <+1034>:	movb   $0x0,-0x15(%rbp)
   0x0000000000423436 <+1038>:	mov    -0x38(%rbp),%rax
   0x000000000042343a <+1042>:	lea    0x580(%rax),%rdx
   0x0000000000423441 <+1049>:	lea    -0x15(%rbp),%rax
   0x0000000000423445 <+1053>:	mov    %rax,%rsi
   0x0000000000423448 <+1056>:	mov    %rdx,%rdi
   0x000000000042344b <+1059>:	callq  0x41c082 <sc_core::sc_inout<bool>::write(bool const&)>
   0x0000000000423450 <+1064>:	mov    -0x38(%rbp),%rax
   0x0000000000423454 <+1068>:	mov    %rax,%rdi
   0x0000000000423457 <+1071>:	callq  0x41bfdc <sc_core::sc_module::wait()>
   0x000000000042345c <+1076>:	jmpq   0x42303c <dcache::entry()+20>
End of assembler dump.
Line 370 of "main.cpp" starts at address 0x40ab8e <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x40ab9c <__static_initialization_and_destruction_0(int, int)+14>.
Line 102 of "icache.cpp" starts at address 0x41c70b <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c719 <__static_initialization_and_destruction_0(int, int)+14>.
Line 177 of "exec.cpp" starts at address 0x4222d7 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4222e5 <__static_initialization_and_destruction_0(int, int)+14>.
Line 59 of "pic.cpp" starts at address 0x42369f <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x4236ad <__static_initialization_and_destruction_0(int, int)+14>.
Line 787 of "decode.cpp" starts at address 0x421cf6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x421d04 <__static_initialization_and_destruction_0(int, int)+14>.
Line 78 of "bios.cpp" starts at address 0x41bf79 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41bf87 <__static_initialization_and_destruction_0(int, int)+14>.
Line 86 of "paging.cpp" starts at address 0x41c443 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41c451 <__static_initialization_and_destruction_0(int, int)+14>.
Line 250 of "mmxu.cpp" starts at address 0x422aaf <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422abd <__static_initialization_and_destruction_0(int, int)+14>.
Line 90 of "dcache.cpp" starts at address 0x423461 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x42346f <__static_initialization_and_destruction_0(int, int)+14>.
Line 180 of "floating.cpp" starts at address 0x422fc6 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x422fd4 <__static_initialization_and_destruction_0(int, int)+14>.
Line 189 of "fetch.cpp" starts at address 0x41d2e1 <__static_initialization_and_destruction_0(int, int)>
   and ends at 0x41d2ef <__static_initialization_and_destruction_0(int, int)+14>.
[Inferior 1 (process 13980) exited normally]
(gdb) quit
